using System;
using System.Collections.Generic;
using PdfSharp.Drawing;
using PdfSharp.Pdf;
using TelnetData;
using System.Linq;
using System.Drawing;
using Entidades;
using System.Diagnostics;


/*
 
25/08/2016 : Agregado de Ingresos Brutos en Facturas Intercompany 
*/

namespace TelnetPDF
{

    public static class Extensions
    {
        static int i = 0;
        




        public static IEnumerable<int> IndexesOf(this string haystack, string needle)
        {
            int lastIndex = 0;
            while (true)
            {
                int index = haystack.IndexOf(needle, lastIndex);
                if (index == -1)
                {
                    yield break;
                }
                yield return index;
                lastIndex = index + needle.Length;
            }
        }


    }

    public class comprobantesPDF
    {

        System.Drawing.Text.PrivateFontCollection privateFonts = new System.Drawing.Text.PrivateFontCollection();
        System.Drawing.Text.PrivateFontCollection privateFonts1 = new System.Drawing.Text.PrivateFontCollection();

        XFont fontArial5 = new XFont("Arial", 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial6 = new XFont("Arial", 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial6B = new XFont("Arial", 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial7 = new XFont("Arial", 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial7B = new XFont("Arial", 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial8B = new XFont("Arial", 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial8 = new XFont("Arial", 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial9B = new XFont("Arial", 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial9 = new XFont("Arial", 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial10 = new XFont("Arial", 10, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial12B = new XFont("Arial", 12, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial12 = new XFont("Arial", 12, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial13 = new XFont("Arial", 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial14 = new XFont("Arial", 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial15B = new XFont("Arial", 15, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial21 = new XFont("Arial", 21, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArial21B = new XFont("Arial", 21, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArialBlack23 = new XFont("Arial Black", 23, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArialBlack24 = new XFont("Arial Black", 24, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArialBlack28B = new XFont("Arial Black", 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XFont fontArialBlack30B = new XFont("Arial Black", 30, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
        XBrush BrushBlack = XBrushes.Black;
        XBrush BrushWhite = XBrushes.White;
        XBrush BrushLightGray = XBrushes.LightGray;
        XBrush BrushDarkGray = XBrushes.DarkGray;
        XBrush BrushVerdeAntina = new XSolidBrush(XColor.FromArgb(162,208,120));
        XBrush BrushBoleta2015_1 = new XSolidBrush(XColor.FromArgb(55 ,53, 53));
        XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
        DateTime dFechaCambioTextoSucursalMoron = new DateTime(2015, 07, 24);
        DateTime dFechaBarraAfipSalida2 = new DateTime(2015, 11, 26);
        DateTime dFechaBarraAfipSalida3_6_4 = new DateTime(2015, 12, 09);
        DateTime dFechaBarraAfipSalida7 = new DateTime(2015, 11, 30);
 


        /// 29/06/2017 Proceso por Lotes
        ///
        public string GenerarFacturasLotes(IList<string> Ilote, ClassParametrosTelnetPDF cs, Boolean ReturnFilename, Boolean EsCopia,string SecLote)
        {

              Logger.Logger cl = new Logger.Logger();
            ClassParametrosTelnetData cpd = new ClassParametrosTelnetData();
            TelnetData.TelnetData td = new TelnetData.TelnetData();


            try
            {
                var url = cs.FileRoute;
                string retvalue;
                string file;

                PdfDocument pf = new PdfDocument();
               // cl.log("Previa al armado de Telnet : " + Ilote.Count.ToString() + " Comprobantes " + SecLote.ToString());
                IList<Comprobantes> store = td.DatosComprobanteLote(Ilote, cpd, true);
              // cl.log("Finaliza el armado de Telnet : " + Ilote.Count.ToString() + " Comprobantes " + SecLote.ToString());
                retvalue = string.Empty;

                if (store.Count > 0)
                {
                  //  cl.log("Previa al armado de PDF : " + store.Count.ToString() + " Comprobantes " + SecLote.ToString());
                    pf = GeneraComprobantesPDF(cs, store);
                  //  cl.log("Finalizo al armado de PDF : " + store.Count.ToString() + " Comprobantes " + SecLote.ToString());


                    file = SecLote + "_" + sGuidName().Substring(0, 10) + ".pdf";
                    retvalue = "<a href='" + cs.Urlpath + file + "'>" + cs.Urlmensaje + "</a>";

                    string PathFile = url + file;
                    pf.Save(PathFile);
                    pf.Close();
                }
                return retvalue;
            }
            catch (Exception ex)
            {
                //return null;

                cl.log( ex.Message + " GenerarFacturasLotes");
                throw new System.ArgumentException(ex.Message, " GenerarFacturasLotes");

            }

    
        }

        /// <summary>
        /// 04/06/2015 Arreglos en la devolucion de valores con pipe
        /// </summary>
        /// <param name="sNumComprobante"></param>
        /// <param name="cs"></param>
        /// <param name="ReturnFilename"></param>
        /// <param name="EsCopia"></param>
        /// <returns></returns>
        public string GenerarFactura(string sNumComprobante, ClassParametrosTelnetPDF cs, Boolean ReturnFilename, Boolean EsCopia)
        {
            try
            {
               // throw new System.ArgumentException("Probando a ver si cuelga");
                // sNumComprobante = "1B*2600000002|1A*2600000002|1A*2600000004|1A*2600000005|1A*2600000006|1A*2000001863";
                /*
                 1A*2600000002|1A*2600000004|1A*2600000005|1A*2600000006
                 |1A*2000001863|1B*2000845518|1A*2000001864|1A*2000001864|1A*2000001863"; 
                 * // 1A*2000001863|
               
                 */
                //DEbugueo Para Test de PErfomance Claudia
                Logger.Logger cl = new Logger.Logger();
              //  cl.log("iniciando Ciclo: " + sNumComprobante);
                

                var url = cs.FileRoute;
                string retvalue;
                string file;

                PdfDocument pf = new PdfDocument();


                ClassParametrosTelnetData cpd = new ClassParametrosTelnetData();
                TelnetData.TelnetData td = new TelnetData.TelnetData();
                cpd.Archivo = cs.Archivo2;
                cpd.Archivo2 = cs.Archivo2;
                cpd.CantidadCamposxRegistro = cs.CantidadCamposxRegistro;
                cpd.CnnStringSqlServerSinPassword = cs.CnnStringSqlServerSinPassword;
                cpd.CuentaUniverse = cs.CuentaUniverse;
                cpd.IVA = cs.IVA;
                cpd.PasswordSqlServerEncriptado = cs.PasswordSqlServerEncriptado;
                cpd.PasswordUniverseEncriptado = cs.PasswordUniverseEncriptado;
                cpd.Path = cs.Path;
                cpd.Path2 = cs.Path2;
                cpd.ServerUniverse = cs.ServerUniverse;
                cpd.UsuarioUniverse = cs.UsuarioUniverse;
              //  cl.log("Ingreso a TelnetData ");

                IList<Comprobantes> store = td.DatosComprobante(sNumComprobante, cpd, EsCopia);
                //DEbugueo Para Test de PErfomance Claudia
               
           //     cl.log("Vuelve de TelnetData : " +  store.Count.ToString() + " Comprobantes");


                if (store.Count > 0)
                {
               // cl.log("Previa al armado de PDF : " + store.Count.ToString() + " Comprobantes");
                    pf = GeneraComprobantesPDF(cs, store);
              // cl.log("Finalizo al armado de PDF : " + store.Count.ToString() + " Comprobantes");
                    if (ReturnFilename == true)
                        file = retvalue = sGuidName();
                    else
                    {
                        if (store.Count > 1)
                            file = sGuidName();
                        else
                            file = sNumComprobante.Replace("*", string.Empty) + "_" + sGuidName().Substring(0,4) + ".pdf";


                        retvalue = "<a href='" + cs.Urlpath + file + "'>" + cs.Urlmensaje + "</a>";
                    }
                    string PathFile = url + file;
                    pf.Save(PathFile);
                    pf.Close();
                    return retvalue;
                }
                else
                {
                    return "No se encontraron Datos";
                }
            }
            catch (Exception ex)
            {
                //return null;
                Logger.Logger cl = new Logger.Logger();
                cl.log(ex.Message.ToString());
                throw ex;
            }


        }


        /// <summary>
        /// Metodo que Genera los PDFS
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="store"></param>
        /// <returns></returns>
        private PdfDocument GeneraComprobantesPDF(ClassParametrosTelnetPDF cs, IList<Comprobantes> comprobantes)
        {
            PdfDocument pdf = new PdfDocument();
            pdf.Info.Title = "Comprobantes";
            DateTime dFechaCambioDiseño;
            DateTime dFechaCambioDiseñoIIBBAgip;
            DateTime dFechaCambioDiseñoIntercompany;
            DateTime dFechaCambioDiseñoMediosPAgos2017;
            DateTime dFechaRVPApto43;

            foreach (var s in comprobantes)
            {
                if (s.Encontrada == true)
                {
                    string sc = s.Scomprobante;
                    string[] splitComprobante = sc.Split(new string[] { "*" }, StringSplitOptions.None);
                    string s1 = splitComprobante[0].Substring(0, 1);
                    string s2 = splitComprobante[0].Substring(1, 1);
                    string s3 = splitComprobante[1].Substring(splitComprobante[1].Length - 8);
                  //  if (s.SegHoja =="1")
                  //  dFechaCambioDiseño = new DateTime(2015, 12, 01);  //Fecha a partir de la cual van a salir con el nuevo diseño
                  //  else
                    dFechaCambioDiseño = new DateTime(2015, 12, 02);  // Fecha a partir de la cual van a salir con el nuevo diseño
                    dFechaCambioDiseñoIntercompany = new DateTime(2016, 8, 30);  // Fecha a partir de la cual las Facturas Intercompany van a tener IIBB
                    dFechaCambioDiseñoIIBBAgip = new DateTime(2017, 2, 28);  // Fecha a partir de la cual los comprobantes van a tener IIBB CABA
                    dFechaCambioDiseñoMediosPAgos2017 = new DateTime(2017, 7, 31);  
                    dFechaRVPApto43 = new DateTime(2018, 3, 15); 

                    DateTime dFechaFactura = System.Convert.ToDateTime(s.FechaFactura);
                    switch (s.Salida)
                      {
                          case "1": // PosPAgo
                          case "8": // PosPAgo
                            if (dFechaFactura >= dFechaCambioDiseño)
                              {
                                  if (s2 == "A")
                                  {
                                      if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                                      {
                                        this.FgetPageFacturaAsal1Mod092017(cs, s, pdf);
                                         if (s.SegHoja == "1")
                                        {
                                            this.FgetPageFacturaAsal1Mod092017_2(cs, s, pdf);
                                        }                                            
                                      }
                                      else
                                      {
                                        this.FgetPageFacturaAsal1Mod092015(cs, s, pdf);
                                        if (s.SegHoja == "1")
                                        {
                                         this.FgetPageFacturaAsal1Mod092015_2(cs, s, pdf);
                                        }
                                      }
                                  }
                                if (s2 == "B")
                                  {
                                    this.FgetPageFacturaBsal1Mod092015(cs, s, pdf);
                                      if (s.SegHoja == "1")
                                    {
                                        this.FgetPageFacturaBsal1Mod092015_2(cs, s, pdf);
                                    }
                                    if (s.TerHoja == "1")
                                    {
                                        this.FgetPageFacturaBsal1Mod092015_3(cs, s, pdf);
                                    }
                                    if (s.CuartaHoja == "1")
                                    {
                                        this.GetPageFacturaBsal1Mod092015_4(cs, s, pdf);
                                    }
                                }

                              }
                              else
                              {
                                  if (s.SegHoja == "1")
                                  {
                                    this.FgetPageFacturaBsal1Mod092015_fi(cs, s, pdf);
                                    this.FgetPageFacturaBsal1Mod092015_2_fi(cs, s, pdf);
                                  }
                                  else
                                  {
                                      // if (s.Empresa == "Telcom")
                                      // {
                                          if (s2 == "A")
                                          {
                                              this.FgetPageFacturaAsal1(cs, s, pdf);
                                          }

                                          if (s2 == "B")
                                          {
                                        this.FgetPAgeFacturaBsal1(cs, s, pdf);
                                          }
                                      //}
                                      //else
                                      //{
                                      //    FgetPageFacturaBsal1Mod092015_fi(cs, s, pdf);
                                      //}

                                  }
                              }
                            break;

                       case "2":  // RVPA
                        if (s2 == "A")
                            if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                            {
                                if (dFechaFactura >= dFechaCambioDiseñoMediosPAgos2017)
                                {
                                   // FgetPageFacturaAsal2_8_2017(cs, s, pdf);
                                    if (dFechaFactura >= dFechaCambioDiseñoMediosPAgos2017)  //<-aca
                                    {
                                        this.FgetPageFacturaAsal22_3_2018(cs, s, pdf);
                                    }
                                    else
                                    {
                                        this.FgetPageFacturaAsal2_8_2017(cs, s, pdf);
                                    }

                                }
                                else 
                                {
                                    this.FgetPageFacturaAsal2_2017(cs, s, pdf);                                
                                }
                            }
                            else
                            {
                                FgetPageFacturaAsal2(cs, s, pdf);
                            }

                        if (s2 == "B")
                        {
                            if (dFechaFactura >= dFechaCambioDiseñoMediosPAgos2017)
                            {
                                if (dFechaFactura >= dFechaCambioDiseñoMediosPAgos2017)  //<-aca
                                {
                                    this.FgetPageFacturaBsal22_3_2018(cs, s, pdf);
                                }
                                else
                                    {
                                    this.FgetPageFacturaBsal2_8_2017(cs, s, pdf);
                                    }
                            }
                            else 
                            {
                                this.FgetPageFacturaBsal2(cs, s, pdf);
                            }

                            }
                       break;


                       case "3": // Recargas Prepago
                         if (s2 == "A")
                             if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                             {
                                 this.FgetPageFacturaAsal3_2017(cs, s, pdf);
                             }
                             else
                             {
                                 this.FgetPageFacturaAsal3(cs, s, pdf);
                             }

                         if (s2 == "B")
                            FgetPageFacturaBsal3(cs, s, pdf);

                       break;


                       case "4":  //Intercompany
                        if (s2 == "A")
                            if (dFechaFactura >= dFechaCambioDiseñoIntercompany)
                            {
                                if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                                {
                                    FgetPageFacturaAsal4MejoraIIBB_2017(cs, s, pdf);
                                }
                                else
                                {
                                    FgetPageFacturaAsal4MejoraIIBB(cs, s, pdf);
                                }
                            }
                            else 
                            {
                                FgetPageFacturaAsal4(cs, s, pdf);
                            }

                        if (s2 == "B")
                            FgetPageFacturaBsal4(cs, s, pdf);

                       break;

                          case "5":   // Ventas de Kits Callcenter

                            if (s2 == "A")
                                if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                                {
                                  //  if (dFechaFactura >= dFechaCambioDiseñoMediosPAgos2017)
                                 //   {
                                 //       FgetPageFacturaAsal5_8_2017(cs, s, pdf);
                                 //   }
                                 //   else
                                 //   {
                                        FgetPageFacturaAsal5_2017(cs, s, pdf);                                    
                                   // }
                                }
                                else
                                {
                                    FgetPageFacturaAsal5(cs, s, pdf);
                                }

                           if (s2 == "B")
                            FgetPageFacturaBsal5(cs, s, pdf);

                       break;

                          case "6":   //Ventas de Kits Callcenter
                            if (s2 == "A")
                                if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                                {
                                    FgetPageFacturaAsal6_2017(cs, s, pdf);
                                }
                                else
                                {
                                    FgetPageFacturaAsal6(cs, s, pdf);
                                }

                            if (s2 == "B")
                               FgetPageFacturaBsal6(cs, s, pdf);
                              
                       break;

                          case "7":  //Venta de Kits Salesman

                        if (s2 == "A")
                            if (dFechaFactura >= dFechaCambioDiseñoIIBBAgip)
                            {
                                FgetPageFacturaAsal7_2017(cs, s, pdf);
                            }
                            else
                            {
                                FgetPageFacturaAsal7(cs, s, pdf);
                            }

                        if (s2 == "B")
                            FgetPageFacturaBsal7(cs, s, pdf);
                       break;

                      }

                }

            }

            return pdf;

        }







        private void FgetPageFacturaBsal2_8_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);

                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                string sFechaFactura = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sCae = ca.NumCae;
                string sCodBarraAfip = ca.BarraAfip;

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;



                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaRed = new XPen(XColors.Red, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                // Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;
                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                // pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae



                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 135, 203, 135);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;
                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);
                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);
                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 27, 37, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(120), XUnit.FromMillimeter(160)));





                XRect rectTotalaPagar = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(171), 80, 9);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, rectTotalaPagar, formatRight);
                // graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(122), XUnit.FromMillimeter(171)));




                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));



                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);




                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    if (dFechaFactura > dFechaBarraAfipSalida2)
                    {

                        if ((ca.EsCopia == true) & (sOriginal == " "))
                        {
                            xp.X = XUnit.FromMillimeter(115);
                            xp.Y = XUnit.FromMillimeter(16);
                            graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                        }
                        else
                        {
                            if ((ca.EsCopia == true) & (sOriginal == " "))
                            {
                                xp.X = XUnit.FromMillimeter(155);
                                xp.Y = XUnit.FromMillimeter(280);
                                graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                            }
                            else
                            {
                                xp.X = XUnit.FromMillimeter(155);
                                xp.Y = XUnit.FromMillimeter(280);
                                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                                //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                            }
                        }


                        if (!string.IsNullOrEmpty(sCodBarraAfip))
                        {
                            xp.X = XUnit.FromMillimeter(31);
                            xp.Y = XUnit.FromMillimeter(179);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                            BarCodeAfip.StartChar = Convert.ToChar("*");
                            BarCodeAfip.EndChar = Convert.ToChar("*");
                            BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                            BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                            BarCodeAfip.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCodeAfip, xp);

                            XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                            // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                            graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                        }
                    }

                }



                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal2");

            }
        }







        private void FgetPageFacturaBsal22_3_2018(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);

                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                string sFechaFactura = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sCae = ca.NumCae;
                string sCodBarraAfip = ca.BarraAfip;

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035") || (sPuntoVenta == "0043") || (sPuntoVenta == "0045") || (sPuntoVenta == "0047") || (sPuntoVenta == "0049"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;



                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaRed = new XPen(XColors.Red, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae



                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 135, 203, 135);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;










                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);

                graph.Dispose();


                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 27, 37, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(120), XUnit.FromMillimeter(160)));





                XRect rectTotalaPagar = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(171), 80, 9);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, rectTotalaPagar, formatRight);
                // graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(122), XUnit.FromMillimeter(171)));




                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));



                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);




                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035") || (sPuntoVenta == "0043") || (sPuntoVenta == "0045") || (sPuntoVenta == "0047") || (sPuntoVenta == "0049"))  //22/03/2018
                {
                    if (dFechaFactura > dFechaBarraAfipSalida2)
                    {

                        if ((ca.EsCopia == true) & (sOriginal == " "))
                        {
                            xp.X = XUnit.FromMillimeter(115);
                            xp.Y = XUnit.FromMillimeter(16);
                            graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                        }
                        else
                        {
                            if ((ca.EsCopia == true) & (sOriginal == " "))
                            {
                                xp.X = XUnit.FromMillimeter(155);
                                xp.Y = XUnit.FromMillimeter(280);
                                graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                            }
                            else
                            {
                                xp.X = XUnit.FromMillimeter(155);
                                xp.Y = XUnit.FromMillimeter(280);
                                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                                //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                            }
                        }


                        if (!string.IsNullOrEmpty(sCodBarraAfip))
                        {
                            xp.X = XUnit.FromMillimeter(31);
                            xp.Y = XUnit.FromMillimeter(179);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                            BarCodeAfip.StartChar = Convert.ToChar("*");
                            BarCodeAfip.EndChar = Convert.ToChar("*");
                            BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                            BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                            BarCodeAfip.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCodeAfip, xp);

                            XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                            // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                            graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                        }
                    }

                }



                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal2");

            }
        }


        /// <summary>
        /// 09/06/2015 Mejoras en la Facturas RVPA
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="ca"></param>
        /// <param name="pdf"></param>
        private void FgetPageFacturaBsal2(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);

                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                string sFechaFactura = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sCae = ca.NumCae;
                string sCodBarraAfip = ca.BarraAfip;

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035") || (sPuntoVenta == "0045"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;



                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae



                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;










                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);

                graph.Dispose();


                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 27, 37, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(120), XUnit.FromMillimeter(160)));





                XRect rectTotalaPagar = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(171), 80, 9);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, rectTotalaPagar, formatRight);
                // graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(122), XUnit.FromMillimeter(171)));




                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


           
                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);




                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035") || (sPuntoVenta == "0045"))
                    {
                        if (dFechaFactura > dFechaBarraAfipSalida2)
                        {

                            if ((ca.EsCopia == true) & (sOriginal == " "))
                            {
                                xp.X = XUnit.FromMillimeter(115);
                                xp.Y = XUnit.FromMillimeter(16);
                                graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                            }
                            else 
                            {
                                if ((ca.EsCopia == true) & (sOriginal == " "))
                                {
                                    xp.X = XUnit.FromMillimeter(155);
                                    xp.Y = XUnit.FromMillimeter(280);
                                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                                }
                                else
                                {
                                    xp.X = XUnit.FromMillimeter(155);
                                    xp.Y = XUnit.FromMillimeter(280);
                                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                                    //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                                }
                            }

                            
                            if (!string.IsNullOrEmpty(sCodBarraAfip))
                             {
                                xp.X = XUnit.FromMillimeter(31);
                                xp.Y = XUnit.FromMillimeter(179);
                                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                                BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                                BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                                BarCodeAfip.StartChar = Convert.ToChar("*");
                                BarCodeAfip.EndChar = Convert.ToChar("*");
                                BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                                BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                                BarCodeAfip.Size.ToXPoint();
                                graphfont.DrawBarCode(BarCodeAfip, xp);

                                XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                                // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                                graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                             }
                    }
 
                }



                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal2");

            }
        }

        private void FgetPageFacturaAsal7(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {


                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}

                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);

                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;


                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4]; //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 25, 35, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));





                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);



                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));

                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }

                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }

                if (dFechaFactura >= dFechaBarraAfipSalida7)
                {
                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);



                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }

                }
                graphfont.Dispose();
            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal7");

            }
        }


        private void FgetPageFacturaAsal7_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {


                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}

                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);

                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;


                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4]; //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 25, 35, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));





                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);



                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));

                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }

                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }

                if (dFechaFactura >= dFechaBarraAfipSalida7)
                {
                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);



                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }

                }
                graphfont.Dispose();
            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal7");

            }
        }



        private void FgetPageFacturaAsal6(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;


                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4]; //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                //    rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));





                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);



                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));

                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }


                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }

                if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
                {


                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);


                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }
                }
                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal6");

            }
        }




        private void FgetPageFacturaAsal6_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;


                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4]; //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                //    rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));





                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);



                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));

                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }


                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }

                if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
                {


                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);


                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }
                }
                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal6");

            }
        }


        private void FgetPageFacturaBsal7(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}

                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4]; //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae
                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga



                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;


                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);

                graph.Dispose();

                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);



                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(18);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                //rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                rangodesde = (sDomicilio3.Length < 30) ? 20 : 23;
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(80);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(80);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                //graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));


                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);


                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);



                /*
                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCION", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                  
                 * 
                 * */
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));

                /*
                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));

                 */
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));

                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }

                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }


                if (dFechaFactura >= dFechaBarraAfipSalida7)
                {
                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);



                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }
                }
                graphfont.Dispose();
            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal7");

            }
        }

        private void FgetPageFacturaBsal5(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sOriginal = " ";
                if (ca.NumFactCuatro == "0032")
                {
                    sOriginal = "ORIGINAL";
                }
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;
                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                // pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4]; //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;


                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);

                graph.Dispose();






                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack28B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);

                // rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 30, 40, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(80);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(80);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                //graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));


                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);


                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

                /*
                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCION", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                  
                 * 
                 * */
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));

                /*
                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));

                 */
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));

                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }

                if ((ca.EsCopia == true) & (sOriginal == " "))
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }



                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {




                    xp.X = XUnit.FromMillimeter(31);
                    xp.Y = XUnit.FromMillimeter(178);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);

                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(186), 264, 9);
                    //   graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }
                graphfont.Dispose();


            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal6");

            }
        }

        private void FgetPageFacturaBsal6(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3]; //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;


                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);

                graph.Dispose();






                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // rangodesde = (sDomicilio1.Length < 30) ? 20 : 23;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);

                // rangodesde = (sDomicilio2.Length < 30) ? 20 : 23;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 30, 40, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(80);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(80);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                //graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));


                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);


                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

                /*
                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCION", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                  
                 * 
                 * */
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));

                /*
                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));

                 */
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }

                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }


                if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
                {

                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);



                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip.Trim()))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }
                }
                graphfont.Dispose();


            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal6");

            }
        }


        private void FgetPageFacturaAsal5(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sOriginal=" ";
                if (ca.NumFactCuatro == "0032")
                {
                    sOriginal = "ORIGINAL";
                }

                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPieFactura = ca.PieFactura;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;

                string sCodBarraAfip = ca.BarraAfip;
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                // pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);    
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString(sDomicilio2, fontArial8, BrushBlack, xp);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushWhite, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushWhite, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                //graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));


                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);


                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1].ToLower(), fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));


                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("VTO:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(47), XUnit.FromMillimeter(280)));

                 
                graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));


                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }


                if ((ca.EsCopia == true) & (sOriginal==" "))
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }



                if (!string.IsNullOrEmpty(sCodBarraAfip.Trim()))
                {
  



                    xp.X = XUnit.FromMillimeter(31);
                    xp.Y = XUnit.FromMillimeter(178);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);

                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(186), 264, 9);
                  //   graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }

                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal5");

            }
        }



        private void FgetPageFacturaAsal5_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sOriginal = " ";
                if (ca.NumFactCuatro == "0032")
                {
                    sOriginal = "ORIGINAL";
                }

                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPercepcionIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");

               // string sPercepcionIIBBCaba = "$ 1212,11";// "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");

                string sPieFactura = ca.PieFactura;

            

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura.Trim()))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;

                string sCodBarraAfip = ca.BarraAfip.Trim();
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                // pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);    
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

               /*
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */

                graph.DrawLine(LineasFacturaDarkGray, 122, 83, 122, 176);

                graph.DrawLine(LineasFacturaDarkGray, 26, 155, 26, 176);
                graph.DrawLine(LineasFacturaDarkGray, 50, 155, 50, 176);
                graph.DrawLine(LineasFacturaDarkGray, 74, 155, 74, 176);
                graph.DrawLine(LineasFacturaDarkGray, 98, 155, 98, 176);


                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 28, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
               // graphfont.DrawString(sDomicilio2, fontArial8, BrushBlack, xp);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 30, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 30, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushWhite, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushWhite, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                //graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));


                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);


                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1].ToLower(), fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

                /*
                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                


                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                */

                //graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));
            
              



                //NETO GRAVADO   
                //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(156), 69, 9);
                //graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("NETO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
                XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(159), 69, 9);
               // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

                XRect rectNetoGravado = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectNetoGravado);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBoleta2015_1, rectNetoGravado, formatRight);

                //Impuesto Interno
                //graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                // graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                XRect rectLeyendaImpuestoInterno1 = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno1, formatCenter);
                XRect rectLeyendaImpuestoInterno2 = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno2, formatCenter);

                XRect rectImpuestoInterno = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectImpuestoInterno);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBoleta2015_1, rectImpuestoInterno, formatRight);

                //graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                // graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIva = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(157), 67, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaIva);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, rectLeyendaIva, formatCenter);
                XRect rectIva = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectIva);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBoleta2015_1, rectIva, formatRight);


                //graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                //graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIIBBBsAs1 = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBBsAs1, formatCenter);
                XRect rectLeyendaIIBBBsAs2 = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectLeyendaIIBBBsAs2, formatCenter);

                XRect rectIIBBBsAs = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectIIBBBsAs);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBoleta2015_1, rectIIBBBsAs, formatRight);


                XRect rectLeyendaIIBBCaba1 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBCaba1, formatCenter);
                XRect rectLeyendaIIBBCaba2 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectLeyendaIIBBCaba2, formatCenter);

                XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectIIBBCaba);
                graphfont.DrawString(sPercepcionIIBBCaba, fontArial8, BrushBoleta2015_1, rectIIBBCaba, formatRight);



                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(122), XUnit.FromMillimeter(157), 67, 9);
                //graphfont.DrawRectangle(XPens.Crimson, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, rectLeyendaTotal, formatCenter);

                XRect rectTotal = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(168), 80, 9);
                //graphfont.DrawRectangle(XPens.Crimson, rectTotal);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBoleta2015_1, rectTotal, formatRight);




                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("VTO:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(47), XUnit.FromMillimeter(280)));


                graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));


                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }


                if ((ca.EsCopia == true) & (sOriginal == " "))
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }



                if (!string.IsNullOrEmpty(sCodBarraAfip.Trim()))
                {




                    xp.X = XUnit.FromMillimeter(31);
                    xp.Y = XUnit.FromMillimeter(178);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);

                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(186), 264, 9);
                    //   graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }

                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal5_2017");

            }
        }





        /// <summary>
        /// Cambios de imagen del mes de Agosto del 2017
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="ca"></param>
        /// <param name="pdf"></param>
        private void FgetPageFacturaAsal5_8_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);



                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;//CODIGO 01
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sOriginal = " ";
                if (ca.NumFactCuatro == "0032")
                {
                    sOriginal = "ORIGINAL";
                }

                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sPercepcionIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");

                // string sPercepcionIIBBCaba = "$ 1212,11";// "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");

                string sPieFactura = ca.PieFactura;



                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.InfoAdicional01 : " ";
                sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.InfoAdicional02 : " ";
                sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.InfoAdicional03 : " ";


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";

                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura.Trim()))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string pngLogopath;

                string sCodBarraAfip = ca.BarraAfip.Trim();
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaRed = new XPen(XColors.Red, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                // pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1]; //getImageFasal2_A(sFechaFactura);    
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];  //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5];  //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine (LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                /*
                 graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                 graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                 graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                 graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                 */

                graph.DrawLine(LineasFacturaDarkGray, 122, 83, 122, 176); //

                graph.DrawLine(LineasFacturaDarkGray, 26, 155, 26, 176);
                graph.DrawLine(LineasFacturaDarkGray, 50, 155, 50, 176);
                graph.DrawLine(LineasFacturaDarkGray, 74, 155, 74, 176);
                graph.DrawLine(LineasFacturaDarkGray, 98, 155, 98, 176);


                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 134, 203, 134); ///Separa Forma y Medios de PAgo de Tarjeta de Credito
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 28, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                // graphfont.DrawString(sDomicilio2, fontArial8, BrushBlack, xp);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 30, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 30, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushWhite, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushWhite, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                //graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));


                valory = 85;
                maxsplit = 0;
                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);


                //2
                valory = valory + 3;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1].ToLower(), fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                valory = valory + 3;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                valory = valory + 3;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                valory = valory + 3;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                valory = valory + 3;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 3;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 3;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 3;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 3;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 3;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 3;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 3;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 3;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 3;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 3;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);



                //info adicional 1
                valory = 138;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 3;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 3;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

                /*
                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                


                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                */

                //graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                //NETO GRAVADO   
                //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(156), 69, 9);
                //graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("NETO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
                XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(159), 69, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

                XRect rectNetoGravado = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectNetoGravado);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBoleta2015_1, rectNetoGravado, formatRight);

                //Impuesto Interno
                //graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                // graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                XRect rectLeyendaImpuestoInterno1 = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno1, formatCenter);
                XRect rectLeyendaImpuestoInterno2 = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno2, formatCenter);

                XRect rectImpuestoInterno = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectImpuestoInterno);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorImpuestoInterno, fontArial8, BrushBoleta2015_1, rectImpuestoInterno, formatRight);

                //graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                // graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIva = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(157), 67, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaIva);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, rectLeyendaIva, formatCenter);
                XRect rectIva = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectIva);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBoleta2015_1, rectIva, formatRight);


                //graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                //graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIIBBBsAs1 = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBBsAs1, formatCenter);
                XRect rectLeyendaIIBBBsAs2 = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectLeyendaIIBBBsAs2, formatCenter);

                XRect rectIIBBBsAs = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectIIBBBsAs);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBoleta2015_1, rectIIBBBsAs, formatRight);


                XRect rectLeyendaIIBBCaba1 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBCaba1, formatCenter);
                XRect rectLeyendaIIBBCaba2 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectLeyendaIIBBCaba2, formatCenter);

                XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(168), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectIIBBCaba);
                graphfont.DrawString(sPercepcionIIBBCaba, fontArial8, BrushBoleta2015_1, rectIIBBCaba, formatRight);



                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(122), XUnit.FromMillimeter(157), 67, 9);
                //graphfont.DrawRectangle(XPens.Crimson, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, rectLeyendaTotal, formatCenter);

                XRect rectTotal = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(168), 80, 9);
                //graphfont.DrawRectangle(XPens.Crimson, rectTotal);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBoleta2015_1, rectTotal, formatRight);




                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("VTO:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(47), XUnit.FromMillimeter(280)));


                graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));


                List<string> lPieFactura = ParseaCampo(sPieFactura, 100, 115, ' ');
                graphfont.DrawString(lPieFactura[0], fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(284)));
                if ((lPieFactura.Count > 1))
                {
                    graphfont.DrawString(lPieFactura[1].Trim(), fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(288)));
                }


                if ((ca.EsCopia == true) & (sOriginal == " "))
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }



                if (!string.IsNullOrEmpty(sCodBarraAfip.Trim()))
                {




                    xp.X = XUnit.FromMillimeter(31);
                    xp.Y = XUnit.FromMillimeter(178);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);

                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(186), 264, 9);
                    //   graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }

                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal5_2017");

            }
        }

        /// <summary>
        /// 09/06/2015 Mejoras en la Facturas RVPA
        /// 10/06/2015 Mejoras en la Facturas RVPA 
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="ca"></param>
        /// <param name="pdf"></param>
        private void FgetPageFacturaAsal2(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);





                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sCae = ca.NumCae;
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];// "fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; // "fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);

             //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));

                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 25, 35, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);

                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NUMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);


                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);



               

                
                    if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                    {
                        if (dFechaFactura > dFechaBarraAfipSalida2)
                        {

                            if ((ca.EsCopia == true) & (sOriginal == " "))
                            {
                                xp.X = XUnit.FromMillimeter(155);
                                xp.Y = XUnit.FromMillimeter(280);
                                graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                            }
                            else 
                            {
                                xp.X = XUnit.FromMillimeter(155);
                                xp.Y = XUnit.FromMillimeter(280);
                                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                                //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                            }



                            if (!string.IsNullOrEmpty(sCodBarraAfip))
                           {
                            xp.X = XUnit.FromMillimeter(31);
                            xp.Y = XUnit.FromMillimeter(179);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                            BarCodeAfip.StartChar = Convert.ToChar("*");
                            BarCodeAfip.EndChar = Convert.ToChar("*");
                            BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                            BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                            BarCodeAfip.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCodeAfip, xp);

                            XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                            // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                            graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                        }
                    }
                }

                graphfont.Dispose();


            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal2");

            }
        }









        private void FgetPageFacturaAsal2_8_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);





                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");
                string sCae = ca.NumCae;
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaRed = new XPen(XColors.Red, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];// "fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; // "fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 114, 83, 114, 176);


                graph.DrawLine(LineasFacturaDarkGray, 24, 155, 24, 176);
                graph.DrawLine(LineasFacturaDarkGray, 46, 155, 46, 176);
                graph.DrawLine(LineasFacturaDarkGray, 70, 155, 70, 176);
                graph.DrawLine(LineasFacturaDarkGray, 92, 155, 92, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 135, 203, 135);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);

                //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));

                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 25, 35, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);

                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NUMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);






                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));









                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));


                //NETO GRAVADO   
                //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(156), 65, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("NETO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
                XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(159), 65, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

                XRect rectNetoGravado = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectNetoGravado);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sNetoGravado, fontArial8, BrushBoleta2015_1, rectNetoGravado, formatRight);

                //Impuesto Interno
                //graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                // graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                XRect rectLeyendaImpuestoInterno1 = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(156), 65, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno1, formatCenter);
                XRect rectLeyendaImpuestoInterno2 = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno2, formatCenter);

                XRect rectImpuestoInterno = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectImpuestoInterno);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBoleta2015_1, rectImpuestoInterno, formatRight);

                //graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                // graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIva = new XRect(XUnit.FromMillimeter(47), XUnit.FromMillimeter(157), 65, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaIva);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, rectLeyendaIva, formatCenter);
                XRect rectIva = new XRect(XUnit.FromMillimeter(47), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectIva);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sIvaaPagar, fontArial8, BrushBoleta2015_1, rectIva, formatRight);


                //graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                //graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIIBBBsAs1 = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(156), 65, 9);
                // graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBBsAs1, formatCenter);
                XRect rectLeyendaIIBBBsAs2 = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectLeyendaIIBBBsAs2, formatCenter);

                XRect rectIIBBBsAs = new XRect(XUnit.FromMillimeter(70), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectIIBBBsAs);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBoleta2015_1, rectIIBBBsAs, formatRight);


                XRect rectLeyendaIIBBCaba1 = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(156), 65, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBCaba1, formatCenter);
                XRect rectLeyendaIIBBCaba2 = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectLeyendaIIBBCaba2, formatCenter);

                XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectIIBBCaba);
                graphfont.DrawString(sValorIIBBCaba, fontArial8, BrushBoleta2015_1, rectIIBBCaba, formatRight);



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);






                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    if (dFechaFactura > dFechaBarraAfipSalida2)
                    {

                        if ((ca.EsCopia == true) & (sOriginal == " "))
                        {
                            xp.X = XUnit.FromMillimeter(155);
                            xp.Y = XUnit.FromMillimeter(280);
                            graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                        }
                        else
                        {
                            xp.X = XUnit.FromMillimeter(155);
                            xp.Y = XUnit.FromMillimeter(280);
                            graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                            //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                        }



                        if (!string.IsNullOrEmpty(sCodBarraAfip))
                        {
                            xp.X = XUnit.FromMillimeter(31);
                            xp.Y = XUnit.FromMillimeter(179);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                            BarCodeAfip.StartChar = Convert.ToChar("*");
                            BarCodeAfip.EndChar = Convert.ToChar("*");
                            BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                            BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                            BarCodeAfip.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCodeAfip, xp);

                            XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                            // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                            graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                        }
                    }
                }

                graphfont.Dispose();


            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal2");

            }
        }



        private void FgetPageFacturaAsal22_3_2018(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);





                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");
                string sCae = ca.NumCae;
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035") || (sPuntoVenta == "0043") || (sPuntoVenta == "0045") || (sPuntoVenta == "0047") || (sPuntoVenta == "0049"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaRed = new XPen(XColors.Red, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];// "fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; // "fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 114, 83, 114, 176);


                graph.DrawLine(LineasFacturaDarkGray, 24, 155, 24, 176);
                graph.DrawLine(LineasFacturaDarkGray, 46, 155, 46, 176);
                graph.DrawLine(LineasFacturaDarkGray, 70, 155, 70, 176);
                graph.DrawLine(LineasFacturaDarkGray, 92, 155, 92, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 135, 203, 135);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);

                //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));

                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 25, 35, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);

                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NUMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);






                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));









                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));


                //NETO GRAVADO   
                //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(156), 65, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("NETO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
                XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(159), 65, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

                XRect rectNetoGravado = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectNetoGravado);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sNetoGravado, fontArial8, BrushBoleta2015_1, rectNetoGravado, formatRight);

                //Impuesto Interno
                //graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                // graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                XRect rectLeyendaImpuestoInterno1 = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(156), 65, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno1, formatCenter);
                XRect rectLeyendaImpuestoInterno2 = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno2, formatCenter);

                XRect rectImpuestoInterno = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectImpuestoInterno);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBoleta2015_1, rectImpuestoInterno, formatRight);

                //graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                // graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIva = new XRect(XUnit.FromMillimeter(47), XUnit.FromMillimeter(157), 65, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaIva);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, rectLeyendaIva, formatCenter);
                XRect rectIva = new XRect(XUnit.FromMillimeter(47), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectIva);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sIvaaPagar, fontArial8, BrushBoleta2015_1, rectIva, formatRight);


                //graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                //graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIIBBBsAs1 = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(156), 65, 9);
                // graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBBsAs1, formatCenter);
                XRect rectLeyendaIIBBBsAs2 = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectLeyendaIIBBBsAs2, formatCenter);

                XRect rectIIBBBsAs = new XRect(XUnit.FromMillimeter(70), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectIIBBBsAs);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBoleta2015_1, rectIIBBBsAs, formatRight);


                XRect rectLeyendaIIBBCaba1 = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(156), 65, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBCaba1, formatCenter);
                XRect rectLeyendaIIBBCaba2 = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectLeyendaIIBBCaba2, formatCenter);

                XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectIIBBCaba);
                graphfont.DrawString(sValorIIBBCaba, fontArial8, BrushBoleta2015_1, rectIIBBCaba, formatRight);



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);






                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035") || (sPuntoVenta == "0043") || (sPuntoVenta == "0045") || (sPuntoVenta == "0047") || (sPuntoVenta == "0049"))
                {
                    if (dFechaFactura > dFechaBarraAfipSalida2)
                    {

                        if ((ca.EsCopia == true) & (sOriginal == " "))
                        {
                            xp.X = XUnit.FromMillimeter(155);
                            xp.Y = XUnit.FromMillimeter(280);
                            graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                        }
                        else
                        {
                            xp.X = XUnit.FromMillimeter(155);
                            xp.Y = XUnit.FromMillimeter(280);
                            graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                            //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                        }



                        if (!string.IsNullOrEmpty(sCodBarraAfip))
                        {
                            xp.X = XUnit.FromMillimeter(31);
                            xp.Y = XUnit.FromMillimeter(179);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                            BarCodeAfip.StartChar = Convert.ToChar("*");
                            BarCodeAfip.EndChar = Convert.ToChar("*");
                            BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                            BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                            BarCodeAfip.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCodeAfip, xp);

                            XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                            // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                            graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                        }
                    }
                }

                graphfont.Dispose();


            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal2");

            }
        }

        private void FgetPageFacturaAsal2_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //Fuente
                var options = new XPdfFontOptions(PdfFontEmbedding.Always);





                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sPuntoVenta = ca.NumFactCuatro;
                string sNumerocomprobante = ca.Scomprobante;
                string sNombreApellido = ca.NombreApellido;

                string sDomicilio1 = (!string.IsNullOrEmpty(ca.DomicilioUno)) ? ca.DomicilioUno : " ";
                string sDomicilio2 = (!string.IsNullOrEmpty(ca.DomicilioDos)) ? ca.DomicilioDos : " ";
                string sDomicilio3 = (!string.IsNullOrEmpty(ca.DomicilioTres)) ? ca.DomicilioTres : " ";




                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sFecha = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                string sPeriodo = ca.Periodo;
                string sIva = ca.CategoriaIva;
                string sCuit = ca.Cuit;
                string sZona = string.Empty;
                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");
                string sCae = ca.NumCae;
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";

                string sFechaVencimientoCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;


                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01.Replace(".", ",") : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02.Replace(".", ",") : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03.Replace(".", ",") : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04.Replace(".", ",") : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05.Replace(".", ",") : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06.Replace(".", ",") : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07.Replace(".", ",") : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08.Replace(".", ",") : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09.Replace(".", ",") : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10.Replace(".", ",") : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11.Replace(".", ",") : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12.Replace(".", ",") : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13.Replace(".", ",") : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14.Replace(".", ",") : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15.Replace(".", ",") : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16.Replace(".", ",") : " ";

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }
                string sCodBarraAfip = ca.BarraAfip;

                string sOriginal = " ";
                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    sOriginal = "ORIGINAL";
                }

                string pngLogopath;
                var @sImageRoute = cs.Imageroute;




                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2];// "fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; // "fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 114, 83, 114, 176);


                graph.DrawLine(LineasFacturaDarkGray, 24, 155,24, 176);
                graph.DrawLine(LineasFacturaDarkGray, 46, 155, 46, 176);
                graph.DrawLine(LineasFacturaDarkGray, 70, 155, 70, 176);
                graph.DrawLine(LineasFacturaDarkGray, 92, 155, 92, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);

                //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));

                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, 25, 35, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, 25, 35, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, 25, 35, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);

                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, 25, 35, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NUMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);


                

                

                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));





                
               
               
              
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));


                //NETO GRAVADO   
                //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(156), 65, 9);
               // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("NETO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
                XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(159), 65, 9);
               // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

                XRect rectNetoGravado = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectNetoGravado);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sNetoGravado, fontArial8, BrushBoleta2015_1, rectNetoGravado, formatRight);

                //Impuesto Interno
                //graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                // graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                XRect rectLeyendaImpuestoInterno1 = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(156), 65, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno1, formatCenter);
                XRect rectLeyendaImpuestoInterno2 = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno2, formatCenter);

                XRect rectImpuestoInterno = new XRect(XUnit.FromMillimeter(24), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectImpuestoInterno);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBoleta2015_1, rectImpuestoInterno, formatRight);

                //graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                // graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIva = new XRect(XUnit.FromMillimeter(47), XUnit.FromMillimeter(157), 65, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaIva);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, rectLeyendaIva, formatCenter);
                XRect rectIva = new XRect(XUnit.FromMillimeter(47), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectIva);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sIvaaPagar, fontArial8, BrushBoleta2015_1, rectIva, formatRight);


                //graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                //graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIIBBBsAs1 = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(156), 65, 9);
               // graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBBsAs1, formatCenter);
                XRect rectLeyendaIIBBBsAs2 = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectLeyendaIIBBBsAs2, formatCenter);

                XRect rectIIBBBsAs = new XRect(XUnit.FromMillimeter(70), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectIIBBBsAs);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBoleta2015_1, rectIIBBBsAs, formatRight);


                XRect rectLeyendaIIBBCaba1 = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(156), 65, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBCaba1, formatCenter);
                XRect rectLeyendaIIBBCaba2 = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(159), 65, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectLeyendaIIBBCaba2, formatCenter);

                XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(168), 61, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectIIBBCaba);
                graphfont.DrawString(sValorIIBBCaba, fontArial8, BrushBoleta2015_1, rectIIBBCaba, formatRight);



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);






                if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                {
                    if (dFechaFactura > dFechaBarraAfipSalida2)
                    {

                        if ((ca.EsCopia == true) & (sOriginal == " "))
                        {
                            xp.X = XUnit.FromMillimeter(155);
                            xp.Y = XUnit.FromMillimeter(280);
                            graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                        }
                        else
                        {
                            xp.X = XUnit.FromMillimeter(155);
                            xp.Y = XUnit.FromMillimeter(280);
                            graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);
                            //   graphfont.DrawString(sOriginal, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(155), XUnit.FromMillimeter(280)));
                        }



                        if (!string.IsNullOrEmpty(sCodBarraAfip))
                        {
                            xp.X = XUnit.FromMillimeter(31);
                            xp.Y = XUnit.FromMillimeter(179);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                            BarCodeAfip.StartChar = Convert.ToChar("*");
                            BarCodeAfip.EndChar = Convert.ToChar("*");
                            BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                            BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                            BarCodeAfip.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCodeAfip, xp);

                            XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(187), 264, 9);
                            // graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                            graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                        }
                    }
                }

                graphfont.Dispose();


            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal2");

            }
        }

        /// <summary>
        ///     29/05/2015 - Arreglo en los codigos de barra
        ///     02/06/2015 - Elminacion Abonoitem - Correccion Monto Total
        ///     05/06/2015 - Alineacion del numero de Defensa al consumidor 
        ///    10/06/2015 - Mejoras en Domicilio
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="ca"></param>
        /// <param name="pdf"></param>
        private void FgetPAgeFacturaBsal1(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro. " + ca.NumFactCuatro + " - " + ca.NumFactOcho;
                string sNombreApellido = ca.NombreApellido;// 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente;
                string sNumCuitEmpresa = ca.NumCuitEmpresa;
                string sNumConv = ca.NumConv;
                string sFechaInicio = ca.FechaInicio;
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sPeriodo = ca.Periodo;
                string sIVA = ca.CategoriaIva;
                string sCuit = ca.Cuit;

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];


                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];
                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";// ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                // string sEtiqIvaInscripto = string.Empty;
                string sValorNetoGravado = string.Empty;
                //  string sValorIvaInscripto = string.Empty;
                //  string sValorIvaNoInscripto = string.Empty;
                //   string sValorIIBBBSAS = string.Empty;
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = "CAE: " + ca.NumCae;

                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = "Fecha de Vencimiento: " + sfechaCae;

                string sValorAfipInforma1 = string.Empty;
                string sValorAfipInforma2 = string.Empty;


                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1;
                string sCodBarra3 = ca.CodBarra2;


                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);

                string pngLogopath;

                var sImageRoute = cs.Imageroute;
                sImageRoute = sImageRoute.Replace("//", "/");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;
                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);



                graph.DrawRoundedRectangle(LineasRectangulo, 8, 9, 195, 283, 3, 3);
                graph.DrawLine(LineasFactura, 8, 42, 203, 42);
                graph.DrawLine(LineasFactura, 8, 71, 146, 71);
                graph.DrawLine(LineasFactura, 8, 79, 146, 79);

                graph.DrawLine(LineasFactura, 146, 50, 203, 50);
                graph.DrawLine(LineasFactura, 146, 62, 203, 62);
                graph.DrawLine(LineasFactura, 146, 97, 203, 97);
                graph.DrawLine(LineasFactura, 146, 104, 203, 104);

                graph.DrawLine(LineasFactura, 8, 182, 203, 182);
                graph.DrawLine(LineasFactura, 8, 185, 203, 185);

                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 8, 183, 203, 183);
                LineasFactura.DashStyle = XDashStyle.Solid;

                graph.DrawLine(LineasFactura, 146, 9, 146, 182);
                graph.DrawLine(LineasFactura, 146, 185, 146, 278);

                graph.DrawLine(LineasFactura, 111, 71, 111, 182);


                graph.DrawLine(LineasFactura, 111, 166, 146, 166);
                graph.DrawLine(LineasFactura, 111, 173, 146, 173);
                /*
                graph.DrawLine(LineasFactura, 33, 166, 33, 182);
                graph.DrawLine(LineasFactura, 58, 166, 58, 182);
                graph.DrawLine(LineasFactura, 83, 166, 83, 182);
                */

                graph.DrawLine(LineasFactura, 146, 198, 203, 198);
                graph.DrawLine(LineasFactura, 146, 213, 203, 213);
                graph.DrawLine(LineasFactura, 146, 257, 203, 257);


                graph.DrawLine(LineasFactura, 8, 278, 203, 278);

                //factura A
                graph.DrawRoundedRectangle(LineasFactura, 96, 10, 18, 16, 3, 3);

                //Monto facturado
                graph.DrawRoundedRectangle(LineasFactura, 60, 189, 73, 7, 3, 3);

                //Comprobante
                graph.DrawRoundedRectangle(LineasFactura, 10, 205, 43, 7, 3, 3);

                //Vencimiento
                graph.DrawRoundedRectangle(LineasFactura, 56, 205, 43, 7, 3, 3);

                //Importe
                graph.DrawRoundedRectangle(LineasFactura, 102, 205, 42, 7, 3, 3);

                // Codigo de Barras
                graph.DrawRoundedRectangle(LineasFactura, 10, 214, 134, 14, 3, 3);

                //Saldo Total
                graph.DrawRoundedRectangle(LineasFactura, 60, 235, 73, 7, 3, 3);

                //Comprobante II

                graph.DrawRoundedRectangle(LineasFactura, 10, 250, 43, 7, 3, 3);

                //Vencimiento II
                graph.DrawRoundedRectangle(LineasFactura, 56, 250, 43, 7, 3, 3);

                //Importe II
                graph.DrawRoundedRectangle(LineasFactura, 102, 250, 42, 7, 3, 3);

                // Codigo de Barras
                graph.DrawRoundedRectangle(LineasFactura, 10, 259, 134, 14, 3, 3);


                //Iamgenes
                //logo 
                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 11, 64, 10);

                graph.DrawImage(image, 14, 189, 44, 7);

                graph.DrawImage(image, 14, 234, 44, 7);

                //aviso
                //    if (ca.ServicioEmail == true)
                //        if (dFechaFactura > dFechaCambioImagenAviso)
                //            pngLogopath = sImageRoute + "avisoFB.png";
                ///        else
                //            pngLogopath = sImageRoute + "avisoFB_01.png";
                //    else
                ///        if (dFechaFactura > dFechaCambioImagenAviso)
                //            pngLogopath = sImageRoute + "avisoFB.png";
                ///        else
                //            pngLogopath = sImageRoute + "avisoFB_01.png";
                //    pngLogopath = sImageRoute + getImageAviso(sFechaFactura);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[0];

                XImage imageAviso = XImage.FromFile(pngLogopath);

                graph.DrawImage(imageAviso, 147, 105, 52, 76);





                graph.Dispose();


                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);




                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(24);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);


                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);

                xp.Y = XUnit.FromMillimeter(32);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(103);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial21B, BrushBlack, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(97);
                xp.Y = XUnit.FromMillimeter(23);
                graphfont.DrawString(sCofFact, fontArial8, BrushBlack, xp);

                //Leyfact
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString(sLeyFact, fontArial12B, BrushBlack, xp);

                //Leyfact
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(20);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                //Cuit
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(158);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                XRect rectConvenioMultilateral = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(30), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectConvenioMultilateral);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, rectConvenioMultilateral, formatRight);

                //Inicio de Actividades
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                XRect rectInicioActividades = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(34), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectInicioActividades);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, rectInicioActividades, formatRight);

                //Estado de cuenta al
                xp.Y = XUnit.FromMillimeter(47);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontArial8B, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(44), 60, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontArial8B, BrushBlack, rectEstadoCuenta, formatRight);

                //Saldo Anterior
                xp.Y = XUnit.FromMillimeter(54);
                graphfont.DrawString("SALDO ANTERIOR", fontArial8B, BrushBlack, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(51), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontArial8B, BrushBlack, rectSaldoAnterior, formatRight);



                int valory = 80;
                int maxsplit = 0;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampo(sConcepto[0], 65, 75, ' ');
                graphfont.DrawString(sConcepto1[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontArial8, BrushBlack, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);



                //2
                valory = valory + 4;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampo(sConcepto[1], 65, 75, ' ');
                graphfont.DrawString(sConcepto2[0], fontArial8, BrushBlack, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontArial8, BrushBlack, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);


                //3
                valory = valory + 4;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampo(sConcepto[2], 65, 75, ' ');
                graphfont.DrawString(sConcepto3[0], fontArial8, BrushBlack, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontArial8, BrushBlack, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);



                //4
                valory = valory + 4;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampo(sConcepto[3], 65, 75, ' ');
                graphfont.DrawString(sConcepto4[0], fontArial8, BrushBlack, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontArial8, BrushBlack, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);



                //5
                valory = valory + 4;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampo(sConcepto[4], 65, 75, ' ');
                graphfont.DrawString(sConcepto5[0], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontArial8, BrushBlack, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);




                //6
                valory = valory + 4;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 4;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 4;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 4;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 4;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 4;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 4;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 4;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 4;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 4;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 4;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + 4;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 4;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 4;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);


                //Monto Actual
                xp.Y = XUnit.FromMillimeter(59);
                graphfont.DrawString("MONTO ACTUAL", fontArial8B, BrushBlack, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(56), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontArial8B, BrushBlack, rectMontoActual, formatRight);



                //Total a Pagar
                xp.Y = XUnit.FromMillimeter(67);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, xp);
                XRect recTotalaPagar = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(64), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, recTotalaPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, recTotalaPagar, formatRight);

                //AbonoITem1
                XRect rectAbonoItem1 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(68), 150, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem1);
                graphfont.DrawString(sAbonoItem[0], fontArial8, BrushBlack, rectAbonoItem1, formatLeft);

                //AbonoITem2
                XRect rectAbonoItem2 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(72), 150, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem2);
                graphfont.DrawString(sAbonoItem[1], fontArial8, BrushBlack, rectAbonoItem2, formatLeft);

                //AbonoITem3
                XRect rectAbonoItem3 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(76), 150, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem3);
                graphfont.DrawString(sAbonoItem[2], fontArial8, BrushBlack, rectAbonoItem3, formatLeft);


                //AbonoITem4
                XRect rectAbonoItem4 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(80), 150, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem4);
                graphfont.DrawString(sAbonoItem[3], fontArial8, BrushBlack, rectAbonoItem4, formatLeft);


                //AbonoITem5
                XRect rectAbonoItem5 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(84), 150, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem5);
                graphfont.DrawString(sAbonoItem[4], fontArial8, BrushBlack, rectAbonoItem5, formatLeft);


                //AbonoITem6
                XRect rectAbonoItem6 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(88), 150, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem6);
                graphfont.DrawString(sAbonoItem[5], fontArial8, BrushBlack, rectAbonoItem6, formatLeft);



                //Leyenda Subototal       
                //XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(168), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                //graphfont.DrawString("SUBTOTAL", fontArialB8, BrushBlack, rectLeyendaSubtotal, formatCenter);

                XRect rectSubtotal = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(176), 67, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
                graphfont.DrawString(sValorNetoGravado, fontArial8B, BrushBlack, rectSubtotal, formatCenter);


                //Leyenda Iva Insc      
                // XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(34), XUnit.FromMillimeter(168), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaIvaInsc);
                // graphfont.DrawString(sEtiqIvaInscripto, fontArialB8, BrushBlack, rectLeyendaIvaInsc, formatCenter);

                // XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(34), XUnit.FromMillimeter(176), 67, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaInsc);
                // graphfont.DrawString(sValorIvaInscripto, fontArialB8, BrushBlack, rectIvaInsc, formatCenter);


                //Leyenda Iva No Insc      
                // XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(59), XUnit.FromMillimeter(168), 67, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaIvaNoInsc);
                // graphfont.DrawString("IVA NO INSC", fontArialB8, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);

                // XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(59), XUnit.FromMillimeter(176), 67, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
                // graphfont.DrawString(sValorIvaNoInscripto, fontArialB8, brush, rectIvaNoInsc, formatCenter);



                //Leyenda Perc IIBB BsAs     
                //XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(84), XUnit.FromMillimeter(168), 75, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaPercIIBB);
                //graphfont.DrawString("PERC IIBB BSAS", fontArialB8, brush, rectLeyendaPercIIBB, formatCenter);
                //XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(84), XUnit.FromMillimeter(176), 75, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
                //graphfont.DrawString(sValorIIBBBSAS, fontArialB8, brush, rectPercIIBB, formatCenter);



                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(168), 89, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontArial8B, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(176), 70, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
                graphfont.DrawString(sMontoActual, fontArial8B, BrushBlack, rectTotal, formatRight);


                //Monto Facturado
                XRect rectLeyendaMontoFacturado = new XRect(XUnit.FromMillimeter(63), XUnit.FromMillimeter(191), 89, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaMontoFacturado);
                graphfont.DrawString("MONTO FACTURADO", fontArial8B, BrushBlack, rectLeyendaMontoFacturado, formatLeft);
                XRect rectValorMontoFacturado = new XRect(XUnit.FromMillimeter(106), XUnit.FromMillimeter(191), 61, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectValorMontoFacturado);
                graphfont.DrawString(sMontoActual, fontArial8B, BrushBlack, rectValorMontoFacturado, formatRight);

                //comprobante 1
                XRect rectLeyendaComprobante1 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(201), 118, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaComprobante1);
                graphfont.DrawString("COMPROBANTE", fontArial8B, BrushBlack, rectLeyendaComprobante1, formatCenter);
                XRect rectValorComprobante1 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(207), 118, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectValorComprobante1);
                graphfont.DrawString(sFacturaNroMF, fontArial8B, BrushBlack, rectValorComprobante1, formatCenter);

                //Vencimiento 1
                XRect rectVencimiento1 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(201), 119, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectVencimiento1);
                graphfont.DrawString("VENCIMIENTO", fontArial8B, BrushBlack, rectVencimiento1, formatCenter);
                XRect rectValorVencimiento1 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(207), 119, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectValorVencimiento1);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectValorVencimiento1, formatCenter);


                //Importe 1
                XRect rectImportes1 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(201), 115, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImportes1);
                graphfont.DrawString("IMPORTE", fontArial8B, BrushBlack, rectImportes1, formatCenter);
                XRect rectValorImportes1 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(207), 115, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectValorImportes1);
                graphfont.DrawString(sMontoActual, fontArial8B, BrushBlack, rectValorImportes1, formatCenter);


                //comprobante 2
                XRect rectLeyendaComprobante2 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(246), 118, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaComprobante2);
                graphfont.DrawString("COMPROBANTE", fontArial8B, BrushBlack, rectLeyendaComprobante2, formatCenter);
                XRect rectValorComprobante2 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(252), 118, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectValorComprobante2);
                graphfont.DrawString("----------------", fontArial8B, BrushBlack, rectValorComprobante2, formatCenter);

                //Vencimiento 2
                XRect rectVencimiento2 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(246), 119, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectVencimiento2);
                graphfont.DrawString("VENCIMIENTO", fontArial8B, BrushBlack, rectVencimiento2, formatCenter);
                XRect rectValorVencimiento2 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(252), 119, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectValorVencimiento2);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectValorVencimiento2, formatCenter);

                //Importe 2
                XRect rectImportes2 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(246), 115, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImportes2);
                graphfont.DrawString("IMPORTE", fontArial8B, BrushBlack, rectImportes2, formatCenter);
                XRect rectValorImportes2 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(252), 115, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectValorImportes2);
                graphfont.DrawString(sEstadoTotalPagar, fontArial8B, BrushBlack, rectValorImportes2, formatCenter);


                //Monto Saldo Total
                XRect rectSaldoTotal = new XRect(XUnit.FromMillimeter(65), XUnit.FromMillimeter(237), 89, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoTotal);
                graphfont.DrawString("SALDO TOTAL", fontArial8B, BrushBlack, rectSaldoTotal, formatLeft);
                XRect rectValorSaldoTotal = new XRect(XUnit.FromMillimeter(105), XUnit.FromMillimeter(237), 61, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectValorSaldoTotal);
                graphfont.DrawString(sValorTotal, fontArial8B, BrushBlack, rectValorSaldoTotal, formatRight);


                //De su Interes
                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(102);
                graphfont.DrawString("DE SU INTERES", fontArial8B, BrushBlack, xp);



                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(156);
                xp.Y = XUnit.FromMillimeter(190);
                graphfont.DrawString("CENTROS DE ATENCIÓN", fontArial9B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(195);
                graphfont.DrawString("AL CLIENTE", fontArial9B, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(149);
                xp.Y = XUnit.FromMillimeter(202);
                graphfont.DrawString("CENTRO DE ATENCIÓN TELEFÓNICA", fontArial8B, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(150);
                xp.Y = XUnit.FromMillimeter(210);
                graphfont.DrawString("5299 9200", fontArialBlack24, BrushBlack, xp);



                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString("Capital Federal", fontArial9B, BrushBlack, xp);
                xp.Y = XUnit.FromMillimeter(223);
                graphfont.DrawString("Av. Córdoba 3012", fontArial9, BrushBlack, xp);

                xp.Y = XUnit.FromMillimeter(229);
                graphfont.DrawString("Pilar", fontArial9B, BrushBlack, xp);
                xp.Y = XUnit.FromMillimeter(233);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontArial9, BrushBlack, xp);

                if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                {
                    xp.Y = XUnit.FromMillimeter(239);
                    graphfont.DrawString("Moreno", fontArial9B, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(243);
                    graphfont.DrawString("Dr. Int. Assef 106", fontArial9, BrushBlack, xp);
                }
                else
                {
                    xp.Y = XUnit.FromMillimeter(239);
                    graphfont.DrawString("Morón", fontArial9B, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(243);
                    graphfont.DrawString("San Martín 308", fontArial9, BrushBlack, xp);
                }


                xp.Y = XUnit.FromMillimeter(249);
                graphfont.DrawString("Florencio Varela", fontArial9B, BrushBlack, xp);
                xp.Y = XUnit.FromMillimeter(253);
                graphfont.DrawString("San Juan 115", fontArial9, BrushBlack, xp);

                //Fecha Emision
                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(48);
                graphfont.DrawString("FECHA EMISIÓN", fontArial8, BrushBlack, xp);
                XRect recFechaEmision = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(45), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, recFechaEmision);
                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, recFechaEmision, formatRight);

                //Periodo
                xp.Y = XUnit.FromMillimeter(54);
                graphfont.DrawString("PERÍODO", fontArial8, BrushBlack, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(51), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, recPeriodo, formatRight);


                //IVA
                xp.Y = XUnit.FromMillimeter(60);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(57), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, recIVA, formatRight);


                //CUIT
                xp.Y = XUnit.FromMillimeter(66);
                graphfont.DrawString("CUIT Nº", fontArial8, BrushBlack, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(63), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sCuit))
                    graphfont.DrawString(sCuit, fontArial8, BrushBlack, recCUIT, formatRight);


                //Leyenda Derecha Abajo

                XRect recLeyendaDA1 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(258), 150, 11);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA1);
                graphfont.DrawString("Visítenos en nuestra página web", fontArial9B, BrushBlack, recLeyendaDA1, formatCenter);

                XRect recLeyendaDA2 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(262), 150, 13);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA2);
                graphfont.DrawString("www.antina.com.ar", fontArial15B, BrushBlack, recLeyendaDA2, formatCenter);

                XRect recLeyendaDA3 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(268), 150, 12);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA3);
                graphfont.DrawString("y regístrese para poder consultar", fontArial9B, BrushBlack, recLeyendaDA3, formatCenter);

                XRect recLeyendaDA4 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(272), 150, 12);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA4);
                graphfont.DrawString("y pagar su factura on-line", fontArial9B, BrushBlack, recLeyendaDA4, formatCenter);

                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(279), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, recValorCAE, formatLeft);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(54), XUnit.FromMillimeter(279), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, recValorFechaVencimientoCAE, formatLeft);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(279), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontArial6, BrushBlack, recValorDefensaConsumidor, formatRight);


                //  XRect recValorDefensaConsumidor147 = new XRect(XUnit.FromMillimeter(194), XUnit.FromMillimeter(278), 10, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor147);
                //  graphfont.DrawString("147", fontArial8, BrushBlack, recValorDefensaConsumidor147, formatRight);


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(284), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);
                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(287), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);


                //total a pagar
                xp.X = XUnit.FromMillimeter(83);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(83);
                xp.Y = XUnit.FromMillimeter(35);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(83);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, xp);

                //Concepto
                xp.X = XUnit.FromMillimeter(13);
                xp.Y = XUnit.FromMillimeter(77);
                graphfont.DrawString("CONCEPTO", fontArial9B, BrushBlack, xp);

                //Concepto
                xp.X = XUnit.FromMillimeter(122);
                xp.Y = XUnit.FromMillimeter(77);
                graphfont.DrawString("IMPORTE", fontArial9B, BrushBlack, xp);


                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(28), 60, 10);
                graphfont.DrawString(sEstadoTotalPagar, fontArial9B, BrushBlack, rect, formatRight);





                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(32), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial9B, BrushBlack, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(36), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontArial9B, BrushBlack, rectNumeroCliente, formatRight);



                //Nombre y Apellido
                int rangodesde = (sNombreApellido.Length < 72) ? 30 : 39;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 42, ' ');
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(48);
                    graphfont.DrawString(sNombreApellido, fontArial8B, BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[0], fontArial8B, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(50);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8B, BrushBlack, xp);

                }

                //Domicilio 1
                rangodesde = (sDomicilio1.Length < 72) ? 30 : 39;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(sDomicilio1, fontArial8, BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(53);
                    graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(56);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);

                }
                //Domicilio 2

                rangodesde = (sDomicilio2.Length < 72) ? 30 : 39;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 42, ' ');
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(60);
                    graphfont.DrawString(sDomicilio2, fontArial8, BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(62);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);

                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                rangodesde = (sDomicilio3.Length < 72) ? 30 : 39;
                List<string> lDomiciolio3 = ParseaCampo(sDomicilio3, rangodesde, 42, ' ');
                graphfont.DrawString(lDomiciolio3[0], fontArial8, BrushBlack, xp);
                if (lDomiciolio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomiciolio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(120);
                    xp.Y = XUnit.FromMillimeter(20);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);



                if (ca.DebitoAutomatico == false)
                {
                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(35);
                        xp.Y = XUnit.FromMillimeter(217);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(39);
                        xp.Y = XUnit.FromMillimeter(226);
                        graphfont.DrawString(sCodBarra2, fontArial9, BrushBlack, xp);
                    }


                }
                else
                {
                    if (sTipoComprobante != "3")
                    {
                        xp.X = XUnit.FromMillimeter(25);
                        xp.Y = XUnit.FromMillimeter(221);
                        graphfont.DrawString(ca.LeyendaDebitoAutomatico, fontArial9, BrushBlack, xp);
                    }
                }



                if (!string.IsNullOrEmpty(sCodBarra3))
                {
                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(261);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode3.Text = sCodBarra3;//value of code to draw on page
                    BarCode3.StartChar = Convert.ToChar("*");
                    BarCode3.EndChar = Convert.ToChar("*");
                    BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                    BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode3.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode3, xp);
                    xp.X = XUnit.FromMillimeter(39);
                    xp.Y = XUnit.FromMillimeter(270);
                    graphfont.DrawString(sCodBarra3, fontArial9, BrushBlack, xp);
                }



                graphfont.RotateTransform(90);
                graphfont.DrawString(sCodBarra1, fontArial6, XBrushes.Black, new XPoint(140, -55));
                graphfont.Dispose();
            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal1");

            }


        }




        private void FgetPageFacturaBsal1Mod092015(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {
 

                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." +  ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido; 
                string sDomicilio1 =ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; 
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip;
                
                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = ca.NumCuit;
                string sDni = ca.Documento;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = (!string.IsNullOrEmpty(ca.Concepto_01)) ? ca.Concepto_01 : " "; 
                sConcepto[1] = (!string.IsNullOrEmpty(ca.Concepto_02)) ? ca.Concepto_02 : " ";
                sConcepto[2] = (!string.IsNullOrEmpty(ca.Concepto_03)) ? ca.Concepto_03 : " ";
                sConcepto[3] = (!string.IsNullOrEmpty(ca.Concepto_04)) ? ca.Concepto_04 : " ";
                sConcepto[4] = (!string.IsNullOrEmpty(ca.Concepto_05)) ? ca.Concepto_05 : " ";
                sConcepto[5] = (!string.IsNullOrEmpty(ca.Concepto_06)) ? ca.Concepto_06 : " ";
                sConcepto[6] = (!string.IsNullOrEmpty(ca.Concepto_07)) ? ca.Concepto_07 : " ";
                sConcepto[7] = (!string.IsNullOrEmpty(ca.Concepto_08)) ? ca.Concepto_08 : " ";
                sConcepto[8] = (!string.IsNullOrEmpty(ca.Concepto_09)) ? ca.Concepto_09 : " ";
                sConcepto[9] = (!string.IsNullOrEmpty(ca.Concepto_10)) ? ca.Concepto_10 : " ";
                sConcepto[10] = (!string.IsNullOrEmpty(ca.Concepto_11)) ? ca.Concepto_11 : " ";
                sConcepto[11] = (!string.IsNullOrEmpty(ca.Concepto_12)) ? ca.Concepto_12 : " ";
                sConcepto[12] = (!string.IsNullOrEmpty(ca.Concepto_13)) ? ca.Concepto_13 : " ";
                sConcepto[13] = (!string.IsNullOrEmpty(ca.Concepto_14)) ? ca.Concepto_14 : " ";
                sConcepto[14] = (!string.IsNullOrEmpty(ca.Concepto_15)) ? ca.Concepto_15 : " ";
                sConcepto[15] = (!string.IsNullOrEmpty(ca.Concepto_16)) ? ca.Concepto_16 : " ";

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = "CAE: " + ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }


                string c1 = ca.c1;
                string c2 = ca.c2;
                string c3  = (!string.IsNullOrEmpty(ca.c3)) ? "$ " + ca.c3 : " ";
                string c4 = ca.c4;
                string c5 = ca.c5;
                ca.c6 = ca.c6.Trim();
                string c6 = (!string.IsNullOrEmpty(ca.c6)) ? "$ " + ca.c6 : " ";
                string c7 = ca.c7;
                string c8 = ca.c8;
                ca.c9 = ca.c9.Trim();
                string c9 = (!string.IsNullOrEmpty(ca.c9)) ? "$ " + ca.c9 : " ";
                string c10 = (!string.IsNullOrEmpty(ca.EstadoMontoFacturadocupon)) ? "$ " + ca.EstadoMontoFacturadocupon : " ";
                string c11 =(!string.IsNullOrEmpty(ca.ValorTotalCupon)) ? "$ " + ca.ValorTotalCupon : " ";



                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura;

                    }
                    else
                        sValorAfipInforma1 = lValorPie[0];
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; 
                string sCodBarra3 = ca.CodBarra2; 
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                //Leyendas Cambiables
                string p1 = ca.EtiqCompAp1;
                string p2 = ca.EtiqFvAp1;
                string p3 = ca.EtiqMfAp1;
                string p4 = ca.EtiqCompBp1;
                string p5 = ca.EtiqFvBp1;
                string p6 = ca.EtiqMfBp1;
                string p7 = ca.EtiqCompTp1;
                string p8 = ca.EtiqFvTp1;
                string p9 = ca.EtiqMfTp1;
                string p10 = "MONTO FACTURADO";
                string p11 = "SALDO TOTAL";

  
                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;


                XStringFormat formatFarLeft = new XStringFormat();
                formatFarLeft.LineAlignment = XLineAlignment.Far;
                formatFarLeft.Alignment = XStringAlignment.Near;



                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese

                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe

                graph.DrawRectangle(BrushVerdeAntina, 121, 166, 31, 5);  //rectangulo subtotal iva etc//rectangulo subtotal iva etc
                
                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

          //      graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

              //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 188, 49, 20, 3, 3);  //registrese
              //  graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
             //   graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3); //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago


                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3
                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 121, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento
                //graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                // graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
                if (ca.CodFact == "CÓDIGO 08")
                {
                    graph.DrawLine(LineasFactura, 92, 8, 92, 20);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(LineasFactura, 92, 20, 152, 20);  //l8
                }
                else
                {
                    graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
                }
                
                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar
                
                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }
                
                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8);//g3 -> Antina

              //  if (ca.Empresa != "Eurosat S.A.")
              //  {
                   // pngLogopath = sImageRoute + "avisoFA_03.png"; //ca.ImagenesComprobante[0];

                pngLogopath = sImageRoute + ca.ImagenesComprobante[0];

                XImage imageAviso = XImage.FromFile(pngLogopath);

                graph.DrawImage(imageAviso, 153, 57, 47, 70);   //G2



                  //  pngLogopath = sImageRoute + getImageAviso2015(sFechaFactura); 
                  //  XImage imageAviso = XImage.FromFile(pngLogopath);
                  //  graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
              //  }
                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 265, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 265, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 265, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 238, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 273, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);
                
                 //Leyfact

                 if (sTipoFact != "X")
                 {
                     //xp.X = XUnit.FromMillimeter(95);
                     //xp.Y = XUnit.FromMillimeter(26);
                     if (ca.CodFact == "CÓDIGO 08")
                     {
                         xp.X = XUnit.FromMillimeter(95);
                         xp.Y = XUnit.FromMillimeter(23);
                         graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                     }
                     else
                     {
                         xp.X = XUnit.FromMillimeter(95);
                         xp.Y = XUnit.FromMillimeter(26);
                         graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                     }

                 }
                 else 
                 {
                     xp.X = XUnit.FromMillimeter(154);
                     xp.Y = XUnit.FromMillimeter(5);
                     graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);
                 
                 }
                 //Leyfact

                 //xp.X = XUnit.FromMillimeter(115);
                 //xp.Y = XUnit.FromMillimeter(26);
                 //if (ca.CodFact == "CÓDIGO 08")
                 //    xp.X = XUnit.FromMillimeter(119);
                 //else
                 //    xp.X = XUnit.FromMillimeter(115);
                 //// sNumFact = "Nro.";
                 //graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                
                 // sNumFact = "Nro.";
                 if (ca.CodFact == "CÓDIGO 08")
                 {
                     xp.X = XUnit.FromMillimeter(95);
                     xp.Y = XUnit.FromMillimeter(26);
                     graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                 }
                 else
                 {
                     xp.X = XUnit.FromMillimeter(115);
                     xp.Y = XUnit.FromMillimeter(26);
                     graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                 }



                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                 graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);


                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);



                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
               // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);


                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);


                //total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);


                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


           
                //Nombre y Apellido
                int rangodesde;
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 189);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }


                //Domicilio 1
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1.Trim(), fontGothamBold8, 189);// (sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }


                //Domicilio 2
                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2.Trim(), fontGothamBold8, 189);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
        
                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 192);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }






                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(45);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(45), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(45), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(52);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(50), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(50), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(61), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(62);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(61), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);




                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto2[0].Trim()))  //23/01/2018 Hernan Forni Error en Salida 1
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);

                if (!string.IsNullOrEmpty(sConcepto3[0].Trim()))  // 25/01/2018 Hernan Forni Error Boletas
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);

                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto4[0].Trim()))  // 25/01/2018 Hernan Forni Error Boletas
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);

                if (!string.IsNullOrEmpty(sConcepto5[0].Trim()))  //23/01/2018 Hernan Forni Error en Salida 1
                              graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);

                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                if (!string.IsNullOrEmpty(sConcepto[5].Trim()))
                    graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                if (!string.IsNullOrEmpty(sConcepto[6].Trim()))
                    graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                if (!string.IsNullOrEmpty(sConcepto[7].Trim()))
                    graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                if (!string.IsNullOrEmpty(sConcepto[8].Trim()))
                    graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                if (!string.IsNullOrEmpty(sConcepto[9].Trim()))
                    graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                if (!string.IsNullOrEmpty(sConcepto[10].Trim()))
                    graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                if (!string.IsNullOrEmpty(sConcepto[11].Trim()))
                    graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                if (!string.IsNullOrEmpty(sConcepto[12].Trim()))
                    graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                if (!string.IsNullOrEmpty(sConcepto[13].Trim()))
                    graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                if (!string.IsNullOrEmpty(sConcepto[14].Trim()))
                    graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                if (sConcepto[15] != null)
                    if (!string.IsNullOrEmpty(sConcepto[15].Trim()))
                        graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);


                /*

                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(162);
                xp.Y = XUnit.FromMillimeter(132);
                graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(137);
                graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(147);
                graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushBlack, xp);

                */

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


              //  if (dFechaFactura > dFechaCambioTextoSucursalMoron)
              //  {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(167);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, BrushBlack, xp);
             /*   }
                else
                {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(163);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
               / }*/

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);


                /*
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(194);
                graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(155);
                xp.Y = XUnit.FromMillimeter(197);
                graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(204);
                graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushBlack, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);





                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
               graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);

               // Footer
               XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
               //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
               graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

               XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
               //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
               graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

               XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
               //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
               graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);

                //Leyendas Variables
                //aqalizo cada tenxto para ver si son 1 o 2 reenglones

             
                //P1  
                string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP1_0;
                XRect rectP1_1;
                if (SplitP1.Length > 1)
                {
                    rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    rectP1_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(226), 67, 7);
                    //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                    graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                    graphfont.DrawString(SplitP1[1], fontGothamBold7, BrushBoleta2015_1, rectP1_1, formatRight);
                }
                else
                {

                    rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                }


                //P2
                string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP2_0;
                XRect rectP2_1;
                if (SplitP2.Length > 1)
                {
                    rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(223), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    rectP2_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(226), 67, 7);
                    //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                    graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                    graphfont.DrawString(SplitP2[1], fontGothamBold7, BrushBoleta2015_1, rectP2_1, formatRight);
                }
                else
                {

                    rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(224), 67, 7);
                    //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                }



                //P3
                string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP3_0;
                XRect rectP3_1;
                if (SplitP3.Length > 1)
                {
                    rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(222), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    rectP3_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(225), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                    graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                    graphfont.DrawString(SplitP3[1], fontGothamBold7, BrushBoleta2015_1, rectP3_1, formatRight);
                }
                else
                {

                    rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                }





                //P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(231), 67, 7);  //-6
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(234), 67, 7);  //-3
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatRight);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(232), 67, 7);  //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                }



                //P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatRight);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatRight);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                }




                //P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(267), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(270), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatRight);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatRight);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(266), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatRight);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(267), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(270), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatRight);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatRight);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(266), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatRight);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(267), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(270), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatRight);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, BrushBoleta2015_1, rectP9_1, formatRight);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(266), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatRight);
                }


                XRect rectC1 = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(224), 65, 5);
               // graphfont.DrawRectangle(XPens.Red, rectC1);
                graphfont.DrawString(c1, fontGothamBold7, BrushBoleta2015_1, rectC1, formatCenter);


                XRect rectC2 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(224), 65, 5);
             //   graphfont.DrawRectangle(XPens.Red, rectC2);
                graphfont.DrawString(c2, fontGothamBold7, BrushBoleta2015_1, rectC2, formatCenter);

                XRect rectC3 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(224), 45, 5);
               // graphfont.DrawRectangle(XPens.Red, rectC3);
                graphfont.DrawString(c3.Trim(), fontGothamBold7, BrushBoleta2015_1, rectC3, formatRight);


                XRect rectC4 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(232), 45, 5);
                 //graphfont.DrawRectangle(XPens.Red, rectC1);
                if (!string.IsNullOrEmpty( c4.Trim()))
                       graphfont.DrawString(c4, fontGothamBold7, BrushBoleta2015_1, rectC4, formatRight);


                XRect rectC5 = new XRect(XUnit.FromMillimeter(109), XUnit.FromMillimeter(232), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC2);
                if (!string.IsNullOrEmpty(c5.Trim()))
                graphfont.DrawString(c5, fontGothamBold7, BrushBoleta2015_1, rectC5, formatRight);

                XRect rectC6 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(232), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                if (!string.IsNullOrEmpty(c6.Trim()))
                graphfont.DrawString(c6, fontGothamBold7, BrushBoleta2015_1, rectC6, formatRight);



                XRect rectC7 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(266), 45, 5);
               // graphfont.DrawRectangle(XPens.Red, rectC1);
                if (!string.IsNullOrEmpty(c7.Trim()))
                graphfont.DrawString(c7, fontGothamBold7, BrushBoleta2015_1, rectC7, formatRight);
                
                XRect rectC8 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(266), 65, 5);
             //    graphfont.DrawRectangle(XPens.Red, rectC8);
                if (!string.IsNullOrEmpty(c8.Trim()))
                graphfont.DrawString(c8, fontGothamBold7, BrushBoleta2015_1, rectC8, formatCenter);

                XRect rectC9 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(266), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                if (!string.IsNullOrEmpty(c9.Trim()))
                graphfont.DrawString(c9, fontGothamBold7, BrushBoleta2015_1, rectC9, formatRight);

                /*
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 267, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 267, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 267, 25, 5, 3, 3);  //r11
           */
                //Monto Facturado
                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold8, BrushBoleta2015_1, xp);
                XRect rectC10 = new XRect(XUnit.FromMillimeter(150), XUnit.FromMillimeter(216), 100, 8);
                // graphfont.DrawRectangle(XPens.Red, rectC10);
                if (!string.IsNullOrEmpty(c10.Trim()))
                graphfont.DrawString(c10, fontGothamBold8, BrushBoleta2015_1, rectC10, formatRight);

                //Saldo Total
                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold8, BrushBoleta2015_1, xp);
                XRect rectC11 = new XRect(XUnit.FromMillimeter(150), XUnit.FromMillimeter(258), 100, 8);
            //    graphfont.DrawRectangle(XPens.Red, rectC11);
                if (!string.IsNullOrEmpty(c11.Trim()))
                graphfont.DrawString(c11, fontGothamBold8, BrushBoleta2015_1, rectC11, formatRight);



                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(196), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                if (!string.IsNullOrEmpty(sValorAfipInforma1.Trim()))
                    graphfont.DrawString(sValorAfipInforma1, fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma1, formatLeft);
               
                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(199), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                if (!string.IsNullOrEmpty(sValorAfipInforma2.Trim()))
                    graphfont.DrawString(sValorAfipInforma2.TrimStart(), fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                 //   xp.X = XUnit.FromMillimeter(45);
                  //  xp.Y = XUnit.FromMillimeter(194);
                  //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(190), 264, 9);
                 //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);
                }


                 if ((ca.DebitoAutomatico == false))
                  {

                
                if (!string.IsNullOrEmpty(sCodBarra2))
                {
                    xp.X = XUnit.FromMillimeter(57);
                    xp.Y = XUnit.FromMillimeter(240);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode2.Text = sCodBarra2;//value of code to draw on page
                    BarCode2.StartChar = Convert.ToChar("*");
                    BarCode2.EndChar = Convert.ToChar("*");
                    BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode2.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode2, xp);
                    xp.X = XUnit.FromMillimeter(58);
                    xp.Y = XUnit.FromMillimeter(251);
                    graphfont.DrawString(sCodBarra2, fontGothamBook9, BrushBoleta2015_1, xp);
                }



                  }
                 else
                 {
                     if (sTipoComprobante != "3")
                     {
                         xp.X = XUnit.FromMillimeter(61);
                         xp.Y = XUnit.FromMillimeter(247);
                         graphfont.DrawString(ca.LeyendaDebitoAutomatico, fontGothamBook7, BrushBoleta2015_1, xp);
                     }
                 }

          if (!string.IsNullOrEmpty(sCodBarra3))
                {
                    xp.X = XUnit.FromMillimeter(57);
                    xp.Y = XUnit.FromMillimeter(276);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode3.Text = sCodBarra3;//value of code to draw on page
                    BarCode3.StartChar = Convert.ToChar("*");
                    BarCode3.EndChar = Convert.ToChar("*");
                    BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode3.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode3, xp);
                    xp.X = XUnit.FromMillimeter(58);
                    xp.Y = XUnit.FromMillimeter(287);
                    graphfont.DrawString(sCodBarra3, fontGothamBook9, BrushBoleta2015_1, xp);
                }

             
                            xp.X = XUnit.FromMillimeter(12);
                            xp.Y = XUnit.FromMillimeter(68);
                            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                            BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                            BarCode1.Text = sCodBarra1;//value of code to draw on page
                            BarCode1.StartChar = Convert.ToChar("*");
                            BarCode1.EndChar = Convert.ToChar("*");
                            XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                            BarCode1.Size = BARCODE_SIZE;
                            BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                            XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                            BarCode1.Size.ToXPoint();
                            graphfont.DrawBarCode(BarCode1, xp);

                            graphfont.RotateTransform(270);
                            graphfont.DrawString(sCodBarra1, fontArial8, XBrushes.Black, new XPoint((-185), 60));
                         
                graphfont.Dispose();
             



            }
            catch (Exception ex)
            {
                //return null;
                
                    throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message + " " + ex.StackTrace.ToString(), "FgetPageFacturaBsal1Mod092015");

            }
           
        }



        private void FgetPageFacturaBsal1Mod092015_2(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {


                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa2;





                string sTipoFact = ca.TipoFact2;
                string sCofFact = ca.CodFact2;
                string sLeyFact = ca.LeyFact2;
                string sNumFact = "Nro." + ca.NumFactCuatro2 + " - " + ca.NumFactOcho2; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido2;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno2;
                string sDomicilio2 = ca.DomicilioDos2;
                string sDomicilio3 = ca.DomicilioTres2;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar2.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento2; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente2; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa2; // "30 69642889 8";
                string sNumConv = ca.NumConv2;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio2;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta_2;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior_2.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado_2.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal2.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura2;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura2);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip2;

                string sPeriodo = ca.Periodo2;// "May/15";
                string sIVA = ca.CategoriaIva2;
                string sCuit = ca.NumCuit2;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = (!string.IsNullOrEmpty(ca.Concepto_01_2)) ?  ca.Concepto_01_2 : " "; 
                sConcepto[1] = (!string.IsNullOrEmpty(ca.Concepto_02_2)) ? ca.Concepto_02_2 : " "; 
                sConcepto[2] = (!string.IsNullOrEmpty(ca.Concepto_03_2)) ?  ca.Concepto_03_2 : " ";
                sConcepto[3] = (!string.IsNullOrEmpty(ca.Concepto_04_2)) ?  ca.Concepto_04_2 : " ";
                sConcepto[4] = (!string.IsNullOrEmpty(ca.Concepto_05_2)) ?  ca.Concepto_05_2 : " ";
                sConcepto[5] = (!string.IsNullOrEmpty(ca.Concepto_06_2)) ?  ca.Concepto_06_2 : " ";
                sConcepto[6] = (!string.IsNullOrEmpty(ca.Concepto_07_2)) ?  ca.Concepto_07_2 : " ";
                sConcepto[7] = (!string.IsNullOrEmpty(ca.Concepto_08_2)) ?  ca.Concepto_08_2 : " ";
                sConcepto[8] = (!string.IsNullOrEmpty(ca.Concepto_09_2)) ?  ca.Concepto_09_2 : " ";
                sConcepto[9] = (!string.IsNullOrEmpty(ca.Concepto_10_2)) ?  ca.Concepto_10_2 : " ";
                sConcepto[10] = (!string.IsNullOrEmpty(ca.Concepto_11_2)) ? ca.Concepto_11_2 : " ";
                sConcepto[11] = (!string.IsNullOrEmpty(ca.Concepto_12_2)) ? ca.Concepto_12_2 : " ";
                sConcepto[12] = (!string.IsNullOrEmpty(ca.Concepto_13_2)) ? ca.Concepto_13_2 : " ";
                sConcepto[13] = (!string.IsNullOrEmpty(ca.Concepto_14_2)) ? ca.Concepto_14_2 : " ";
                sConcepto[14] = (!string.IsNullOrEmpty(ca.Concepto_15_2)) ? ca.Concepto_15_2 : " ";
                sConcepto[15] = (!string.IsNullOrEmpty(ca.Concepto_16_2)) ? ca.Concepto_16_2 : " ";

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01_2)) ? "$ " + ca.Importe_01_2 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02_2)) ? "$ " + ca.Importe_02_2 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03_2)) ? "$ " + ca.Importe_03_2 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04_2)) ? "$ " + ca.Importe_04_2 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05_2)) ? "$ " + ca.Importe_05_2 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06_2)) ? "$ " + ca.Importe_06_2 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07_2)) ? "$ " + ca.Importe_07_2 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08_2)) ? "$ " + ca.Importe_08_2 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09_2)) ? "$ " + ca.Importe_09_2 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10_2)) ? "$ " + ca.Importe_10_2 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11_2)) ? "$ " + ca.Importe_11_2 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12_2)) ? "$ " + ca.Importe_12_2 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13_2)) ? "$ " + ca.Importe_13_2 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14_2)) ? "$ " + ca.Importe_14_2 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15_2)) ? "$ " + ca.Importe_15_2 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16_2)) ? "$ " + ca.Importe_16_2 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado_2.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto_2.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs_2.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro2 + ca.NumFactOcho2;

                string sValorCae = "CAE: " + ca.NumCae2;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento2)) ? FormateoFechaCae(ca.CaeFechaVencimiento2) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura2; 
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                string sDni = ca.Documento2;

                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura;

                    }
                    else
                    {
                        sValorAfipInforma1 = lValorPie[0];
                    }
                    sValorAfipInforma2 = lValorPie[1];
                }

   
                string sCodBarra1 = ca.CodBarraCorreo_2;
                string sCodBarra2 = ca.CodBarra1_2;
                string sCodBarra3 = ca.CodBarra2_2;
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                //Leyendas Cambiables
                string p1 = string.Empty;
                string p2 = string.Empty;
                string p3 = string.Empty;
                string p4 = string.Empty;
                string p5 = string.Empty;
                string p6 = string.Empty;
                string p7 = string.Empty;
                string p8 = string.Empty;
                string p9 = string.Empty;
                string p10 = string.Empty;
                string p11 = string.Empty;

                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                this.privateFonts.AddFontFile(sGothamBold);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(this.privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                this.privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;





                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);


                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese

                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe

                graph.DrawRectangle(BrushVerdeAntina, 121, 166, 31, 5);  //rectangulo subtotal iva etc


                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

               // graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

          //      graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 188, 49, 20, 3, 3);  //registrese
          //      graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
          //      graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3);  //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago


                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 121, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento


               // graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar    

                if (ca.CodFact2 == "CÓDIGO 08")
                {
                    graph.DrawLine(LineasFactura, 92, 8, 92, 20);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(LineasFactura, 92, 20, 152, 20);  //l8
                }
                else
                {
                    graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
                }

               // graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar


                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8);//g3 -> Antina

                //En la segunda hoja no debe mostrar de su interes
                /*
                pngLogopath = sImageRoute +  "avisoFA_03.png"; //ca.ImagenesComprobante[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
                */

                if (ca.ImagenesComprobante2.Count >0)
                {
                   pngLogopath = sImageRoute + ca.ImagenesComprobante2[0];
                   XImage imageAviso = XImage.FromFile(pngLogopath);
                   graph.DrawImage(imageAviso, 153, 57, 47, 70);   //G2
                }
                


                //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
                // graph.DrawLine(LineasFactura, 33, 174, 33, 191);  //l11
                //   graph.DrawLine(LineasFactura, 60, 174, 60, 191);  //l11            
                //     graph.DrawLine(LineasFactura, 88, 174, 88, 191);  //l11
                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 265, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 265, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 265, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 271, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);




                //Leyfact
                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);


                    if (ca.CodFact2 == "CÓDIGO 08")
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(23);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    }
                    else
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(26);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    }
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);

                }
                // sNumFact = "Nro.";
                if (ca.CodFact2 == "CÓDIGO 08")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                }

                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);


                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);



                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);


                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);


                //total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);


                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


                //Nombre y Apellido
                int rangodesde;
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 1
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188);// (sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 2
                rangodesde = (sDomicilio2.Length < 72) ? 30 : 39;

                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                rangodesde = (sDomicilio3.Length < 72) ? 30 : 39;
                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }



                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(49);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(47), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(47), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(53);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(51), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(51), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(59), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(61);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(59), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);


                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto1[0].Trim()))
                    graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto2[0].Trim()))
                    graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto3[0].Trim()))
                    graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto4[0].Trim()))
                    graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto5[0].Trim()))
                    graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                if (!string.IsNullOrEmpty(sConcepto[5].Trim()))
                    graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                if (!string.IsNullOrEmpty(sConcepto[6].Trim()))
                    graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                if (!string.IsNullOrEmpty(sConcepto[7].Trim()))
                    graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                if (!string.IsNullOrEmpty(sConcepto[8].Trim()))
                    graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                if (!string.IsNullOrEmpty(sConcepto[9].Trim()))
                    graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                if (!string.IsNullOrEmpty(sConcepto[10].Trim()))
                    graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                if (!string.IsNullOrEmpty(sConcepto[11].Trim()))
                    graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                if (!string.IsNullOrEmpty(sConcepto[12].Trim()))
                    graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                if (!string.IsNullOrEmpty(sConcepto[13].Trim()))
                    graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                if (!string.IsNullOrEmpty(sConcepto[14].Trim()))
                    graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                if (!string.IsNullOrEmpty(sConcepto[15].Trim()))
                    graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);



                /*
                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(162);
                xp.Y = XUnit.FromMillimeter(132);
                graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(137);
                graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(147);
                graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushBlack, xp);
                */


                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


               // if (dFechaFactura > dFechaCambioTextoSucursalMoron)
               // {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(167);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, BrushBlack, xp);
                /*
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(163);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                }
                */
                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);


                /*
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(194);
                graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(155);
                xp.Y = XUnit.FromMillimeter(197);
                graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(204);
                graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushBlack, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);





                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);




            
                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones
                 
                          //P1  
                      string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP1_0;
                      XRect rectP1_1;
                      if (SplitP1.Length > 1)
                      {
                          rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(221), 67, 7);
                         // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                          rectP1_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(224), 67, 7);
                        //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                          graphfont.DrawString(SplitP1[0], fontArial7B, BrushBoleta2015_1, rectP1_0, formatCenter);
                          graphfont.DrawString(SplitP1[1], fontArial7B, BrushBoleta2015_1, rectP1_1, formatCenter);
                      }
                      else
                      {

                          rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(223), 67, 7);
                         // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                          graphfont.DrawString(SplitP1[0], fontArial7B, BrushBoleta2015_1, rectP1_0, formatCenter);
                      }


                      //P2
                      string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP2_0;
                      XRect rectP2_1;
                      if (SplitP2.Length > 1)
                      {
                          rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(221), 67, 7);
                       //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                          rectP2_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(224), 67, 7);
                      //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                          graphfont.DrawString(SplitP2[0], fontArial7B, BrushBoleta2015_1, rectP2_0, formatCenter);
                          graphfont.DrawString(SplitP2[1], fontArial7B, BrushBoleta2015_1, rectP2_1, formatCenter);
                      }
                      else
                      {

                          rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(223), 67, 7);
                     //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                          graphfont.DrawString(SplitP2[0], fontArial7B, BrushBoleta2015_1, rectP2_0, formatCenter);
                      }



                      //P3
                      string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP3_0;
                      XRect rectP3_1;
                      if (SplitP3.Length > 1)
                      {
                          rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(221), 67, 7);
                       //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                          rectP3_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                      //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                          graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                          graphfont.DrawString(SplitP3[1], fontArial7B, BrushBoleta2015_1, rectP3_1, formatCenter);
                      }
                      else
                      {

                          rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                      //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                          graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                      }
 




                //P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(230), 67, 7);  //-6
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(233), 67, 7);  //-3
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatCenter);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(232), 67, 7);  //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                }



                //P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatCenter);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatCenter);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                }




                //P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(269), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(272), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatCenter);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(268), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(269), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(272), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatCenter);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(268), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(269), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(272), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatCenter);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, BrushBoleta2015_1, rectP9_1, formatCenter);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(268), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold9, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold9, BrushBoleta2015_1, xp);


                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);

                /*
                if ((ca.DebitoAutomatico == false))
                {


                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(235);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(246);
                        graphfont.DrawString(sCodBarra2, fontGothamBook9, brush, xp);
                    }

              

                }

      if (!string.IsNullOrEmpty(sCodBarra3))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(272);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode3.Text = sCodBarra3;//value of code to draw on page
                        BarCode3.StartChar = Convert.ToChar("*");
                        BarCode3.EndChar = Convert.ToChar("*");
                        BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode3.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode3, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(283);
                        graphfont.DrawString(sCodBarra3, fontGothamBook9, brush, xp);
                    }
                 * */


                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {

                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(190), 264, 9);
                    //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);

                graphfont.RotateTransform(270);
                graphfont.DrawString(sCodBarra1, fontArial8, XBrushes.Black, new XPoint((-185), 60));

                graphfont.Dispose();




            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal1Mod092015");

            }

        }




        /// <summary>
        /// 03/07/2019 Para Factura de Empleado de Internet
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="ca"></param>
        /// <param name="pdf"></param>
        private void FgetPageFacturaBsal1Mod092015_3(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                string sNombreEmpresa = ca.NombreEmpresa3;
                string sTipoFact = ca.TipoFact3;
                string sCofFact = ca.CodFact3;
                string sLeyFact = ca.LeyFact3;
                string sNumFact = "Nro." + ca.NumFactCuatro3 + " - " + ca.NumFactOcho3; // 0020 - 00003639";
                string sNombreApellido = ca.NombreApellido3; // "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno3;
                string sDomicilio2 = ca.DomicilioDos3;
                string sDomicilio3 = ca.DomicilioTres3;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar3.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento3; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente3; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa3; // "30 69642889 8";
                string sNumConv = ca.NumConv3;            // "901 221621 2";
                string sFechaInicio = ca.FechaInicio3;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta_3;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior_3.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado_3.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal3.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura3;  // "04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura3);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip3;

                string sPeriodo = ca.Periodo3; // "May/15";
                string sIVA = ca.CategoriaIva3;
                string sCuit = ca.NumCuit3;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = (!string.IsNullOrEmpty(ca.Concepto_01_3)) ? ca.Concepto_01_3 : " ";
                sConcepto[1] = (!string.IsNullOrEmpty(ca.Concepto_02_3)) ? ca.Concepto_02_3 : " ";
                sConcepto[2] = (!string.IsNullOrEmpty(ca.Concepto_03_3)) ? ca.Concepto_03_3 : " ";
                sConcepto[3] = (!string.IsNullOrEmpty(ca.Concepto_04_3)) ? ca.Concepto_04_3 : " ";
                sConcepto[4] = (!string.IsNullOrEmpty(ca.Concepto_05_3)) ? ca.Concepto_05_3 : " ";
                sConcepto[5] = (!string.IsNullOrEmpty(ca.Concepto_06_3)) ? ca.Concepto_06_3 : " ";
                sConcepto[6] = (!string.IsNullOrEmpty(ca.Concepto_07_3)) ? ca.Concepto_07_3 : " ";
                sConcepto[7] = (!string.IsNullOrEmpty(ca.Concepto_08_3)) ? ca.Concepto_08_3 : " ";
                sConcepto[8] = (!string.IsNullOrEmpty(ca.Concepto_09_3)) ? ca.Concepto_09_3 : " ";
                sConcepto[9] = (!string.IsNullOrEmpty(ca.Concepto_10_3)) ? ca.Concepto_10_3 : " ";
                sConcepto[10] = (!string.IsNullOrEmpty(ca.Concepto_11_3)) ? ca.Concepto_11_3 : " ";
                sConcepto[11] = (!string.IsNullOrEmpty(ca.Concepto_12_3)) ? ca.Concepto_12_3 : " ";
                sConcepto[12] = (!string.IsNullOrEmpty(ca.Concepto_13_3)) ? ca.Concepto_13_3 : " ";
                sConcepto[13] = (!string.IsNullOrEmpty(ca.Concepto_14_3)) ? ca.Concepto_14_3 : " ";
                sConcepto[14] = (!string.IsNullOrEmpty(ca.Concepto_15_3)) ? ca.Concepto_15_3 : " ";
                sConcepto[15] = (!string.IsNullOrEmpty(ca.Concepto_16_3)) ? ca.Concepto_16_3 : " ";

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01_3)) ? "$ " + ca.Importe_01_3 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02_3)) ? "$ " + ca.Importe_02_3 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03_3)) ? "$ " + ca.Importe_03_3 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04_3)) ? "$ " + ca.Importe_04_3 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05_3)) ? "$ " + ca.Importe_05_3 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06_3)) ? "$ " + ca.Importe_06_3 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07_3)) ? "$ " + ca.Importe_07_3 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08_3)) ? "$ " + ca.Importe_08_3 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09_3)) ? "$ " + ca.Importe_09_3 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10_3)) ? "$ " + ca.Importe_10_3 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11_3)) ? "$ " + ca.Importe_11_3 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12_3)) ? "$ " + ca.Importe_12_3 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13_3)) ? "$ " + ca.Importe_13_3 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14_3)) ? "$ " + ca.Importe_14_3 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15_3)) ? "$ " + ca.Importe_15_3 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16_3)) ? "$ " + ca.Importe_16_3 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " "; // ca.AbonoItem_01;
                sAbonoItem[1] = " "; // ca.AbonoItem_02;
                sAbonoItem[2] = " "; // ca.AbonoItem_03;
                sAbonoItem[3] = " "; // ca.AbonoItem_04;
                sAbonoItem[4] = " "; // ca.AbonoItem_05;
                sAbonoItem[5] = " "; // ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado_3.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto_3.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto3.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs_3.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal3.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro3 + ca.NumFactOcho3;

                string sValorCae = "CAE: " + ca.NumCae3;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento3)) ? this.FormateoFechaCae(ca.CaeFechaVencimiento3) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura3;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                string sDni = ca.Documento3;

                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = this.ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura3;

                    }
                    else
                    {
                        sValorAfipInforma1 = lValorPie[0];
                    }
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo_3;
                string sCodBarra2 = ca.CodBarra1_3; 
                string sCodBarra3 = ca.CodBarra2_3; 
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;

                // Leyendas Cambiables
                string p1 = string.Empty;
                string p2 = string.Empty;
                string p3 = string.Empty;
                string p4 = string.Empty;
                string p5 = string.Empty;
                string p6 = string.Empty;
                string p7 = string.Empty;
                string p8 = string.Empty;
                string p9 = string.Empty;
                string p10 = string.Empty;
                string p11 = string.Empty;

                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                this.privateFonts.AddFontFile(sGothamBold);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(this.privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                this.privateFonts.AddFontFile(sGothamBook);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(this.privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                this.privateFonts.AddFontFile(sGothamMedium);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(this.privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                this.privateFonts1.AddFontFile(sGothamMedium1);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(this.privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                // Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen lineasFactura = new XPen(XColors.Black, 0.22);

                // Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;

                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23); // centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18); // registrese

                // Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(this.BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  // r1
                graph.DrawRectangle(this.BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(this.BrushVerdeAntina, 152, 10, 49, 3);

                // rectangulos Verde Antina
                graph.DrawRectangle(this.BrushVerdeAntina, 6, 70, 146, 7);  // Rectangulo Concepto Importe
                graph.DrawRectangle(this.BrushVerdeAntina, 121, 166, 31, 5);  // rectangulo subtotal iva etc


                graph.DrawRectangle(this.BrushVerdeAntina, 152, 50, 49, 6);  // de su interes

                // graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente
                // graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 188, 49, 20, 3, 3);  //registrese
                // graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                // graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                // rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  // r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3);  // r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  // r3 -> Talonario Pago


                graph.DrawLine(lineasFactura, 152, 8, 152, 208);  // l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(lineasFactura, 6, 41, 152, 41);  // l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3
                // graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(lineasFactura, 121, 166, 152, 166);  // l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(lineasFactura, 6, 181, 152, 181);  // l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento


                // graph.DrawLine(LineasFactura, 92, 8, 92, 22);  // l7 Linea Horizontal del Cuadrado Total a Pagar    

                if (ca.CodFact3 == "CÓDIGO 08")
                {
                    graph.DrawLine(lineasFactura, 92, 8, 92, 20);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(lineasFactura, 92, 20, 152, 20);  //l8
                }
                else
                {
                    graph.DrawLine(lineasFactura, 92, 8, 92, 22);  // l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(lineasFactura, 92, 22, 152, 22);  //l8
                }

                // graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(lineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar


                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                // logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12); // g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8); // g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8); // g3 -> Antina

                //En la segunda hoja no debe mostrar de su interes
                /*
                pngLogopath = sImageRoute +  "avisoFA_03.png"; //ca.ImagenesComprobante[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
                */

                if (ca.ImagenesComprobante3.Count > 0)
                {
                    pngLogopath = sImageRoute + ca.ImagenesComprobante2[0];
                    XImage imageAviso = XImage.FromFile(pngLogopath);
                    graph.DrawImage(imageAviso, 153, 57, 47, 70);   // G2
                }



                //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
                // graph.DrawLine(LineasFactura, 33, 174, 33, 191);  //l11
                //   graph.DrawLine(LineasFactura, 60, 174, 60, 191);  //l11            
                //     graph.DrawLine(LineasFactura, 88, 174, 88, 191);  //l11
                graph.DrawLine(lineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 265, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 265, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 265, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 271, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
                */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);

                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();

                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                // Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, this.BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, this.BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, this.BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, this.BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, this.BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, this.BrushBoleta2015_1, xp);

                // total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, this.BrushBoleta2015_1, xp);


                // fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, this.BrushBoleta2015_1, xp);

                // Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, this.BrushBoleta2015_1, xp);

                // valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, this.BrushBoleta2015_1, rect, formatRight);
                
                // valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, this.BrushBoleta2015_1, rectFechaVencimiento, formatRight);
                
                // valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, this.BrushBoleta2015_1, rectNumeroCliente, formatRight);
                                             
                // Leyfact
                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);


                    if (ca.CodFact3 == "CÓDIGO 08")
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(23);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, this.BrushBoleta2015_1, xp);
                    }
                    else
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(26);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, this.BrushBoleta2015_1, xp);
                    }
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, this.BrushBoleta2015_1, xp);

                }
                // sNumFact = "Nro.";
                if (ca.CodFact3 == "CÓDIGO 08")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, this.BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, this.BrushBlack, xp);
                }

                // Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, this.BrushBlack, xp);


                // Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, this.BrushBoleta2015_1, xp);


                // Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, this.BrushBoleta2015_1, xp);


                // Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, this.BrushBoleta2015_1, xp);



                // Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, this.BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                // graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, this.BrushBlack, rectEstadoCuenta, formatFarRight);


                // Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, this.BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, this.BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                // Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, this.BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, this.BrushBoleta2015_1, rectMontoActual, formatRight);


                //total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, this.BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, this.BrushBoleta2015_1, recttot, formatRight);


                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, this.BrushBlack, xp);


                // Nombre y Apellido
                int rangodesde;
                List<string> lNombreApellido = this.ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, this.BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);

                }

                // Domicilio 1
                List<string> lDomicilio1 = this.ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188); // (sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, this.BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);

                }

                // Domicilio 2
                rangodesde = (sDomicilio2.Length < 72) ? 30 : 39;

                List<string> lDomicilio2 = this.ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                    {
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, this.BrushBoleta2015_1, xp);
                    }
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);
                }


                // Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                rangodesde = (sDomicilio3.Length < 72) ? 30 : 39;
                List<string> lDomicilio3 = this.ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);
                }



                // Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(49);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(47), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, this.BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                // graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(47), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, this.BrushBoleta2015_1, recPeriodo, formatRight);



                // IVA
                xp.Y = XUnit.FromMillimeter(53);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(51), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, this.BrushBoleta2015_1, recIVAEtiq, formatLeft);
                // graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(51), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                // graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, this.BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, this.BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                // graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, this.BrushBoleta2015_1, recCUIT, formatRight);


                // DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(59), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, this.BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(61);
                // graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(59), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, this.BrushBoleta2015_1, recDNI, formatRight);


                // Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                // Conceptos e Importes
                // 1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto1[0].Trim()))
                    graphfont.DrawString(sConcepto1[0], fontGothamBook8, this.BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, this.BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, this.BrushBoleta2015_1, rectImporte1, formatRight);



                // 2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto2[0].Trim()))
                    graphfont.DrawString(sConcepto2[0], fontGothamBook8, this.BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, this.BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, this.BrushBoleta2015_1, rectImporte2, formatRight);


                // 3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = this.ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto3[0].Trim()))
                    graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, this.BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, this.BrushBoleta2015_1, rectImporte3, formatRight);



                // 4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = this.ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto4[0].Trim()))
                    graphfont.DrawString(sConcepto4[0], fontGothamBook8, this.BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, this.BrushBoleta2015_1, rectImporte4, formatRight);



                // 5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto5[0].Trim()))
                    graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                // 6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                if (!string.IsNullOrEmpty(sConcepto[5].Trim()))
                    graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                if (!string.IsNullOrEmpty(sConcepto[6].Trim()))
                    graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                if (!string.IsNullOrEmpty(sConcepto[7].Trim()))
                    graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                if (!string.IsNullOrEmpty(sConcepto[8].Trim()))
                    graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                if (!string.IsNullOrEmpty(sConcepto[9].Trim()))
                    graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                if (!string.IsNullOrEmpty(sConcepto[10].Trim()))
                    graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                if (!string.IsNullOrEmpty(sConcepto[11].Trim()))
                    graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                if (!string.IsNullOrEmpty(sConcepto[12].Trim()))
                    graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                if (!string.IsNullOrEmpty(sConcepto[13].Trim()))
                    graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                // 15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                if (!string.IsNullOrEmpty(sConcepto[14].Trim()))
                    graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                if (!string.IsNullOrEmpty(sConcepto[15].Trim()))
                    graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);



                /*
                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(162);
                xp.Y = XUnit.FromMillimeter(132);
                graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(137);
                graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(147);
                graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushBlack, xp);
                */


                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, this.BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, this.BrushBlack, xp);


                // if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                // {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(167);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, this.BrushBlack, xp);
                /*
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(163);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                }
                */
                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, this.BrushBlack, xp);


                /*
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(194);
                graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(155);
                xp.Y = XUnit.FromMillimeter(197);
                graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(204);
                graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushBlack, xp);
                */


                // Concepto
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, this.BrushBlack, rectConcepto, formatCenter);
                //Leyenda Subototal
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, this.BrushBlack, rectImporte, formatCenter);

                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontGothamMedium8, this.BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, this.BrushBoleta2015_1, rectTotal, formatRight);
                                                                      
                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

                // P1  
                string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP1_0;
                XRect rectP1_1;
                if (SplitP1.Length > 1)
                {
                    rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(221), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    rectP1_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_1);

                    graphfont.DrawString(SplitP1[0], this.fontArial7B, this.BrushBoleta2015_1, rectP1_0, formatCenter);
                    graphfont.DrawString(SplitP1[1], this.fontArial7B, this.BrushBoleta2015_1, rectP1_1, formatCenter);
                }
                else
                {

                    rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    graphfont.DrawString(SplitP1[0], this.fontArial7B, this.BrushBoleta2015_1, rectP1_0, formatCenter);
                }


                //P2
                string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP2_0;
                XRect rectP2_1;
                if (SplitP2.Length > 1)
                {
                    rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(221), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    rectP2_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP2_1);

                    graphfont.DrawString(SplitP2[0], this.fontArial7B, this.BrushBoleta2015_1, rectP2_0, formatCenter);
                    graphfont.DrawString(SplitP2[1], this.fontArial7B, this.BrushBoleta2015_1, rectP2_1, formatCenter);
                }
                else
                {

                    rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    graphfont.DrawString(SplitP2[0], fontArial7B, BrushBoleta2015_1, rectP2_0, formatCenter);
                }



                //P3
                string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP3_0;
                XRect rectP3_1;
                if (SplitP3.Length > 1)
                {
                    rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(221), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    rectP3_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP3_1);

                    graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                    graphfont.DrawString(SplitP3[1], fontArial7B, BrushBoleta2015_1, rectP3_1, formatCenter);
                }
                else
                {

                    rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                }
                
                // P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(230), 67, 7);  //-6
                    // graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(233), 67, 7);  //-3
                    // graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatCenter);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(232), 67, 7);  //-4
                    // graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                }

                // P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatCenter);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatCenter);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                }




                //P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(269), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(272), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatCenter);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(268), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(269), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(272), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatCenter);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(268), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(269), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(272), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatCenter);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, BrushBoleta2015_1, rectP9_1, formatCenter);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(268), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold9, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold9, BrushBoleta2015_1, xp);

                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);

                /*
                if ((ca.DebitoAutomatico == false))
                {


                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(235);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(246);
                        graphfont.DrawString(sCodBarra2, fontGothamBook9, brush, xp);
                    }

              

                }

      if (!string.IsNullOrEmpty(sCodBarra3))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(272);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode3.Text = sCodBarra3;//value of code to draw on page
                        BarCode3.StartChar = Convert.ToChar("*");
                        BarCode3.EndChar = Convert.ToChar("*");
                        BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode3.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode3, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(283);
                        graphfont.DrawString(sCodBarra3, fontGothamBook9, brush, xp);
                    }
                 * */


                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {

                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    // BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(190), 264, 9);
                    //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);

                graphfont.RotateTransform(270);
                graphfont.DrawString(sCodBarra1, this.fontArial8, XBrushes.Black, new XPoint(-185, 60));

                graphfont.Dispose();




            }
            catch (Exception ex)
            {
                var st = new StackTrace(ex, true);
                // Get the top stack frame
                var frame = st.GetFrame(0);
                // Get the line number from the stack frame
                var line = frame.GetFileLineNumber();
                // return null;
                Logger.Logger cl = new Logger.Logger();
                cl.log(ca.Scomprobante + " " + ex.Message + " Linea: " + line.ToString());
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message + " Linea: " + line.ToString() , "FgetPageFacturaBsal3Mod092015");

            }

        }

        private void GetPageFacturaBsal1Mod092015_4(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
                PdfPage pdfPage = pdf.AddPage();
                string sNombreEmpresa = ca.NombreEmpresa4;
                string sTipoFact = ca.TipoFact4;
                string sCofFact = ca.CodFact4;
                string sLeyFact = ca.LeyFact4;
                string sNumFact = "Nro." + ca.NumFactCuatro4 + " - " + ca.NumFactOcho4; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido4; // "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno4;
                string sDomicilio2 = ca.DomicilioDos4;
                string sDomicilio3 = ca.DomicilioTres4;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar4.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento4; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente4; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa4; // "30 69642889 8";
                string sNumConv = ca.NumConv4;            // "901 221621 2";
                string sFechaInicio = ca.FechaInicio4;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta_4;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior_4.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado_4.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal4.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura3;  // "04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura4);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip4;

                string sPeriodo = ca.Periodo4; // "May/15";
                string sIVA = ca.CategoriaIva4;
                string sCuit = ca.NumCuit4;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = (!string.IsNullOrEmpty(ca.Concepto_01_4)) ? ca.Concepto_01_4 : " ";
                sConcepto[1] = (!string.IsNullOrEmpty(ca.Concepto_02_4)) ? ca.Concepto_02_4 : " ";
                sConcepto[2] = (!string.IsNullOrEmpty(ca.Concepto_03_4)) ? ca.Concepto_03_4 : " ";
                sConcepto[3] = (!string.IsNullOrEmpty(ca.Concepto_04_4)) ? ca.Concepto_04_4 : " ";
                sConcepto[4] = (!string.IsNullOrEmpty(ca.Concepto_05_4)) ? ca.Concepto_05_4 : " ";
                sConcepto[5] = (!string.IsNullOrEmpty(ca.Concepto_06_4)) ? ca.Concepto_06_4 : " ";
                sConcepto[6] = (!string.IsNullOrEmpty(ca.Concepto_07_4)) ? ca.Concepto_07_4 : " ";
                sConcepto[7] = (!string.IsNullOrEmpty(ca.Concepto_08_4)) ? ca.Concepto_08_4 : " ";
                sConcepto[8] = (!string.IsNullOrEmpty(ca.Concepto_09_4)) ? ca.Concepto_09_4 : " ";
                sConcepto[9] = (!string.IsNullOrEmpty(ca.Concepto_10_4)) ? ca.Concepto_10_4 : " ";
                sConcepto[10] = (!string.IsNullOrEmpty(ca.Concepto_11_4)) ? ca.Concepto_11_4 : " ";
                sConcepto[11] = (!string.IsNullOrEmpty(ca.Concepto_12_4)) ? ca.Concepto_12_4 : " ";
                sConcepto[12] = (!string.IsNullOrEmpty(ca.Concepto_13_4)) ? ca.Concepto_13_4 : " ";
                sConcepto[13] = (!string.IsNullOrEmpty(ca.Concepto_14_4)) ? ca.Concepto_14_4 : " ";
                sConcepto[14] = (!string.IsNullOrEmpty(ca.Concepto_15_4)) ? ca.Concepto_15_4 : " ";
                sConcepto[15] = (!string.IsNullOrEmpty(ca.Concepto_16_4)) ? ca.Concepto_16_4 : " ";

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01_4)) ? "$ " + ca.Importe_01_4 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02_4)) ? "$ " + ca.Importe_02_4 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03_4)) ? "$ " + ca.Importe_03_4 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04_4)) ? "$ " + ca.Importe_04_4 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05_4)) ? "$ " + ca.Importe_05_4 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06_4)) ? "$ " + ca.Importe_06_4 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07_4)) ? "$ " + ca.Importe_07_4 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08_4)) ? "$ " + ca.Importe_08_4 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09_4)) ? "$ " + ca.Importe_09_4 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10_4)) ? "$ " + ca.Importe_10_4 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11_4)) ? "$ " + ca.Importe_11_4 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12_4)) ? "$ " + ca.Importe_12_4 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13_4)) ? "$ " + ca.Importe_13_4 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14_4)) ? "$ " + ca.Importe_14_4 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15_4)) ? "$ " + ca.Importe_15_4 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16_4)) ? "$ " + ca.Importe_16_4 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " "; // ca.AbonoItem_01;
                sAbonoItem[1] = " "; // ca.AbonoItem_02;
                sAbonoItem[2] = " "; // ca.AbonoItem_03;
                sAbonoItem[3] = " "; // ca.AbonoItem_04;
                sAbonoItem[4] = " "; // ca.AbonoItem_05;
                sAbonoItem[5] = " "; // ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado_4.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto_4.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto4.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs_4.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal4.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro4 + ca.NumFactOcho3;

                string sValorCae = "CAE: " + ca.NumCae4;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento4)) ? this.FormateoFechaCae(ca.CaeFechaVencimiento4) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura4;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                string sDni = ca.Documento4;

                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = this.ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura4;

                    }
                    else
                    {
                        sValorAfipInforma1 = lValorPie[0];
                    }
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo_4;
                string sCodBarra2 = ca.CodBarra1_4; 
                string sCodBarra3 = ca.CodBarra2_4; 
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                // Leyendas Cambiables
                string p1 = string.Empty;
                string p2 = string.Empty;
                string p3 = string.Empty;
                string p4 = string.Empty;
                string p5 = string.Empty;
                string p6 = string.Empty;
                string p7 = string.Empty;
                string p8 = string.Empty;
                string p9 = string.Empty;
                string p10 = string.Empty;
                string p11 = string.Empty;

                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                this.privateFonts.AddFontFile(sGothamBold);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(this.privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                this.privateFonts.AddFontFile(sGothamBook);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(this.privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                this.privateFonts.AddFontFile(sGothamMedium);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(this.privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                this.privateFonts1.AddFontFile(sGothamMedium1);  // ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(this.privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                // Lineas
                XPen lineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen lineasFactura = new XPen(XColors.Black, 0.22);

                // Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;
                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23); // centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18); // registrese

                // Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(this.BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  // r1
                graph.DrawRectangle(this.BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(this.BrushVerdeAntina, 152, 10, 49, 3);


                // rectangulos Verde Antina
                graph.DrawRectangle(this.BrushVerdeAntina, 6, 70, 146, 7);  // Rectangulo Concepto Importe
                graph.DrawRectangle(this.BrushVerdeAntina, 121, 166, 31, 5);  // rectangulo subtotal iva etc


                graph.DrawRectangle(this.BrushVerdeAntina, 152, 50, 49, 6);  // de su interes

                // graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

                // graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 188, 49, 20, 3, 3);  //registrese
                //      graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                //      graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(lineasRectangulo, 6, 8, 195, 200, 5, 5);  // r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(lineasRectangulo, 76, 22, 16, 13, 3, 3);  // r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(lineasRectangulo, 6, 211, 195, 80, 4, 4);  // r3 -> Talonario Pago


                graph.DrawLine(lineasFactura, 152, 8, 152, 208);  // l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(lineasFactura, 6, 41, 152, 41);  // l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(lineasFactura, 121, 166, 152, 166);  //l5 Separa conceptos de Subptotal|IVA|
                graph.DrawLine(lineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento


                // graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar    

                if (ca.CodFact4 == "CÓDIGO 08")
                {
                    graph.DrawLine(lineasFactura, 92, 8, 92, 20);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(lineasFactura, 92, 20, 152, 20);  //l8
                }
                else
                {
                    graph.DrawLine(lineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(lineasFactura, 92, 22, 152, 22);  //l8
                }

                // graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(lineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar


                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                // logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12); // g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8); // g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8); // g3 -> Antina

                // En la segunda hoja no debe mostrar de su interes
                /*
                pngLogopath = sImageRoute +  "avisoFA_03.png"; //ca.ImagenesComprobante[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
                */

                if (ca.ImagenesComprobante4.Count > 0)
                {
                    pngLogopath = sImageRoute + ca.ImagenesComprobante2[0];
                    XImage imageAviso = XImage.FromFile(pngLogopath);
                    graph.DrawImage(imageAviso, 153, 57, 47, 70);   // G2
                }



                // Lineas  que separan Subtotal|IVa Insc|Iva No Insc
                // graph.DrawLine(LineasFactura, 33, 174, 33, 191);
                // graph.DrawLine(LineasFactura, 60, 174, 60, 191);
                // graph.DrawLine(LineasFactura, 88, 174, 88, 191);   
                graph.DrawLine(lineasFactura, 121, 70, 121, 181);


                // cupones de pago
                graph.DrawRoundedRectangle(lineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(lineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(lineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(lineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(lineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(lineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(lineasRectangulo, 162, 265, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(lineasRectangulo, 103, 265, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(lineasRectangulo, 44, 265, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(lineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(lineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(lineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(lineasRectangulo, 54, 271, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
                */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, this.BrushBoleta2015_1, xp);

                // Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, this.BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, this.BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, this.BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, this.BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, this.BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, this.BrushBoleta2015_1, xp);

                // total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, this.BrushBoleta2015_1, xp);


                // fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, this.BrushBoleta2015_1, xp);


                // Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, this.BrushBoleta2015_1, xp);



                // valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, this.BrushBoleta2015_1, rect, formatRight);


                // valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, this.BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                // valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, this.BrushBoleta2015_1, rectNumeroCliente, formatRight);

                // Leyfact
                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);


                    if (ca.CodFact4 == "CÓDIGO 08")
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(23);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, this.BrushBoleta2015_1, xp);
                    }
                    else
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(26);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, this.BrushBoleta2015_1, xp);
                    }
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, this.BrushBoleta2015_1, xp);

                }
                // sNumFact = "Nro.";
                if (ca.CodFact4 == "CÓDIGO 08")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, this.BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, this.BrushBlack, xp);
                }

                // Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, this.BrushBlack, xp);


                // Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, this.BrushBoleta2015_1, xp);


                // Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, this.BrushBoleta2015_1, xp);


                // Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, this.BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, this.BrushBoleta2015_1, xp);



                // Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, this.BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                // graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, this.BrushBlack, rectEstadoCuenta, formatFarRight);


                // Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, this.BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, this.BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                // Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, this.BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, this.BrushBoleta2015_1, rectMontoActual, formatRight);


                // total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, this.BrushBoleta2015_1, xp);
                // valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, this.BrushBoleta2015_1, recttot, formatRight);


                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, this.BrushBlack, xp);


                // Nombre y Apellido
                int rangodesde;
                List<string> lNombreApellido = this.ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188); 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, this.BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);

                }

                // Domicilio 1
                List<string> lDomicilio1 = this.ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188); // (sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, this.BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);

                }

                // Domicilio 2
                rangodesde = (sDomicilio2.Length < 72) ? 30 : 39;

                List<string> lDomicilio2 = this.ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                    {
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, this.BrushBoleta2015_1, xp);
                    }

                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);
                }


                // Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                rangodesde = (sDomicilio3.Length < 72) ? 30 : 39;
                List<string> lDomicilio3 = this.ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, this.BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, this.BrushBoleta2015_1, xp);
                }



                // Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(49);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(47), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, this.BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                // graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(47), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, this.BrushBoleta2015_1, recPeriodo, formatRight);



                // IVA
                xp.Y = XUnit.FromMillimeter(53);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(51), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, this.BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(51), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, this.BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, this.BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, this.BrushBoleta2015_1, recCUIT, formatRight);


                // DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(59), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, this.BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(61);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(59), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, this.BrushBoleta2015_1, recDNI, formatRight);


                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto1[0].Trim()))
                    graphfont.DrawString(sConcepto1[0], fontGothamBook8, this.BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, this.BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, this.BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto2[0].Trim()))
                    graphfont.DrawString(sConcepto2[0], fontGothamBook8, this.BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, this.BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, this.BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = this.ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto3[0].Trim()))
                    graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, this.BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, this.BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = this.ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto4[0].Trim()))
                    graphfont.DrawString(sConcepto4[0], fontGothamBook8, this.BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, this.BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                if (!string.IsNullOrEmpty(sConcepto5[0].Trim()))
                    graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                if (!string.IsNullOrEmpty(sConcepto[5].Trim()))
                    graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                if (!string.IsNullOrEmpty(sConcepto[6].Trim()))
                    graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                if (!string.IsNullOrEmpty(sConcepto[7].Trim()))
                    graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                if (!string.IsNullOrEmpty(sConcepto[8].Trim()))
                    graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                if (!string.IsNullOrEmpty(sConcepto[9].Trim()))
                    graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                if (!string.IsNullOrEmpty(sConcepto[10].Trim()))
                    graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                if (!string.IsNullOrEmpty(sConcepto[11].Trim()))
                    graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                if (!string.IsNullOrEmpty(sConcepto[12].Trim()))
                    graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                if (!string.IsNullOrEmpty(sConcepto[13].Trim()))
                    graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                // 15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                if (!string.IsNullOrEmpty(sConcepto[14].Trim()))
                    graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                // 16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                if (!string.IsNullOrEmpty(sConcepto[15].Trim()))
                    graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);



                /*
                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(162);
                xp.Y = XUnit.FromMillimeter(132);
                graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(137);
                graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(147);
                graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushBlack, xp);
                */


                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, this.BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, this.BrushBlack, xp);


                // if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                // {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(167);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, this.BrushBlack, xp);
                /*
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(163);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                }
                */
                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, this.BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, this.BrushBlack, xp);


                /*
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(194);
                graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(155);
                xp.Y = XUnit.FromMillimeter(197);
                graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(204);
                graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushBlack, xp);
                */


                // Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, this.BrushBlack, rectConcepto, formatCenter);
                // Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, this.BrushBlack, rectImporte, formatCenter);





                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontGothamMedium8, this.BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, this.BrushBoleta2015_1, rectTotal, formatRight);





                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

                //P1  
                string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP1_0;
                XRect rectP1_1;
                if (SplitP1.Length > 1)
                {
                    rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(221), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    rectP1_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(224), 67, 7);
                    //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                    graphfont.DrawString(SplitP1[0], this.fontArial7B, this.BrushBoleta2015_1, rectP1_0, formatCenter);
                    graphfont.DrawString(SplitP1[1], this.fontArial7B, this.BrushBoleta2015_1, rectP1_1, formatCenter);
                }
                else
                {

                    rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    graphfont.DrawString(SplitP1[0], this.fontArial7B, this.BrushBoleta2015_1, rectP1_0, formatCenter);
                }


                //P2
                string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP2_0;
                XRect rectP2_1;
                if (SplitP2.Length > 1)
                {
                    rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(221), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    rectP2_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(224), 67, 7);
                    //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                    graphfont.DrawString(SplitP2[0], this.fontArial7B, this.BrushBoleta2015_1, rectP2_0, formatCenter);
                    graphfont.DrawString(SplitP2[1], this.fontArial7B, this.BrushBoleta2015_1, rectP2_1, formatCenter);
                }
                else
                {

                    rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(223), 67, 7);
                    //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    graphfont.DrawString(SplitP2[0], fontArial7B, BrushBoleta2015_1, rectP2_0, formatCenter);
                }



                //P3
                string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP3_0;
                XRect rectP3_1;
                if (SplitP3.Length > 1)
                {
                    rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(221), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    rectP3_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                    graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                    graphfont.DrawString(SplitP3[1], fontArial7B, BrushBoleta2015_1, rectP3_1, formatCenter);
                }
                else
                {

                    rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                }





                //P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(230), 67, 7);  //-6
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(233), 67, 7);  //-3
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatCenter);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(232), 67, 7);  //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                }



                //P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatCenter);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatCenter);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                }




                //P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(269), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(272), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatCenter);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(268), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(269), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(272), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatCenter);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(268), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, this.BrushBoleta2015_1, rectP8_0, formatCenter);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(269), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(272), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, this.BrushBoleta2015_1, rectP9_0, formatCenter);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, this.BrushBoleta2015_1, rectP9_1, formatCenter);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(268), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, this.BrushBoleta2015_1, rectP9_0, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold9, this.BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold9, this.BrushBoleta2015_1, xp);


                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, this.BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, this.BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);

                /*
                if ((ca.DebitoAutomatico == false))
                {


                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(235);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(246);
                        graphfont.DrawString(sCodBarra2, fontGothamBook9, brush, xp);
                    }

              

                }

      if (!string.IsNullOrEmpty(sCodBarra3))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(272);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode3.Text = sCodBarra3;//value of code to draw on page
                        BarCode3.StartChar = Convert.ToChar("*");
                        BarCode3.EndChar = Convert.ToChar("*");
                        BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode3.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode3, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(283);
                        graphfont.DrawString(sCodBarra3, fontGothamBook9, brush, xp);
                    }
                 * */


                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {

                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(190), 264, 9);
                    //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, this.BrushBlack, rectBarraAfip, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);

                graphfont.RotateTransform(270);
                graphfont.DrawString(sCodBarra1, this.fontArial8, XBrushes.Black, new XPoint(-185, 60));

                graphfont.Dispose();




            }
            catch (Exception ex)
            {
                var st = new StackTrace(ex, true);
                // Get the top stack frame
                var frame = st.GetFrame(0);
                // Get the line number from the stack frame
                var line = frame.GetFileLineNumber();
                // return null;
                Logger.Logger cl = new Logger.Logger();
                cl.log(ca.Scomprobante + " " + ex.Message + " Linea: " + line.ToString());
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message + " Linea: " + line.ToString(), "FgetPageFacturaBsal4Mod092015");

            }

        }



        //
        private void FgetPageFacturaAsal1Mod092017_2(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {



                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa2;

                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." + ca.NumFactCuatro2 + " - " + ca.NumFactOcho2; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido2;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno2;
                string sDomicilio2 = ca.DomicilioDos2;
                string sDomicilio3 = ca.DomicilioTres2;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar2.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento2; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente2; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa2; // "30 69642889 8";
                string sNumConv = ca.NumConv2;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio2;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta_2;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior_2.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado_2.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal2.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura2;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura2);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                DateTime dFechaCambioAgregadoImagen = new DateTime(2016, 12, 01);

                string sCodBarraAfip = ca.BarraAfip2;

                string sPeriodo = ca.Periodo2;// "May/15";
                string sIVA = ca.CategoriaIva2;
                string sCuit = ca.NumCuit2;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01_2;
                sConcepto[1] = ca.Concepto_02_2;
                sConcepto[2] = ca.Concepto_03_2;
                sConcepto[3] = ca.Concepto_04_2;
                sConcepto[4] = ca.Concepto_05_2;
                sConcepto[5] = ca.Concepto_06_2;
                sConcepto[6] = ca.Concepto_07_2;
                sConcepto[7] = ca.Concepto_08_2;
                sConcepto[8] = ca.Concepto_09_2;
                sConcepto[9] = ca.Concepto_10_2;
                sConcepto[10] = ca.Concepto_11_2;
                sConcepto[11] = ca.Concepto_12_2;
                sConcepto[12] = ca.Concepto_13_2;
                sConcepto[13] = ca.Concepto_14_2;
                sConcepto[14] = ca.Concepto_15_2;
                sConcepto[15] = ca.Concepto_16_2;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01_2)) ? "$ " + ca.Importe_01_2 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02_2)) ? "$ " + ca.Importe_02_2 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03_2)) ? "$ " + ca.Importe_03_2 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04_2)) ? "$ " + ca.Importe_04_2 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05_2)) ? "$ " + ca.Importe_05_2 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06_2)) ? "$ " + ca.Importe_06_2 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07_2)) ? "$ " + ca.Importe_07_2 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08_2)) ? "$ " + ca.Importe_08_2 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09_2)) ? "$ " + ca.Importe_09_2 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10_2)) ? "$ " + ca.Importe_10_2 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11_2)) ? "$ " + ca.Importe_11_2 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12_2)) ? "$ " + ca.Importe_12_2 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13_2)) ? "$ " + ca.Importe_13_2 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14_2)) ? "$ " + ca.Importe_14_2 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15_2)) ? "$ " + ca.Importe_15_2 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16_2)) ? "$ " + ca.Importe_16_2 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado_2.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto_2.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs_2.Replace(".", ",");
                string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip2.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro2 + ca.NumFactOcho2;

                string sValorCae = "CAE: " + ca.NumCae2;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento2)) ? FormateoFechaCae(ca.CaeFechaVencimiento2) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura2;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                string sDni = ca.Documento2;

                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura;

                    }
                    else
                        sValorAfipInforma1 = lValorPie[0];
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; //
                string sCodBarra3 = ca.CodBarra2; //
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;





                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24 = new XFont(fontGothamMedium.FontFamily, 24, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));


                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));

                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;



                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese


                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe
                graph.DrawRectangle(BrushVerdeAntina, 6, 166, 146, 8);  //rectangulo subtotal iva etc
                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

                //     graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

                //       graph.DrawRoundedRectangle(BrushVerdeAntina, 152,188, 49, 20, 3, 3);  //registrese
                //       graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                //       graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3);  //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago



                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 6, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento

                graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar



                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8);//g3 -> Antina

                pngLogopath = sImageRoute + ca.ImagenesComprobante2[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2

                //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
                graph.DrawLine(LineasFactura, 29, 166, 29, 181);  // Separa Subtotal de Iva Insc
                graph.DrawLine(LineasFactura, 52, 166, 52, 181);  // Separa Iva Insc de Iva no Insc            
                graph.DrawLine(LineasFactura, 75, 166, 75, 181);  // Separa Iva no Insc de Perc IIBB BsAs
                graph.DrawLine(LineasFactura, 98, 166, 98, 181);  // Separa  Perc IIBB BsAs de Perc IIBB CABA
                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 266, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 266, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 266, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 271, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1



                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);

                //Leyfact
                //Leyfact

                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);

                    if (ca.CodFact == "CÓDIGO 08")
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    else
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);

                }
                //Leyfact

                xp.Y = XUnit.FromMillimeter(26);
                if (ca.CodFact == "CÓDIGO 08")
                    xp.X = XUnit.FromMillimeter(119);
                else
                    xp.X = XUnit.FromMillimeter(115);
                // sNumFact = "Nro.";

                graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);

                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);



                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);



                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);


                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);

                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);



                //total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);



                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


                //Nombre y Apellido
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 1        
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188);
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }
                //Domicilio 2
                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }



                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(45);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(45), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(45), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(52);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(50), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(50), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(61), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(62);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(61), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);




                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);


                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


                //  if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                //  {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(167);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, BrushBlack, xp);
                /*   }
                   else
                   {
                       xp.X = XUnit.FromMillimeter(171);
                       xp.Y = XUnit.FromMillimeter(174);
                       graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                       xp.X = XUnit.FromMillimeter(163);
                       xp.Y = XUnit.FromMillimeter(177);
                       graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                  / }*/

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);

                /*
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(194);
            //graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(155);
            xp.Y = XUnit.FromMillimeter(197);
            //graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(154);
            xp.Y = XUnit.FromMillimeter(204);
           // graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
            graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushWhite, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                // graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushWhite, rectImporte, formatCenter);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);


/*
                //Leyenda Subototal       
                XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(167), 72, 9);
                //     graphfont.DrawRectangle(XPens.Red, rectLeyendaSubtotal);
                // graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushBlack, rectLeyendaSubtotal, formatCenter);

                XRect rectSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(175), 72, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
                //     graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBoleta2015_1, rectSubtotal, formatRight);


                //Leyenda Iva Insc      
                XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(167), 72, 9);
                //     graphfont.DrawRectangle(XPens.Red, rectLeyendaIvaInsc);
                //graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushWhite, rectLeyendaIvaInsc, formatCenter);
                graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushBlack, rectLeyendaIvaInsc, formatCenter);
                XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(175), 72, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaInsc);
                //    graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBlack, rectIvaInsc, formatCenter);
                graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaInsc, formatRight);


                //Leyenda Iva No Insc      
                XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(60), XUnit.FromMillimeter(167), 69, 9);
                // graphfont.DrawRectangle(XPens.Black, rectLeyendaIvaNoInsc);
                //graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushWhite, rectLeyendaIvaNoInsc, formatCenter);
                graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);
                XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(62), XUnit.FromMillimeter(175), 67, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
                //   graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBlack, rectIvaNoInsc, formatCenter);
                graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaNoInsc, formatRight);



                //Leyenda Perc IIBB BsAs     
                XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(167), 75, 9);
                // graphfont.DrawRectangle(XPens.Chocolate, rectLeyendaPercIIBB);
                // graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB, formatCenter);
                XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(91), XUnit.FromMillimeter(175), 79, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
                //     graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
                graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBoleta2015_1, rectPercIIBB, formatRight);

                */


                //Leyenda Subototal       
                XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(167), 65, 9);
                //         graphfont.DrawRectangle(XPens.Red, rectLeyendaSubtotal);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushBlack, rectLeyendaSubtotal, formatCenter);

                XRect rectSubtotal = new XRect(XUnit.FromMillimeter(1), XUnit.FromMillimeter(175), 72, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBoleta2015_1, rectSubtotal, formatRight);


                //Leyenda Iva Insc      
                XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(29), XUnit.FromMillimeter(167), 65, 9);
                //   graphfont.DrawRectangle(XPens.Red, rectLeyendaIvaInsc);
                //        graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushWhite, rectLeyendaIvaInsc, formatCenter);
                graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushBlack, rectLeyendaIvaInsc, formatCenter);
                XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(29), XUnit.FromMillimeter(175), 60, 9);
                //  graphfont.DrawRectangle(XPens.Red, rectIvaInsc);
                //            graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBlack, rectIvaInsc, formatCenter);
                graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaInsc, formatRight);


                //Leyenda Iva No Insc      
                XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(52), XUnit.FromMillimeter(167), 65, 9);
                //     graphfont.DrawRectangle(XPens.Black, rectLeyendaIvaNoInsc);
                //graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushWhite, rectLeyendaIvaNoInsc, formatCenter);
                graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);
                XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(52), XUnit.FromMillimeter(175), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
                //          graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBlack, rectIvaNoInsc, formatCenter);
                graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaNoInsc, formatRight);



                //Leyenda Perc IIBB BsAs     
                XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(75), XUnit.FromMillimeter(167), 65, 9);
                //         graphfont.DrawRectangle(XPens.Chocolate, rectLeyendaPercIIBB);

                XRect rectLeyendaPercIIBB2 = new XRect(XUnit.FromMillimeter(75), XUnit.FromMillimeter(170), 65, 9);
                //       graphfont.DrawRectangle(XPens.DarkViolet, rectLeyendaPercIIBB2);


                //   graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("PERC IIBB", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("BSAS", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB2, formatCenter);
                XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(75), XUnit.FromMillimeter(175), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
                //    graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
                graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBoleta2015_1, rectPercIIBB, formatRight);



                //Leyenda Perc IIBB Caba    
                XRect rectLeyendaPercIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(167), 65, 9);
                //    graphfont.DrawRectangle(XPens.AliceBlue, rectLeyendaPercIIBBCaba);
                XRect rectLeyendaPercIIBBCaba2 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(170), 65, 9);
                //  graphfont.DrawRectangle(XPens.DarkViolet, rectLeyendaPercIIBBCaba2);

                //  graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("PERC IIBB", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBBCaba, formatCenter);
                graphfont.DrawString("CABA", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBBCaba2, formatCenter);
                XRect rectPercIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(175), 60, 9);
                ///     graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
                //     graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
                graphfont.DrawString(sValorIIBBCaba, fontGothamBook8, BrushBoleta2015_1, rectPercIIBBCaba, formatRight);

                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                //graphfont.DrawString("TOTAL", fontGothamMedium8, BrushWhite, rectLeyendaTotal, formatCenter);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
                //    graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBlack, rectTotal, formatCenter);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);



                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);


                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

                /*
                          //P1  
                      string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP1_0;
                      XRect rectP1_1;
                      if (SplitP1.Length > 1)
                      {
                          rectP1_0 = new XRect(XUnit.FromMillimeter(12), XUnit.FromMillimeter(221), 67, 7);
                         // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                          rectP1_1 = new XRect(XUnit.FromMillimeter(12), XUnit.FromMillimeter(224), 67, 7);
                        //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                          graphfont.DrawString(SplitP1[0], fontArial7B, BrushBlack, rectP1_0, formatCenter);
                          graphfont.DrawString(SplitP1[1], fontArial7B, BrushBlack, rectP1_1, formatCenter);
                      }
                      else
                      {

                          rectP1_0 = new XRect(XUnit.FromMillimeter(12), XUnit.FromMillimeter(223), 67, 7);
                         // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                          graphfont.DrawString(SplitP1[0], fontArial7B, BrushBlack, rectP1_0, formatCenter);
                      }


                      //P2
                      string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP2_0;
                      XRect rectP2_1;
                      if (SplitP2.Length > 1)
                      {
                          rectP2_0 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(221), 67, 7);
                       //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                          rectP2_1 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(224), 67, 7);
                      //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                          graphfont.DrawString(SplitP2[0], fontArial7B, BrushBlack, rectP2_0, formatCenter);
                          graphfont.DrawString(SplitP2[1], fontArial7B, BrushBlack, rectP2_1, formatCenter);
                      }
                      else
                      {

                          rectP2_0 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(223), 67, 7);
                     //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                          graphfont.DrawString(SplitP2[0], fontArial7B, BrushBlack, rectP2_0, formatCenter);
                      }



                      //P3
                      string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP3_0;
                      XRect rectP3_1;
                      if (SplitP3.Length > 1)
                      {
                          rectP3_0 = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(221), 67, 7);
                       //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                          rectP3_1 = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(224), 67, 7);
                      //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                          graphfont.DrawString(SplitP3[0], fontArial7B, BrushBlack, rectP3_0, formatCenter);
                          graphfont.DrawString(SplitP3[1], fontArial7B, BrushBlack, rectP3_1, formatCenter);
                      }
                      else
                      {

                          rectP3_0 = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(223), 67, 7);
                      //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                          graphfont.DrawString(SplitP3[0], fontArial7B, BrushBlack, rectP3_0, formatCenter);
                      }

                          */

                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(196), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                if (!string.IsNullOrEmpty(sValorAfipInforma1.Trim()))
                    graphfont.DrawString(sValorAfipInforma1, fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(199), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                if (!string.IsNullOrEmpty(sValorAfipInforma2.Trim()))
                    graphfont.DrawString(sValorAfipInforma2.TrimStart(), fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(182);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(189), 264, 9);
                    //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);

                }


                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);


                //   graphfont.RotateTransform(90);
                //  graphfont.DrawString(sCodBarra1, fontGothamBook6, BrushBoleta2015_1, new XPoint(140, -55));

                graphfont.RotateTransform(270);
                graphfont.DrawString(sCodBarra1, fontArial8, XBrushes.Black, new XPoint((-185), 60));

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal1Mod092017_2");

            }

        }


        private void FgetPageFacturaAsal1Mod092015_2(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {

           

                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa2;

                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." + ca.NumFactCuatro2 + " - " + ca.NumFactOcho2; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido2;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno2;
                string sDomicilio2 = ca.DomicilioDos2;
                string sDomicilio3 = ca.DomicilioTres2;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar2.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento2; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente2; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa2; // "30 69642889 8";
                string sNumConv = ca.NumConv2;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio2;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta_2;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior_2.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado_2.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal2.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura2;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura2);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip2;

                string sPeriodo = ca.Periodo2;// "May/15";
                string sIVA = ca.CategoriaIva2;
                string sCuit = ca.NumCuit2;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01_2;
                sConcepto[1] = ca.Concepto_02_2;
                sConcepto[2] = ca.Concepto_03_2;
                sConcepto[3] = ca.Concepto_04_2;
                sConcepto[4] = ca.Concepto_05_2;
                sConcepto[5] = ca.Concepto_06_2;
                sConcepto[6] = ca.Concepto_07_2;
                sConcepto[7] = ca.Concepto_08_2;
                sConcepto[8] = ca.Concepto_09_2;
                sConcepto[9] = ca.Concepto_10_2;
                sConcepto[10] = ca.Concepto_11_2;
                sConcepto[11] = ca.Concepto_12_2;
                sConcepto[12] = ca.Concepto_13_2;
                sConcepto[13] = ca.Concepto_14_2;
                sConcepto[14] = ca.Concepto_15_2;
                sConcepto[15] = ca.Concepto_16_2;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01_2)) ? "$ " + ca.Importe_01_2 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02_2)) ? "$ " + ca.Importe_02_2 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03_2)) ? "$ " + ca.Importe_03_2 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04_2)) ? "$ " + ca.Importe_04_2 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05_2)) ? "$ " + ca.Importe_05_2 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06_2)) ? "$ " + ca.Importe_06_2 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07_2)) ? "$ " + ca.Importe_07_2 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08_2)) ? "$ " + ca.Importe_08_2 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09_2)) ? "$ " + ca.Importe_09_2 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10_2)) ? "$ " + ca.Importe_10_2 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11_2)) ? "$ " + ca.Importe_11_2 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12_2)) ? "$ " + ca.Importe_12_2 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13_2)) ? "$ " + ca.Importe_13_2 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14_2)) ? "$ " + ca.Importe_14_2 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15_2)) ? "$ " + ca.Importe_15_2 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16_2)) ? "$ " + ca.Importe_16_2 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado_2.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto_2.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs_2.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro2 + ca.NumFactOcho2;

                string sValorCae = "CAE: " + ca.NumCae2;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento2)) ? FormateoFechaCae(ca.CaeFechaVencimiento2) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura2;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                string sDni = ca.Documento2;

                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura;

                    }
                    else
                        sValorAfipInforma1 = lValorPie[0];
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; //
                string sCodBarra3 = ca.CodBarra2; //
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;





                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24 = new XFont(fontGothamMedium.FontFamily, 24, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));


                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));

                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;



                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese


                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe

                graph.DrawRectangle(BrushVerdeAntina, 6, 166, 146, 5);  //rectangulo subtotal iva etc


                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

                //     graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

                //       graph.DrawRoundedRectangle(BrushVerdeAntina, 152,188, 49, 20, 3, 3);  //registrese
                //       graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                //       graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3);  //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago



                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 6, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento

                graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar



                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8);//g3 -> Antina

                pngLogopath = sImageRoute + ca.ImagenesComprobante2[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2

                //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
                graph.DrawLine(LineasFactura, 33, 166, 33, 181);  //l11
                graph.DrawLine(LineasFactura, 60, 166, 60, 181);  //l11            
                graph.DrawLine(LineasFactura, 88, 166, 88, 181);  //l11
                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 266, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 266, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 266, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 271, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1
           


                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);

                //Leyfact
                //Leyfact

                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);

                    if (ca.CodFact == "CÓDIGO 08")
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    else
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);

                }
                //Leyfact
               
                xp.Y = XUnit.FromMillimeter(26);
                if (ca.CodFact == "CÓDIGO 08")
                    xp.X = XUnit.FromMillimeter(119);
                else
                    xp.X = XUnit.FromMillimeter(115);
                // sNumFact = "Nro.";

                graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);

                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);



                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);



                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);


                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);

                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);



                //total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);



                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


                //Nombre y Apellido
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 1        
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188);
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }
                //Domicilio 2
                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }



                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(45);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(45), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(45), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(52);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(50), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(50), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(61), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(62);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(61), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);




                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);


                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


                //  if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                //  {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(167);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, BrushBlack, xp);
                /*   }
                   else
                   {
                       xp.X = XUnit.FromMillimeter(171);
                       xp.Y = XUnit.FromMillimeter(174);
                       graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                       xp.X = XUnit.FromMillimeter(163);
                       xp.Y = XUnit.FromMillimeter(177);
                       graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                  / }*/

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);

                /*
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(194);
            //graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(155);
            xp.Y = XUnit.FromMillimeter(197);
            //graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(154);
            xp.Y = XUnit.FromMillimeter(204);
           // graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
            graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushWhite, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                // graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushWhite, rectImporte, formatCenter);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);



                //Leyenda Subototal       
                XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(167), 72, 9);
                //     graphfont.DrawRectangle(XPens.Red, rectLeyendaSubtotal);
                // graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushBlack, rectLeyendaSubtotal, formatCenter);

                XRect rectSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(175), 72, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
                //     graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBoleta2015_1, rectSubtotal, formatRight);


                //Leyenda Iva Insc      
                XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(167), 72, 9);
                //     graphfont.DrawRectangle(XPens.Red, rectLeyendaIvaInsc);
                //graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushWhite, rectLeyendaIvaInsc, formatCenter);
                graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushBlack, rectLeyendaIvaInsc, formatCenter);
                XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(175), 72, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaInsc);
                //    graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBlack, rectIvaInsc, formatCenter);
                graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaInsc, formatRight);


                //Leyenda Iva No Insc      
                XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(60), XUnit.FromMillimeter(167), 69, 9);
                // graphfont.DrawRectangle(XPens.Black, rectLeyendaIvaNoInsc);
                //graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushWhite, rectLeyendaIvaNoInsc, formatCenter);
                graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);
                XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(62), XUnit.FromMillimeter(175), 67, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
                //   graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBlack, rectIvaNoInsc, formatCenter);
                graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaNoInsc, formatRight);



                //Leyenda Perc IIBB BsAs     
                XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(167), 75, 9);
                // graphfont.DrawRectangle(XPens.Chocolate, rectLeyendaPercIIBB);
                // graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB, formatCenter);
                XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(91), XUnit.FromMillimeter(175), 79, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
                //     graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
                graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBoleta2015_1, rectPercIIBB, formatRight);



                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                //graphfont.DrawString("TOTAL", fontGothamMedium8, BrushWhite, rectLeyendaTotal, formatCenter);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
                //    graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBlack, rectTotal, formatCenter);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);



                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);


                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

                /*
                          //P1  
                      string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP1_0;
                      XRect rectP1_1;
                      if (SplitP1.Length > 1)
                      {
                          rectP1_0 = new XRect(XUnit.FromMillimeter(12), XUnit.FromMillimeter(221), 67, 7);
                         // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                          rectP1_1 = new XRect(XUnit.FromMillimeter(12), XUnit.FromMillimeter(224), 67, 7);
                        //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                          graphfont.DrawString(SplitP1[0], fontArial7B, BrushBlack, rectP1_0, formatCenter);
                          graphfont.DrawString(SplitP1[1], fontArial7B, BrushBlack, rectP1_1, formatCenter);
                      }
                      else
                      {

                          rectP1_0 = new XRect(XUnit.FromMillimeter(12), XUnit.FromMillimeter(223), 67, 7);
                         // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                          graphfont.DrawString(SplitP1[0], fontArial7B, BrushBlack, rectP1_0, formatCenter);
                      }


                      //P2
                      string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP2_0;
                      XRect rectP2_1;
                      if (SplitP2.Length > 1)
                      {
                          rectP2_0 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(221), 67, 7);
                       //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                          rectP2_1 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(224), 67, 7);
                      //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                          graphfont.DrawString(SplitP2[0], fontArial7B, BrushBlack, rectP2_0, formatCenter);
                          graphfont.DrawString(SplitP2[1], fontArial7B, BrushBlack, rectP2_1, formatCenter);
                      }
                      else
                      {

                          rectP2_0 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(223), 67, 7);
                     //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                          graphfont.DrawString(SplitP2[0], fontArial7B, BrushBlack, rectP2_0, formatCenter);
                      }



                      //P3
                      string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                      XRect rectP3_0;
                      XRect rectP3_1;
                      if (SplitP3.Length > 1)
                      {
                          rectP3_0 = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(221), 67, 7);
                       //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                          rectP3_1 = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(224), 67, 7);
                      //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                          graphfont.DrawString(SplitP3[0], fontArial7B, BrushBlack, rectP3_0, formatCenter);
                          graphfont.DrawString(SplitP3[1], fontArial7B, BrushBlack, rectP3_1, formatCenter);
                      }
                      else
                      {

                          rectP3_0 = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(223), 67, 7);
                      //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                          graphfont.DrawString(SplitP3[0], fontArial7B, BrushBlack, rectP3_0, formatCenter);
                      }

                          */

                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(196), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                if (!string.IsNullOrEmpty(sValorAfipInforma1.Trim()))
                    graphfont.DrawString(sValorAfipInforma1, fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(199), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                if (!string.IsNullOrEmpty(sValorAfipInforma2.Trim()))
                    graphfont.DrawString(sValorAfipInforma2.TrimStart(), fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(182);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(189), 264, 9);
                    //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);

                }


                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);


                //   graphfont.RotateTransform(90);
                //  graphfont.DrawString(sCodBarra1, fontGothamBook6, BrushBoleta2015_1, new XPoint(140, -55));

                graphfont.RotateTransform(270);
                graphfont.DrawString(sCodBarra1, fontArial8, XBrushes.Black, new XPoint((-185), 60));

            }
            catch (Exception ex)
            {
                //return null;
                Logger.Logger cl = new Logger.Logger();
                cl.log(ca.Scomprobante + ex.Message + " FgetPageFacturaAsal1Mod092015_2");
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal1Mod092015");

            }
        }


        private void FgetPageFacturaAsal1Mod092017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {

                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." + ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                DateTime dFechaCambioAgregadoImagen = new DateTime(2016, 12, 01);
                string sCodBarraAfip = ca.BarraAfip;

                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = ca.NumCuit;
                string sDni = ca.Documento;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = "CAE: " + ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura.PadRight(279, ' ');
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";
                string sValorAfipInforma3 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 110)
                    {
                        sValorAfipInforma1 = valorPie.Substring(0, 110);
                        sValorAfipInforma2 = valorPie.Substring(110, 110);
                        sValorAfipInforma3 = valorPie.Substring(220, 59);

                        //sValorAfipInforma1 = ca.PieFactura.Substring(0, 110);
                        //sValorAfipInforma2 = ca.PieFactura.Substring(110, (ca.PieFactura.Length - 111));

                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }


                string c1 = ca.c1;
                string c2 = ca.c2;
                string c3 = (!string.IsNullOrEmpty(ca.c3)) ? "$ " + ca.c3 : " ";
                string c4 = ca.c4;
                string c5 = ca.c5;
                ca.c6 = ca.c6.Trim();
                string c6 = (!string.IsNullOrEmpty(ca.c6)) ? "$ " + ca.c6 : " ";
                string c7 = ca.c7;
                string c8 = ca.c8;
                ca.c9 = ca.c9.Trim();
                string c9 = (!string.IsNullOrEmpty(ca.c9)) ? "$ " + ca.c9 : " ";
                string c10 = (!string.IsNullOrEmpty(ca.EstadoMontoFacturadocupon)) ? "$ " + ca.EstadoMontoFacturadocupon : " ";
                string c11 = (!string.IsNullOrEmpty(ca.ValorTotalCupon)) ? "$ " + ca.ValorTotalCupon : " ";



                //if (!string.IsNullOrEmpty(valorPie))
                //{
                //    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                //    if (lValorPie.Count == 1)
                //    {
                //        sValorAfipInforma1 = ca.PieFactura;

                //    }
                //    else
                //        sValorAfipInforma1 = lValorPie[0];
                //    sValorAfipInforma2 = lValorPie[1];
                //}

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1;
                string sCodBarra3 = ca.CodBarra2;
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                //Leyendas Cambiables
                string p1 = ca.EtiqCompAp1;
                string p2 = ca.EtiqFvAp1;
                string p3 = ca.EtiqMfAp1;
                string p4 = ca.EtiqCompBp1;
                string p5 = ca.EtiqFvBp1;
                string p6 = ca.EtiqMfBp1;
                string p7 = ca.EtiqCompTp1;
                string p8 = ca.EtiqFvTp1;
                string p9 = ca.EtiqMfTp1;
                string p10 = "MONTO FACTURADO";
                string p11 = "SALDO TOTAL";


                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24 = new XFont(fontGothamMedium.FontFamily, 24, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium25 = new XFont(fontGothamMedium.FontFamily, 25, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));


                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));

                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;


                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;

                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese


                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe
                graph.DrawRectangle(BrushVerdeAntina, 6, 166, 146, 8);  //rectangulo subtotal iva etc
                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

                //     graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

                //       graph.DrawRoundedRectangle(BrushVerdeAntina, 152,188, 49, 20, 3, 3);  //registrese
                //       graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                //       graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3);  //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago

                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 6, 166, 152, 166);  //l5 Separa conceptos de Subptotal IVA
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento
                //graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                // graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
                if (ca.CodFact == "CÓDIGO 03")
                {
                    graph.DrawLine(LineasFactura, 92, 8, 92, 20);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(LineasFactura, 92, 20, 152, 20);  //l8
                }
                else
                {
                    graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                    graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
                }


                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar



                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 256, 42, 8);//g3 -> Antina

                if ((ca.Empresa != "Eurosat S.A.") | (ca.AdheridaFacturacionElectronicaUnicaVez == "1"))
                {
                    //    pngLogopath = sImageRoute + getImageAviso2015(sFechaFactura); //"avisoFA_03.png"; // ca.ImagenesComprobante[0];
                    pngLogopath = sImageRoute + ca.ImagenesComprobante[0];
                    XImage imageAviso = XImage.FromFile(pngLogopath);
                    graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
                }
                if (dFechaFactura > dFechaCambioAgregadoImagen)
                {

                    pngLogopath = sImageRoute + ca.ImagenesComprobante[0];
                    XImage imageAviso = XImage.FromFile(pngLogopath);
                    graph.DrawImage(imageAviso, 153, 57, 47, 70);   //G2
                }

                //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
                graph.DrawLine(LineasFactura, 29, 166, 29, 181);  // Separa Subtotal de Iva Insc
                graph.DrawLine(LineasFactura, 52, 166, 52, 181);  // Separa Iva Insc de Iva no Insc            
                graph.DrawLine(LineasFactura,75, 166,75, 181);  // Separa Iva no Insc de Perc IIBB BsAs
                graph.DrawLine(LineasFactura, 98, 166, 98, 181);  // Separa  Perc IIBB BsAs de Perc IIBB CABA

                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  // Separa Perc IIBB CABA de Total


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 266, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 266, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 266, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 273, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();


                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold9, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);

                //Leyfact
                if (sTipoFact != "X")
                {
                    //xp.X = XUnit.FromMillimeter(95);
                    //xp.Y = XUnit.FromMillimeter(26);

                    if (ca.CodFact == "CÓDIGO 03")
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(23);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    }
                    else
                    {
                        xp.X = XUnit.FromMillimeter(95);
                        xp.Y = XUnit.FromMillimeter(26);
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    }
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);

                }

                // sNumFact = "Nro.";
                if (ca.CodFact == "CÓDIGO 03")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
                }

                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);



                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);



                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);


                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);


                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);


                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);


                //total a pagar
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);



                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


                //Nombre y Apellido
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 1        
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188);
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }
                //Domicilio 2
                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }



                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(45);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(45), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(45), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(52);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(50), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(50), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(61), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(62);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(61), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);






                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);



                /*

                   //Centro de Atencion
                   xp.X = XUnit.FromMillimeter(162);
                   xp.Y = XUnit.FromMillimeter(132);
                   graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushWhite, xp);
                   //graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushWhite, xp);

                   xp.X = XUnit.FromMillimeter(153);
                   xp.Y = XUnit.FromMillimeter(137);
                   //graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushWhite, xp);
                   graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushWhite, xp);

                   xp.X = XUnit.FromMillimeter(153);
                   xp.Y = XUnit.FromMillimeter(147);
                   graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushWhite, xp);
                   //graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushWhite, xp);

                       */

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


                //  if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                //  {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(167);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, BrushBlack, xp);
                /*   }
                   else
                   {
                       xp.X = XUnit.FromMillimeter(171);
                       xp.Y = XUnit.FromMillimeter(174);
                       graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                       xp.X = XUnit.FromMillimeter(163);
                       xp.Y = XUnit.FromMillimeter(177);
                       graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                  / }*/

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);

                /*
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(194);
            //graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(155);
            xp.Y = XUnit.FromMillimeter(197);
            //graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(154);
            xp.Y = XUnit.FromMillimeter(204);
           // graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
            graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushWhite, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                // graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushWhite, rectImporte, formatCenter);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);



                //Leyenda Subototal       
                XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(167), 65, 9);
            //         graphfont.DrawRectangle(XPens.Red, rectLeyendaSubtotal);
              //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
            graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushBlack, rectLeyendaSubtotal, formatCenter);

                XRect rectSubtotal = new XRect(XUnit.FromMillimeter(1), XUnit.FromMillimeter(175), 72, 9);
             //      graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
           //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBoleta2015_1, rectSubtotal, formatRight);


                //Leyenda Iva Insc      
                XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(29), XUnit.FromMillimeter(167), 65, 9);
            //   graphfont.DrawRectangle(XPens.Red, rectLeyendaIvaInsc);
       //        graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushWhite, rectLeyendaIvaInsc, formatCenter);
                graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushBlack, rectLeyendaIvaInsc, formatCenter);
                XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(29), XUnit.FromMillimeter(175), 60, 9);
                //  graphfont.DrawRectangle(XPens.Red, rectIvaInsc);
       //            graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBlack, rectIvaInsc, formatCenter);
                graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaInsc, formatRight);


                //Leyenda Iva No Insc      
                XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(52), XUnit.FromMillimeter(167), 65, 9);
        //     graphfont.DrawRectangle(XPens.Black, rectLeyendaIvaNoInsc);
                //graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushWhite, rectLeyendaIvaNoInsc, formatCenter);
                graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);
                XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(52), XUnit.FromMillimeter(175), 60, 9);
         //          graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
        //          graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBlack, rectIvaNoInsc, formatCenter);
                graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaNoInsc, formatRight);



                //Leyenda Perc IIBB BsAs     
                XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(75), XUnit.FromMillimeter(167), 65, 9);
        //         graphfont.DrawRectangle(XPens.Chocolate, rectLeyendaPercIIBB);

                 XRect rectLeyendaPercIIBB2 = new XRect(XUnit.FromMillimeter(75), XUnit.FromMillimeter(170), 65, 9);
          //       graphfont.DrawRectangle(XPens.DarkViolet, rectLeyendaPercIIBB2);


           //   graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("PERC IIBB", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("BSAS", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB2, formatCenter);
                XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(75), XUnit.FromMillimeter(175),60, 9);
             //   graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
              //    graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
                graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBoleta2015_1, rectPercIIBB, formatRight);



                //Leyenda Perc IIBB Caba    
                XRect rectLeyendaPercIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(167), 65, 9);
            //    graphfont.DrawRectangle(XPens.AliceBlue, rectLeyendaPercIIBBCaba);
                XRect rectLeyendaPercIIBBCaba2 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(170), 65, 9);
              //  graphfont.DrawRectangle(XPens.DarkViolet, rectLeyendaPercIIBBCaba2);

            //  graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
                graphfont.DrawString("PERC IIBB", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBBCaba, formatCenter);
                graphfont.DrawString("CABA", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBBCaba2, formatCenter);
                XRect rectPercIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(175), 60, 9);
            ///     graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
            //     graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
                 graphfont.DrawString(sValorIIBBCaba, fontGothamBook8, BrushBoleta2015_1, rectPercIIBBCaba, formatRight);

                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                //graphfont.DrawString("TOTAL", fontGothamMedium8, BrushWhite, rectLeyendaTotal, formatCenter);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
                //    graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBlack, rectTotal, formatCenter);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);



                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);


                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

                //Leyendas Variables
                //aqalizo cada tenxto para ver si son 1 o 2 reenglones


                //P1  
                string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP1_0;
                XRect rectP1_1;
                if (SplitP1.Length > 1)
                {
                    rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    rectP1_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(226), 67, 7);
                    //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                    graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                    graphfont.DrawString(SplitP1[1], fontGothamBold7, BrushBoleta2015_1, rectP1_1, formatRight);
                }
                else
                {

                    rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                }


                //P2
                string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP2_0;
                XRect rectP2_1;
                if (SplitP2.Length > 1)
                {
                    rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(223), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    rectP2_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(226), 67, 7);
                    //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                    graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                    graphfont.DrawString(SplitP2[1], fontGothamBold7, BrushBoleta2015_1, rectP2_1, formatRight);
                }
                else
                {

                    rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(224), 67, 7);
                    //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                }



                //P3
                string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP3_0;
                XRect rectP3_1;
                if (SplitP3.Length > 1)
                {
                    rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(222), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    rectP3_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(225), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                    graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                    graphfont.DrawString(SplitP3[1], fontGothamBold7, BrushBoleta2015_1, rectP3_1, formatRight);
                }
                else
                {

                    rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                }





                //P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(231), 67, 7);  //-6
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(233), 67, 7);  //-3
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatRight);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(232), 67, 7);  //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                }



                //P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatRight);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatRight);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                }




                // P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(267), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(270), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, this.BrushBoleta2015_1, rectP7_0, formatRight);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, this.BrushBoleta2015_1, rectP7_1, formatRight);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(267), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, this.BrushBoleta2015_1, rectP7_0, formatRight);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(267), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(270), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, this.BrushBoleta2015_1, rectP8_0, formatRight);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, this.BrushBoleta2015_1, rectP8_1, formatRight);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(267), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, this.BrushBoleta2015_1, rectP8_0, formatRight);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(267), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(270), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, this.BrushBoleta2015_1, rectP9_0, formatRight);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, this.BrushBoleta2015_1, rectP9_1, formatRight);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(267), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, this.BrushBoleta2015_1, rectP9_0, formatRight);
                }


                XRect rectC1 = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(224), 65, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC1);
                graphfont.DrawString(c1, fontGothamBold7, this.BrushBoleta2015_1, rectC1, formatCenter);


                XRect rectC2 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(224), 65, 5);
                //   graphfont.DrawRectangle(XPens.Red, rectC2);
                graphfont.DrawString(c2, fontGothamBold7, this.BrushBoleta2015_1, rectC2, formatCenter);

                XRect rectC3 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(224), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                graphfont.DrawString(c3, fontGothamBold7, BrushBoleta2015_1, rectC3, formatRight);


                XRect rectC4 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(232), 45, 5);
                //graphfont.DrawRectangle(XPens.Red, rectC1);
                if (!string.IsNullOrEmpty(c4.Trim()))
                    graphfont.DrawString(c4, fontGothamBold7, BrushBoleta2015_1, rectC4, formatRight);


                XRect rectC5 = new XRect(XUnit.FromMillimeter(109), XUnit.FromMillimeter(232), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC2);
                if (!string.IsNullOrEmpty(c5.Trim()))
                    graphfont.DrawString(c5, fontGothamBold7, BrushBoleta2015_1, rectC5, formatRight);

                XRect rectC6 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(232), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                if (!string.IsNullOrEmpty(c6.Trim()))
                    graphfont.DrawString(c6, fontGothamBold7, BrushBoleta2015_1, rectC6, formatRight);



                XRect rectC7 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(267), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC1);
                if (!string.IsNullOrEmpty(c7.Trim()))
                    graphfont.DrawString(c7, fontGothamBold7, BrushBoleta2015_1, rectC7, formatRight);

                XRect rectC8 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(267), 65, 5);
                //    graphfont.DrawRectangle(XPens.Red, rectC8);
                if (!string.IsNullOrEmpty(c8.Trim()))
                    graphfont.DrawString(c8, fontGothamBold7, BrushBoleta2015_1, rectC8, formatCenter);

                XRect rectC9 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(267), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                if (!string.IsNullOrEmpty(c9.Trim()))
                    graphfont.DrawString(c9, fontGothamBold7, BrushBoleta2015_1, rectC9, formatRight);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold8, BrushBoleta2015_1, xp);
                XRect rectC10 = new XRect(XUnit.FromMillimeter(151), XUnit.FromMillimeter(216), 100, 8);
                // graphfont.DrawRectangle(XPens.Red, rectC10);
                graphfont.DrawString(c10, fontGothamBold8, BrushBoleta2015_1, rectC10, formatRight);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold8, BrushBoleta2015_1, xp);
                XRect rectC11 = new XRect(XUnit.FromMillimeter(151), XUnit.FromMillimeter(258), 100, 8);
                //    graphfont.DrawRectangle(XPens.Red, rectC11);
                graphfont.DrawString(c11, fontGothamBold8, BrushBoleta2015_1, rectC11, formatRight);



                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(196), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                if (!string.IsNullOrEmpty(sValorAfipInforma1.Trim()))
                    graphfont.DrawString(sValorAfipInforma1, fontGothamBook5, BrushBoleta2015_1, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(199), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                if (!string.IsNullOrEmpty(sValorAfipInforma2.Trim()))
                    graphfont.DrawString(sValorAfipInforma2.TrimStart(), fontGothamBook5, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

                XRect recValorAFipInforma3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(202), 350, 8);
                if (!string.IsNullOrEmpty(sValorAfipInforma3.Trim()))
                    graphfont.DrawString(sValorAfipInforma3.TrimStart(), fontGothamBook5, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(190), 264, 9);
                    //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);

                }

                if ((ca.DebitoAutomatico == false))
                {


                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(242);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(58);
                        xp.Y = XUnit.FromMillimeter(252);
                        graphfont.DrawString(sCodBarra2, fontGothamBook9, BrushBoleta2015_1, xp);
                    }



                }
                else
                {
                    if (sTipoComprobante != "3")
                    {
                        xp.X = XUnit.FromMillimeter(61);
                        xp.Y = XUnit.FromMillimeter(247);
                        graphfont.DrawString(ca.LeyendaDebitoAutomatico, fontGothamBook7, BrushBoleta2015_1, xp);
                    }
                }


                if (!string.IsNullOrEmpty(sCodBarra3))
                {
                    xp.X = XUnit.FromMillimeter(57);
                    xp.Y = XUnit.FromMillimeter(276);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode3.Text = sCodBarra3;//value of code to draw on page
                    BarCode3.StartChar = Convert.ToChar("*");
                    BarCode3.EndChar = Convert.ToChar("*");
                    BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode3.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode3, xp);
                    xp.X = XUnit.FromMillimeter(58);
                    xp.Y = XUnit.FromMillimeter(287);
                    graphfont.DrawString(sCodBarra3, fontGothamBook9, BrushBoleta2015_1, xp);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);


                //   graphfont.RotateTransform(90);
                //  graphfont.DrawString(sCodBarra1, fontGothamBook6, BrushBoleta2015_1, new XPoint(140, -55));

                graphfont.RotateTransform(270);
                graphfont.DrawString(sCodBarra1, fontArial8, XBrushes.Black, new XPoint((-185), 60));



                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                Logger.Logger cl = new Logger.Logger();
                cl.log(ca.Scomprobante + ex.Message + " FgetPageFacturaAsal1Mod092017");
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal1Mod092017");

            }
        
        }

        private void FgetPageFacturaAsal1Mod092015(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            try
            {
           
             PdfPage pdfPage = pdf.AddPage();
            //asigno valores a la factura
            string sNombreEmpresa = ca.NombreEmpresa;
            string sTipoFact = ca.TipoFact;
            string sCofFact = ca.CodFact;
            string sLeyFact = ca.LeyFact;
            string sNumFact = "Nro." + ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
            string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
            string sDomicilio1 = ca.DomicilioUno;
            string sDomicilio2 = ca.DomicilioDos;
            string sDomicilio3 = ca.DomicilioTres;
            string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
            string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
            string sNumeroCliente = ca.NumeroCliente; // "557396";
            string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
            string sNumConv = ca.NumConv;            //"901 221621 2";
            string sFechaInicio = ca.FechaInicio;  // "05/1999";
            string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
            string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
            string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
            string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
            DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
            DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
            DateTime dFechaCambioAgregadoImagen = new DateTime(2016, 12, 01);
            string sCodBarraAfip = ca.BarraAfip;

            string sPeriodo = ca.Periodo;// "May/15";
            string sIVA = ca.CategoriaIva;
            string sCuit = ca.NumCuit;
            string sDni = ca.Documento;

            string sOriginal = "ORIGINAL";

            string[] sConcepto = new string[16];
            string[] sImporte = new string[16];

            sConcepto[0] = ca.Concepto_01;
            sConcepto[1] = ca.Concepto_02;
            sConcepto[2] = ca.Concepto_03;
            sConcepto[3] = ca.Concepto_04;
            sConcepto[4] = ca.Concepto_05;
            sConcepto[5] = ca.Concepto_06;
            sConcepto[6] = ca.Concepto_07;
            sConcepto[7] = ca.Concepto_08;
            sConcepto[8] = ca.Concepto_09;
            sConcepto[9] = ca.Concepto_10;
            sConcepto[10] = ca.Concepto_11;
            sConcepto[11] = ca.Concepto_12;
            sConcepto[12] = ca.Concepto_13;
            sConcepto[13] = ca.Concepto_14;
            sConcepto[14] = ca.Concepto_15;
            sConcepto[15] = ca.Concepto_16;

            sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
            sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
            sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
            sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
            sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
            sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
            sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
            sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
            sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
            sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
            sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
            sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
            sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
            sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
            sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
            sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


            string[] sInfoAdicional = new string[3];

            sInfoAdicional[0] = ca.InfoAdicional01;
            sInfoAdicional[1] = ca.InfoAdicional02;
            sInfoAdicional[2] = ca.InfoAdicional03;


            string[] sAbonoItem = new string[6];
            sAbonoItem[0] = " ";// ca.AbonoItem_01;
            sAbonoItem[1] = " ";//ca.AbonoItem_02;
            sAbonoItem[2] = " ";//ca.AbonoItem_03;
            sAbonoItem[3] = " ";//ca.AbonoItem_04;
            sAbonoItem[4] = " ";//ca.AbonoItem_05;
            sAbonoItem[5] = " ";//ca.AbonoItem_06;

            string sEtiqIvaInscripto = "IVA INSC 21%";
            string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
            string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
            string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
            string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

            string sValorCae = "CAE: " + ca.NumCae;
            string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
            string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

            string valorPie = ca.PieFactura.PadRight(279,' ') ;
            string sValorAfipInforma1 = " ";
            string sValorAfipInforma2 = " ";
            string sValorAfipInforma3 = " ";

            if (!string.IsNullOrEmpty(ca.PieFactura))
            {
                if (ca.PieFactura.Length > 110)
                {
                    sValorAfipInforma1 = valorPie.Substring(0, 110);
                    sValorAfipInforma2 = valorPie.Substring(110, 110);
                    sValorAfipInforma3 = valorPie.Substring(220, 59);

                    //sValorAfipInforma1 = ca.PieFactura.Substring(0, 110);
                    //sValorAfipInforma2 = ca.PieFactura.Substring(110, (ca.PieFactura.Length - 111));
                    
                }
                else
                    sValorAfipInforma1 = ca.PieFactura;
            }


            string c1 = ca.c1;
            string c2 = ca.c2;
            string c3 = (!string.IsNullOrEmpty(ca.c3)) ? "$ " + ca.c3 : " ";
            string c4 = ca.c4;
            string c5 = ca.c5;
            ca.c6 = ca.c6.Trim();
            string c6 = (!string.IsNullOrEmpty(ca.c6)) ? "$ " + ca.c6 : " ";
            string c7 = ca.c7;
            string c8 = ca.c8;
            ca.c9 = ca.c9.Trim();
            string c9 = (!string.IsNullOrEmpty(ca.c9)) ? "$ " + ca.c9 : " ";
            string c10 = (!string.IsNullOrEmpty(ca.EstadoMontoFacturadocupon)) ? "$ " + ca.EstadoMontoFacturadocupon : " ";
            string c11 = (!string.IsNullOrEmpty(ca.ValorTotalCupon)) ? "$ " + ca.ValorTotalCupon : " ";



            //if (!string.IsNullOrEmpty(valorPie))
            //{
            //    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
            //    if (lValorPie.Count == 1)
            //    {
            //        sValorAfipInforma1 = ca.PieFactura;

            //    }
            //    else
            //        sValorAfipInforma1 = lValorPie[0];
            //    sValorAfipInforma2 = lValorPie[1];
            //}

            string sCodBarra1 = ca.CodBarraCorreo;
            string sCodBarra2 = ca.CodBarra1;
            string sCodBarra3 = ca.CodBarra2;
            string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
            string pngLogopath;


            //Leyendas Cambiables
            string p1 = ca.EtiqCompAp1;
            string p2 = ca.EtiqFvAp1;
            string p3 = ca.EtiqMfAp1;
            string p4 = ca.EtiqCompBp1;
            string p5 = ca.EtiqFvBp1;
            string p6 = ca.EtiqMfBp1;
            string p7 = ca.EtiqCompTp1;
            string p8 = ca.EtiqFvTp1;
            string p9 = ca.EtiqMfTp1;
            string p10 = "MONTO FACTURADO";
            string p11 = "SALDO TOTAL";


            string sGothamBold;
            sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
            privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
            System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

            string sGothamBook;
            sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
            privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
            System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

            string sGothamMedium;
            sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
            privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
            System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

            string sGothamMedium1;
            sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
            privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
            System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

            XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

            XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

            XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily,5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium11= new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium24 = new XFont(fontGothamMedium.FontFamily, 24, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium25 = new XFont(fontGothamMedium.FontFamily, 25, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));


            XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
            XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));

            var @sImageRoute = cs.Imageroute;
            // sImageRoute=sImageRoute.Replace("\\", @"\");

            //Lineas
            XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
            XPen LineasFactura = new XPen(XColors.Black, 0.22);

            //Alineaciones
            XStringFormat formatRight = new XStringFormat();
            formatRight.Alignment = XStringAlignment.Far;

            XStringFormat formatLeft = new XStringFormat();
            formatLeft.Alignment = XStringAlignment.Near;

            XStringFormat formatCenter = new XStringFormat();
            formatCenter.Alignment = XStringAlignment.Center;


            XStringFormat formatFar = new XStringFormat();
            formatFar.LineAlignment = XLineAlignment.Far;

            XStringFormat formatFarRight = new XStringFormat();
            formatFarRight.LineAlignment = XLineAlignment.Far;
            formatFarRight.Alignment = XStringAlignment.Far;

            XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

            pngLogopath = sImageRoute + "centros_a_cliente.png";
            XImage imagecc = XImage.FromFile(pngLogopath);
            graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

            pngLogopath = sImageRoute + "registrese.png";
            XImage imagereg = XImage.FromFile(pngLogopath);
            graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese

            
            //Rectangulos de Estado de Cuenta al
            graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
            graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
            graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


            //rectangulos Verde Antina
            graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe
            graph.DrawRectangle(BrushVerdeAntina, 6, 166, 146, 5);  //rectangulo subtotal iva etc
            graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

       //     graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

     //       graph.DrawRoundedRectangle(BrushVerdeAntina, 152,188, 49, 20, 3, 3);  //registrese
     //       graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
     //       graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
            //rectangulos Verde Antina

            graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
            graph.DrawRoundedRectangle(LineasRectangulo, 76, 22, 16, 13, 3, 3);  //r2  -> Cuadrado Tipo Factura
            graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago

            graph.DrawLine(LineasFactura,152,8,152,208);  //l1 linea que divide Total a pagar con estado de cuenta
            graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
           // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


            //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

            graph.DrawLine(LineasFactura, 6, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
            graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento
            //graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
            // graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
            if (ca.CodFact == "CÓDIGO 03")
            {
                graph.DrawLine(LineasFactura, 92, 8, 92, 20);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                graph.DrawLine(LineasFactura, 92, 20, 152, 20);  //l8
            }
            else
            {
                graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8
            }

 
           // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
            graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar



            if (ca.EsCopia == true)
            {
                pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                graph.DrawImage(imagewatermark, 23, 131, 67,7);
            }


            //logo 
            pngLogopath = sImageRoute + "logo092015.png";
            XImage image = XImage.FromFile(pngLogopath);
            graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina
          
            graph.DrawImage(image, 22, 214 , 42,8);//g2 -> Antina

            graph.DrawImage(image, 22, 256, 42, 8);//g3 -> Antina

            if ((ca.Empresa != "Eurosat S.A.") | (ca.AdheridaFacturacionElectronicaUnicaVez=="1"))
            {
            //    pngLogopath = sImageRoute + getImageAviso2015(sFechaFactura); //"avisoFA_03.png"; // ca.ImagenesComprobante[0];
                pngLogopath = sImageRoute + ca.ImagenesComprobante[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
            }
            if (dFechaFactura > dFechaCambioAgregadoImagen)
            {

                    pngLogopath = sImageRoute + ca.ImagenesComprobante[0];
                    XImage imageAviso = XImage.FromFile(pngLogopath);
                    graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
            }
        
            //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
            graph.DrawLine(LineasFactura, 33, 166, 33, 181);  //l11
            graph.DrawLine(LineasFactura, 60, 166, 60, 181);  //l11            
            graph.DrawLine(LineasFactura, 88, 166, 88, 181);  //l11
            graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


            //cupones de pago
            graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
            graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
            graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


            graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
            graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
            graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

            graph.DrawRoundedRectangle(LineasRectangulo, 162, 266, 25, 5, 3, 3);  //r9
            graph.DrawRoundedRectangle(LineasRectangulo, 103, 266, 25, 5, 3, 3);  //r10
            graph.DrawRoundedRectangle(LineasRectangulo, 44, 266, 25, 5, 3, 3);  //r11


            graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
            graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

            graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
            graph.DrawRectangle(LineasRectangulo, 54, 273, 100, 15); //r15  -> Segundo Codigo de Barras

            /* 

        //logo 
        pngLogopath = sImageRoute + "logo092015.jpg";
        XImage image = XImage.FromFile(pngLogopath);  //g1
        graph.DrawImage(image, 10, 11, 56, 8);
 */


          //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1
           
            graph.Dispose();


            XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



            XBrush brush = XBrushes.Black;
            XPoint xp = new XPoint();


            xp.X = XUnit.FromMillimeter(80);
            xp.Y = XUnit.FromMillimeter(31);
            graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

            //Codigo Factura
            xp.X = XUnit.FromMillimeter(80);
            xp.Y = XUnit.FromMillimeter(33);
            graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

            xp.X = XUnit.FromMillimeter(76);
            xp.Y = XUnit.FromMillimeter(39);
            graphfont.DrawString(sOriginal, fontGothamBold9, BrushBoleta2015_1, xp);


            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(27);
            graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


            xp.Y = XUnit.FromMillimeter(30);
            graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

            xp.Y = XUnit.FromMillimeter(33);
            graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

            xp.Y = XUnit.FromMillimeter(36);
            graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

            //total a pagar
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(11);
            graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


            //fecha de vencimiento
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(15);
            graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


            //Numero de Cliente
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(19);
            graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



            //valor de sEstadoTotalPagar 
            XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
            graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


            //valor de sFechaVencimiento
            XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
            //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
            graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


            //valor sNumeroCliente
            XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(16), 60, 10);
            //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
            graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);

            //Leyfact
            if (sTipoFact != "X")
            {
                //xp.X = XUnit.FromMillimeter(95);
                //xp.Y = XUnit.FromMillimeter(26);

                if (ca.CodFact == "CÓDIGO 03")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(23);
                    graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);
                    graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                }
            }
            else
            {
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(5);
                graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);

            }

            // sNumFact = "Nro.";
            if (ca.CodFact == "CÓDIGO 03")
            {
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(26);
                graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
            }
            else
            {
                xp.X = XUnit.FromMillimeter(115);
                xp.Y = XUnit.FromMillimeter(26);
                graphfont.DrawString(sNumFact, fontGothamBook9, BrushBlack, xp);
            }
            
            //Fecha 
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(30);
            graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);             
            xp.X = XUnit.FromMillimeter(106);
            graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);
       


            //Cuit
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(33);
            graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
             xp.X = XUnit.FromMillimeter(102);
            graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);
 


            //Convenio Multilateral
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(36);
            graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
            xp.X = XUnit.FromMillimeter(125);
            graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);
     

            //Inicio de Actividades
            xp.X = XUnit.FromMillimeter(95);
            xp.Y = XUnit.FromMillimeter(39);
            graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
            xp.X = XUnit.FromMillimeter(127);
            graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);


            //Estado de cuenta al
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(12);
            XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(8), 87, 10);
            graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
            // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

            //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
            XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(8), 55, 10);
            // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
            graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);


            //Saldo Anterior
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(17);
            graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
            XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
            //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
            graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);

                
            //Monto Actual
            xp.Y = XUnit.FromMillimeter(21);
            graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
            XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
            //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
            graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);


            //total a pagar
            xp.Y = XUnit.FromMillimeter(27);
            graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
            //valor de sEstadoTotalPagar 
            XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(25), 60, 10);
            graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);
 


            xp.Y = XUnit.FromMillimeter(54);
            xp.X = XUnit.FromMillimeter(153);
            graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


            //Nombre y Apellido
            List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
            if (lNombreApellido.Count == 1)
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(45);
                graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
            }
            else
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(44);
                graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                xp.Y = XUnit.FromMillimeter(47);
                graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

            }

            //Domicilio 1        
            List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8,188); 
            if (lDomicilio1.Count == 1)
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(52);
                graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
            }
            else
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(51);
                graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                xp.Y = XUnit.FromMillimeter(54);
                graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

            }
            //Domicilio 2
            List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
            if (lDomicilio2.Count == 1)
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(59);
                if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                    graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
            }
            else
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(58);
                graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                xp.Y = XUnit.FromMillimeter(61);
                graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
            }


            //Domicilio 3
            xp.X = XUnit.FromMillimeter(25);
            xp.Y = XUnit.FromMillimeter(65);
            List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
            graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
            if (lDomicilio3.Count > 1)
            {
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(68);
                graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
            }



            //Periodo
            xp.X = XUnit.FromMillimeter(111);
            xp.Y = XUnit.FromMillimeter(45);
            XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(45), 60, 9);
            graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
          //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
            XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(45), 60, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
            graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



            //IVA
            xp.Y = XUnit.FromMillimeter(52);
            XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(50), 60, 9);
            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
         //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
//            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
            XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(50), 60, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
          //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
            graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

            //CUIT
            xp.Y = XUnit.FromMillimeter(57);
            XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
            graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
           // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
            //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
            XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
       //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
            graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


            //DNI
            XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(61), 60, 9);
            graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
            xp.Y = XUnit.FromMillimeter(62);
          //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
            XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(61), 60, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                   graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);






                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);


           
         /*

            //Centro de Atencion
            xp.X = XUnit.FromMillimeter(162);
            xp.Y = XUnit.FromMillimeter(132);
            graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushWhite, xp);
            //graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushWhite, xp);

            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(137);
            //graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushWhite, xp);
            graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushWhite, xp);

            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(147);
            graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushWhite, xp);
            //graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushWhite, xp);

                */

            xp.X = XUnit.FromMillimeter(164);
            xp.Y = XUnit.FromMillimeter(157);
            graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(165);
            xp.Y = XUnit.FromMillimeter(160);
            graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(173);
            xp.Y = XUnit.FromMillimeter(166);
            graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(163);
            xp.Y = XUnit.FromMillimeter(169);
            graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


            //  if (dFechaFactura > dFechaCambioTextoSucursalMoron)
            //  {
            xp.X = XUnit.FromMillimeter(171);
            xp.Y = XUnit.FromMillimeter(174);
            graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(167);
            xp.Y = XUnit.FromMillimeter(177);
            graphfont.DrawString("Dr.Int. Assef 106", fontGothamBook7, BrushBlack, xp);
            /*   }
               else
               {
                   xp.X = XUnit.FromMillimeter(171);
                   xp.Y = XUnit.FromMillimeter(174);
                   graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                   xp.X = XUnit.FromMillimeter(163);
                   xp.Y = XUnit.FromMillimeter(177);
                   graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
              / }*/

            xp.X = XUnit.FromMillimeter(164);
            xp.Y = XUnit.FromMillimeter(183);
            graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(169);
            xp.Y = XUnit.FromMillimeter(186);
            graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);

                /*
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(194);
            //graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(155);
            xp.Y = XUnit.FromMillimeter(197);
            //graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushWhite, xp);
            xp.X = XUnit.FromMillimeter(154);
            xp.Y = XUnit.FromMillimeter(204);
           // graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
            graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushWhite, xp);
                */


            //Concepto      
            XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
            graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
            //graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushWhite, rectConcepto, formatCenter);
            //Leyenda Subototal       
            XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
           // graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushWhite, rectImporte, formatCenter);
            graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);



            //Leyenda Subototal       
            XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(167), 72, 9);
         //     graphfont.DrawRectangle(XPens.Red, rectLeyendaSubtotal);
           // graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
            graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushBlack, rectLeyendaSubtotal, formatCenter);

            XRect rectSubtotal = new XRect(XUnit.FromMillimeter(6), XUnit.FromMillimeter(175), 72, 9);
        //    graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
       //     graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
            graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBoleta2015_1, rectSubtotal, formatRight);


            //Leyenda Iva Insc      
            XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(167), 72, 9);
           //     graphfont.DrawRectangle(XPens.Red, rectLeyendaIvaInsc);
            //graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushWhite, rectLeyendaIvaInsc, formatCenter);
            graphfont.DrawString(sEtiqIvaInscripto, fontGothamMedium8, BrushBlack, rectLeyendaIvaInsc, formatCenter);
            XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(175), 72, 9);
          //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaInsc);
        //    graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBlack, rectIvaInsc, formatCenter);
             graphfont.DrawString(sValorIvaInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaInsc, formatRight);


            //Leyenda Iva No Insc      
            XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(60), XUnit.FromMillimeter(167), 69, 9);
             // graphfont.DrawRectangle(XPens.Black, rectLeyendaIvaNoInsc);
            //graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushWhite, rectLeyendaIvaNoInsc, formatCenter);
            graphfont.DrawString("IVA NO INSC", fontGothamMedium8, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);
            XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(62), XUnit.FromMillimeter(175), 67, 9);
          //     graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
         //   graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBlack, rectIvaNoInsc, formatCenter);
            graphfont.DrawString(sValorIvaNoInscripto, fontGothamBook8, BrushBoleta2015_1, rectIvaNoInsc, formatRight);



            //Leyenda Perc IIBB BsAs     
            XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(92), XUnit.FromMillimeter(167), 75, 9);
            // graphfont.DrawRectangle(XPens.Chocolate, rectLeyendaPercIIBB);
           // graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushWhite, rectLeyendaPercIIBB, formatCenter);
            graphfont.DrawString("PERC IIBB BSAS", fontGothamMedium8, BrushBlack, rectLeyendaPercIIBB, formatCenter);
            XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(91), XUnit.FromMillimeter(175), 79, 9);
          //   graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
       //     graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBlack, rectPercIIBB, formatCenter);
             graphfont.DrawString(sValorIIBBBSAS, fontGothamBook8, BrushBoleta2015_1, rectPercIIBB, formatRight);



            //Leyenda Total     
            XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
            //graphfont.DrawString("TOTAL", fontGothamMedium8, BrushWhite, rectLeyendaTotal, formatCenter);
            graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
            XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
        //    graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBlack, rectTotal, formatCenter);
            graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);

    

            // Footer
            XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
            //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
            graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

            XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
            //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
            graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

            XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
            graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);


                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

            //Leyendas Variables
            //aqalizo cada tenxto para ver si son 1 o 2 reenglones


            //P1  
            string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP1_0;
            XRect rectP1_1;
            if (SplitP1.Length > 1)
            {
                rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(223), 67, 7);
                // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                rectP1_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(226), 67, 7);
                //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                graphfont.DrawString(SplitP1[1], fontGothamBold7, BrushBoleta2015_1, rectP1_1, formatRight);
            }
            else
            {

                rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(224), 67, 7);
                // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
            }


            //P2
            string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP2_0;
            XRect rectP2_1;
            if (SplitP2.Length > 1)
            {
                rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(223), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                rectP2_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(226), 67, 7);
                //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                graphfont.DrawString(SplitP2[1], fontGothamBold7, BrushBoleta2015_1, rectP2_1, formatRight);
            }
            else
            {

                rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(224), 67, 7);
                //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
            }



            //P3
            string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP3_0;
            XRect rectP3_1;
            if (SplitP3.Length > 1)
            {
                rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(222), 67, 7);
                //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                rectP3_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(225), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                graphfont.DrawString(SplitP3[1], fontGothamBold7, BrushBoleta2015_1, rectP3_1, formatRight);
            }
            else
            {

                rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(224), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
            }





            //P4  --->240  Comprobante Television
            string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP4_0;
            XRect rectP4_1;
            if (SplitP4.Length > 1)
            {
                rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(231), 67, 7);  //-6
                //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                rectP4_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(233), 67, 7);  //-3
                //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatRight);
            }
            else
            {
                rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(232), 67, 7);  //-4
                //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
            }



            //P5  --> 240
            string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP5_0;
            XRect rectP5_1;
            if (SplitP5.Length > 1)
            {
                rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(230), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                rectP5_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(233), 67, 7);
                //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatRight);
            }
            else
            {
                rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(232), 67, 7);
                //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
            }



            //P6  ---->266
            string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP6_0;
            XRect rectP6_1;
            if (SplitP6.Length > 1)
            {
                rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(230), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                rectP6_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(233), 67, 7);
                //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatRight);
            }
            else
            {
                rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(232), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
            }




            //P7   --> 266
            string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP7_0;
            XRect rectP7_1;
            if (SplitP6.Length > 1)
            {
                rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(267), 67, 7);  // -6
                //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                rectP7_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(270), 67, 7);  // -3
                //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatRight);
                graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatRight);
            }
            else
            {
                rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(267), 67, 7);   //-4
                //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatRight);
            }




            //P8
            string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP8_0;
            XRect rectP8_1;
            if (SplitP8.Length > 1)
            {
                rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(267), 67, 7);
                //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                rectP8_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(270), 67, 7);
                //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatRight);
                graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatRight);
            }
            else
            {
                rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(267), 67, 7);
                //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatRight);
            }




            //P9
            string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
            XRect rectP9_0;
            XRect rectP9_1;
            if (SplitP6.Length > 1)
            {
                rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(267), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                rectP9_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(270), 67, 7);
                //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatRight);
                graphfont.DrawString(SplitP9[1], fontGothamBold7, BrushBoleta2015_1, rectP9_1, formatRight);
            }
            else
            {
                rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(267), 67, 7);
                // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatRight);
            }


            XRect rectC1 = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(224), 65, 5);
            // graphfont.DrawRectangle(XPens.Red, rectC1);
            graphfont.DrawString(c1, fontGothamBold7, BrushBoleta2015_1, rectC1, formatCenter);


            XRect rectC2 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(224), 65, 5);
            //   graphfont.DrawRectangle(XPens.Red, rectC2);
            graphfont.DrawString(c2, fontGothamBold7, BrushBoleta2015_1, rectC2, formatCenter);

            XRect rectC3 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(224), 45, 5);
            // graphfont.DrawRectangle(XPens.Red, rectC3);
            graphfont.DrawString(c3, fontGothamBold7, BrushBoleta2015_1, rectC3, formatRight);


            XRect rectC4 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(232), 45, 5);
            //graphfont.DrawRectangle(XPens.Red, rectC1);
            if (!string.IsNullOrEmpty(c4.Trim()))
                graphfont.DrawString(c4, fontGothamBold7, BrushBoleta2015_1, rectC4, formatRight);


            XRect rectC5 = new XRect(XUnit.FromMillimeter(109), XUnit.FromMillimeter(232), 45, 5);
            // graphfont.DrawRectangle(XPens.Red, rectC2);
            if (!string.IsNullOrEmpty(c5.Trim()))
                graphfont.DrawString(c5, fontGothamBold7, BrushBoleta2015_1, rectC5, formatRight);

            XRect rectC6 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(232), 45, 5);
            // graphfont.DrawRectangle(XPens.Red, rectC3);
            if (!string.IsNullOrEmpty(c6.Trim()))
                graphfont.DrawString(c6, fontGothamBold7, BrushBoleta2015_1, rectC6, formatRight);



            XRect rectC7 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(267), 45, 5);
            // graphfont.DrawRectangle(XPens.Red, rectC1);
            if (!string.IsNullOrEmpty(c7.Trim()))
                graphfont.DrawString(c7, fontGothamBold7, BrushBoleta2015_1, rectC7, formatRight);

            XRect rectC8 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(267), 65, 5);
            //    graphfont.DrawRectangle(XPens.Red, rectC8);
            if (!string.IsNullOrEmpty(c8.Trim()))
                graphfont.DrawString(c8, fontGothamBold7, BrushBoleta2015_1, rectC8, formatCenter);

            XRect rectC9 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(267), 45, 5);
            // graphfont.DrawRectangle(XPens.Red, rectC3);
            if (!string.IsNullOrEmpty(c9.Trim()))
                graphfont.DrawString(c9, fontGothamBold7, BrushBoleta2015_1, rectC9, formatRight);

            xp.X = XUnit.FromMillimeter(98);
            xp.Y = XUnit.FromMillimeter(219);
            graphfont.DrawString(p10, fontGothamBold8, BrushBoleta2015_1, xp);
            XRect rectC10 = new XRect(XUnit.FromMillimeter(151), XUnit.FromMillimeter(216), 100, 8);
            // graphfont.DrawRectangle(XPens.Red, rectC10);
            graphfont.DrawString(c10, fontGothamBold8, BrushBoleta2015_1, rectC10, formatRight);

            xp.X = XUnit.FromMillimeter(98);
            xp.Y = XUnit.FromMillimeter(261);
            graphfont.DrawString(p11, fontGothamBold8, BrushBoleta2015_1, xp);
            XRect rectC11 = new XRect(XUnit.FromMillimeter(151), XUnit.FromMillimeter(258), 100, 8);
            //    graphfont.DrawRectangle(XPens.Red, rectC11);
            graphfont.DrawString(c11, fontGothamBold8, BrushBoleta2015_1, rectC11, formatRight);



            XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(196), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
            if (!string.IsNullOrEmpty(sValorAfipInforma1.Trim()))
                graphfont.DrawString(sValorAfipInforma1, fontGothamBook5, BrushBoleta2015_1, recValorAFipInforma1, formatLeft);

            XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(199), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
            if (!string.IsNullOrEmpty(sValorAfipInforma2.Trim()))
                graphfont.DrawString(sValorAfipInforma2.TrimStart(), fontGothamBook5, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

            XRect recValorAFipInforma3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(202), 350, 8);
            if (!string.IsNullOrEmpty(sValorAfipInforma3.Trim()))
                graphfont.DrawString(sValorAfipInforma3.TrimStart(), fontGothamBook5, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

            if (!string.IsNullOrEmpty(sCodBarraAfip))
            {
                xp.X = XUnit.FromMillimeter(35);
                xp.Y = XUnit.FromMillimeter(183);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                BarCodeAfip.StartChar = Convert.ToChar("*");
                BarCodeAfip.EndChar = Convert.ToChar("*");
                BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(250), Convert.ToDouble(17)));
                BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                BarCodeAfip.Size.ToXPoint();
                graphfont.DrawBarCode(BarCodeAfip, xp);
                //   xp.X = XUnit.FromMillimeter(45);
                //  xp.Y = XUnit.FromMillimeter(194);
                //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(33), XUnit.FromMillimeter(190), 264, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);

            }

            if ((ca.DebitoAutomatico == false))
            {


                if (!string.IsNullOrEmpty(sCodBarra2))
                {
                    xp.X = XUnit.FromMillimeter(57);
                    xp.Y = XUnit.FromMillimeter(242);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode2.Text = sCodBarra2;//value of code to draw on page
                    BarCode2.StartChar = Convert.ToChar("*");
                    BarCode2.EndChar = Convert.ToChar("*");
                    BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode2.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode2, xp);
                    xp.X = XUnit.FromMillimeter(58);
                    xp.Y = XUnit.FromMillimeter(252);
                    graphfont.DrawString(sCodBarra2, fontGothamBook9, BrushBoleta2015_1, xp);
                }



            }
            else
            {
                if (sTipoComprobante != "3")
                {
                    xp.X = XUnit.FromMillimeter(61);
                    xp.Y = XUnit.FromMillimeter(247);
                    graphfont.DrawString(ca.LeyendaDebitoAutomatico, fontGothamBook7, BrushBoleta2015_1, xp);
                }
            }


            if (!string.IsNullOrEmpty(sCodBarra3))
            {
                xp.X = XUnit.FromMillimeter(57);
                xp.Y = XUnit.FromMillimeter(276);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode3.Text = sCodBarra3;//value of code to draw on page
                BarCode3.StartChar = Convert.ToChar("*");
                BarCode3.EndChar = Convert.ToChar("*");
                BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                BarCode3.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode3, xp);
                xp.X = XUnit.FromMillimeter(58);
                xp.Y = XUnit.FromMillimeter(287);
                graphfont.DrawString(sCodBarra3, fontGothamBook9, BrushBoleta2015_1, xp);
            }
 
            xp.X = XUnit.FromMillimeter(12);
            xp.Y = XUnit.FromMillimeter(68);
            PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
            BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
            //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
            BarCode1.Text = sCodBarra1;//value of code to draw on page
            BarCode1.StartChar = Convert.ToChar("*");
            BarCode1.EndChar = Convert.ToChar("*");
            XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
            BarCode1.Size = BARCODE_SIZE;
            BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
            XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
            BarCode1.Size.ToXPoint();
            graphfont.DrawBarCode(BarCode1, xp);


         //   graphfont.RotateTransform(90);
          //  graphfont.DrawString(sCodBarra1, fontGothamBook6, BrushBoleta2015_1, new XPoint(140, -55));

            graphfont.RotateTransform(270);
            graphfont.DrawString(sCodBarra1, fontArial8, XBrushes.Black, new XPoint((-185), 60));
 

             
            graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                
                Logger.Logger cl = new Logger.Logger();
                cl.log(ca.Scomprobante + ex.Message + " FgetPageFacturaAsal1Mod092015");
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal1Mod092015");
            }
        
        
        }
        /// <summary>
        ///  05/06/2015 - Alineacion del numero de Defensa al consumidor 
        ///  05/06/2015 - Salto de Renglon en Nombre y Apellido y Domicilio
        ///  05/06/2015 - Formateo con , y $ de importes facturados
        ///  05/06/2015 - Eliminar los comentarios posteriores al total a pagar  
        ///  10/06/2015 - Mejoras en Domicilio
        /// </summary>
        /// <param name="cs"></param>
        /// <param name="ca"></param>
        /// <param name="pdf"></param>
        private void FgetPageFacturaAsal1(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {
                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." + ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);

                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = ca.NumCuit;


                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = "CAE: " + ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = "Fecha de Vencimiento: " + sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; // "85425573961020000039690002796915184000000006";
                string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;

                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;







                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);



                graph.DrawRoundedRectangle(LineasRectangulo, 8, 9, 195, 283, 3, 3);

                graph.DrawLine(LineasFactura, 8, 42, 203, 42);
                graph.DrawLine(LineasFactura, 8, 71, 146, 71);
                graph.DrawLine(LineasFactura, 8, 79, 146, 79);

                graph.DrawLine(LineasFactura, 146, 50, 203, 50);
                graph.DrawLine(LineasFactura, 146, 62, 203, 62);
                graph.DrawLine(LineasFactura, 146, 97, 203, 97);
                graph.DrawLine(LineasFactura, 146, 104, 203, 104);

                graph.DrawLine(LineasFactura, 8, 182, 203, 182);
                graph.DrawLine(LineasFactura, 8, 185, 203, 185);

                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 8, 183, 203, 183);
                LineasFactura.DashStyle = XDashStyle.Solid;

                graph.DrawLine(LineasFactura, 146, 9, 146, 182);
                graph.DrawLine(LineasFactura, 146, 185, 146, 278);

                graph.DrawLine(LineasFactura, 111, 71, 111, 182);


                graph.DrawLine(LineasFactura, 8, 166, 146, 166);
                graph.DrawLine(LineasFactura, 8, 173, 146, 173);

                graph.DrawLine(LineasFactura, 33, 166, 33, 182);
                graph.DrawLine(LineasFactura, 58, 166, 58, 182);
                graph.DrawLine(LineasFactura, 83, 166, 83, 182);


                graph.DrawLine(LineasFactura, 146, 198, 203, 198);
                graph.DrawLine(LineasFactura, 146, 213, 203, 213);
                graph.DrawLine(LineasFactura, 146, 257, 203, 257);


                graph.DrawLine(LineasFactura, 8, 278, 203, 278);

                //factura A
                graph.DrawRoundedRectangle(LineasFactura, 96, 10, 18, 16, 3, 3);

                //Monto facturado
                graph.DrawRoundedRectangle(LineasFactura, 60, 189, 73, 7, 3, 3);

                //Comprobante
                graph.DrawRoundedRectangle(LineasFactura, 10, 205, 43, 7, 3, 3);

                //Vencimiento
                graph.DrawRoundedRectangle(LineasFactura, 56, 205, 43, 7, 3, 3);

                //Importe
                graph.DrawRoundedRectangle(LineasFactura, 102, 205, 42, 7, 3, 3);

                // Codigo de Barras
                graph.DrawRoundedRectangle(LineasFactura, 10, 214, 134, 14, 3, 3);

                //Saldo Total
                graph.DrawRoundedRectangle(LineasFactura, 60, 235, 73, 7, 3, 3);

                //Comprobante II

                graph.DrawRoundedRectangle(LineasFactura, 10, 250, 43, 7, 3, 3);

                //Vencimiento II
                graph.DrawRoundedRectangle(LineasFactura, 56, 250, 43, 7, 3, 3);

                //Importe II
                graph.DrawRoundedRectangle(LineasFactura, 102, 250, 42, 7, 3, 3);

                // Codigo de Barras
                graph.DrawRoundedRectangle(LineasFactura, 10, 259, 134, 14, 3, 3);


                //Iamgenes
                //logo 
                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 11, 64, 10);

                graph.DrawImage(image, 14, 189, 44, 7);

                graph.DrawImage(image, 14, 234, 44, 7);

                //aviso
                /*
            if (ca.ServicioEmail == true)
                if (dFechaFactura > dFechaCambioImagenAviso)
                    pngLogopath = sImageRoute + "avisoFA.png";
                else
                    pngLogopath = sImageRoute + "avisoFA_01.png";
            else
                if (dFechaFactura > dFechaCambioImagenAviso)
                    pngLogopath = sImageRoute + "avisoFA.png";
                else
                    pngLogopath = sImageRoute + "avisoFA_01.png";
                */
                pngLogopath = sImageRoute + ca.ImagenesComprobante[0];

                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 147, 105, 52, 76);

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);


                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(24);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);


                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);

                xp.Y = XUnit.FromMillimeter(32);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(103);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial21B, BrushBlack, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(97);
                xp.Y = XUnit.FromMillimeter(23);
                graphfont.DrawString(sCofFact, fontArial8, BrushBlack, xp);

                //Leyfact
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString(sLeyFact, fontArial12B, BrushBlack, xp);

                //Leyfact
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(20);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                //Cuit
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(158);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(148);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                XRect rectConvenioMultilateral = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(30), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectConvenioMultilateral);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, rectConvenioMultilateral, formatRight);

                //Inicio de Actividades
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                XRect rectInicioActividades = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(34), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectInicioActividades);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, rectInicioActividades, formatRight);

                //Estado de cuenta al
                xp.Y = XUnit.FromMillimeter(47);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontArial8B, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(44), 60, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontArial8B, BrushBlack, rectEstadoCuenta, formatRight);

                //Saldo Anterior
                xp.Y = XUnit.FromMillimeter(54);
                graphfont.DrawString("SALDO ANTERIOR", fontArial8B, BrushBlack, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(51), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontArial8B, BrushBlack, rectSaldoAnterior, formatRight);

                //Conceptos e Importes
                int valory = 80;
                int maxsplit = 0;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampo(sConcepto[0], 65, 75, ' ');
                graphfont.DrawString(sConcepto1[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontArial8, BrushBlack, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);



                //2
                valory = valory + 4;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampo(sConcepto[1], 65, 75, ' ');
                graphfont.DrawString(sConcepto2[0], fontArial8, BrushBlack, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontArial8, BrushBlack, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);


                //3
                valory = valory + 4;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampo(sConcepto[2], 65, 75, ' ');
                graphfont.DrawString(sConcepto3[0], fontArial8, BrushBlack, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontArial8, BrushBlack, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);



                //4
                valory = valory + 4;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampo(sConcepto[3], 65, 75, ' ');
                graphfont.DrawString(sConcepto4[0], fontArial8, BrushBlack, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontArial8, BrushBlack, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);



                //5
                valory = valory + 4;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampo(sConcepto[4], 65, 75, ' ');
                graphfont.DrawString(sConcepto5[0], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 4;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontArial8, BrushBlack, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);


                //6
                valory = valory + 4;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                valory = valory + 4;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                valory = valory + 4;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                valory = valory + 4;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                valory = valory + 4;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                valory = valory + 4;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                valory = valory + 4;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                valory = valory + 4;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                valory = valory + 4;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                valory = valory + 4;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                valory = valory + 4;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(115), XUnit.FromMillimeter(valory), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + 4;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + 4;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + 4;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);


                //Monto Actual
                xp.Y = XUnit.FromMillimeter(59);
                graphfont.DrawString("MONTO ACTUAL", fontArial8B, BrushBlack, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(56), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontArial8B, BrushBlack, rectMontoActual, formatRight);



                //Total a Pagar
                xp.Y = XUnit.FromMillimeter(67);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, xp);
                XRect recTotalaPagar = new XRect(XUnit.FromMillimeter(180), XUnit.FromMillimeter(64), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, recTotalaPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, recTotalaPagar, formatRight);

                //AbonoITem1
                XRect rectAbonoItem1 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(68), 150, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem1);
                graphfont.DrawString(sAbonoItem[0], fontArial8, BrushBlack, rectAbonoItem1, formatLeft);

                //AbonoITem2
                XRect rectAbonoItem2 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(72), 150, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem2);
                graphfont.DrawString(sAbonoItem[1], fontArial8, BrushBlack, rectAbonoItem2, formatLeft);

                //AbonoITem3
                XRect rectAbonoItem3 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(76), 150, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem3);
                graphfont.DrawString(sAbonoItem[2], fontArial8, BrushBlack, rectAbonoItem3, formatLeft);


                //AbonoITem4
                XRect rectAbonoItem4 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(80), 150, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem4);
                graphfont.DrawString(sAbonoItem[3], fontArial8, BrushBlack, rectAbonoItem4, formatLeft);


                //AbonoITem5
                XRect rectAbonoItem5 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(84), 150, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem5);
                graphfont.DrawString(sAbonoItem[4], fontArial8, BrushBlack, rectAbonoItem5, formatLeft);


                //AbonoITem6
                XRect rectAbonoItem6 = new XRect(XUnit.FromMillimeter(148), XUnit.FromMillimeter(88), 150, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectAbonoItem6);
                graphfont.DrawString(sAbonoItem[5], fontArial8, BrushBlack, rectAbonoItem6, formatLeft);



                //Leyenda Subototal       
                XRect rectLeyendaSubtotal = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(168), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("SUBTOTAL", fontArial8B, BrushBlack, rectLeyendaSubtotal, formatCenter);

                XRect rectSubtotal = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(176), 67, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectSubtotal);
                graphfont.DrawString(sValorNetoGravado, fontArial8B, BrushBlack, rectSubtotal, formatCenter);


                //Leyenda Iva Insc      
                XRect rectLeyendaIvaInsc = new XRect(XUnit.FromMillimeter(34), XUnit.FromMillimeter(168), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaIvaInsc);
                graphfont.DrawString(sEtiqIvaInscripto, fontArial8B, BrushBlack, rectLeyendaIvaInsc, formatCenter);

                XRect rectIvaInsc = new XRect(XUnit.FromMillimeter(34), XUnit.FromMillimeter(176), 67, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaInsc);
                graphfont.DrawString(sValorIvaInscripto, fontArial8B, BrushBlack, rectIvaInsc, formatCenter);


                //Leyenda Iva No Insc      
                XRect rectLeyendaIvaNoInsc = new XRect(XUnit.FromMillimeter(59), XUnit.FromMillimeter(168), 67, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaIvaNoInsc);
                graphfont.DrawString("IVA NO INSC", fontArial8B, BrushBlack, rectLeyendaIvaNoInsc, formatCenter);

                XRect rectIvaNoInsc = new XRect(XUnit.FromMillimeter(59), XUnit.FromMillimeter(176), 67, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectIvaNoInsc);
                graphfont.DrawString(sValorIvaNoInscripto, fontArial8B, BrushBlack, rectIvaNoInsc, formatCenter);



                //Leyenda Perc IIBB BsAs     
                XRect rectLeyendaPercIIBB = new XRect(XUnit.FromMillimeter(84), XUnit.FromMillimeter(168), 75, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaPercIIBB);
                graphfont.DrawString("PERC IIBB BSAS", fontArial8B, BrushBlack, rectLeyendaPercIIBB, formatCenter);
                XRect rectPercIIBB = new XRect(XUnit.FromMillimeter(84), XUnit.FromMillimeter(176), 75, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectPercIIBB);
                graphfont.DrawString(sValorIIBBBSAS, fontArial8B, BrushBlack, rectPercIIBB, formatCenter);



                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(168), 89, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontArial8B, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(176), 70, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
                graphfont.DrawString(sEstadoTotalPagar, fontArial8B, BrushBlack, rectTotal, formatRight);


                //Monto Facturado
                XRect rectLeyendaMontoFacturado = new XRect(XUnit.FromMillimeter(63), XUnit.FromMillimeter(191), 89, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaMontoFacturado);
                graphfont.DrawString("MONTO FACTURADO", fontArial8B, BrushBlack, rectLeyendaMontoFacturado, formatLeft);
                XRect rectValorMontoFacturado = new XRect(XUnit.FromMillimeter(106), XUnit.FromMillimeter(191), 61, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectValorMontoFacturado);
                graphfont.DrawString(sEstadoTotalPagar, fontArial8B, BrushBlack, rectValorMontoFacturado, formatRight);

                //comprobante 1
                XRect rectLeyendaComprobante1 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(201), 118, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaComprobante1);
                graphfont.DrawString("COMPROBANTE", fontArial8B, BrushBlack, rectLeyendaComprobante1, formatCenter);
                XRect rectValorComprobante1 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(207), 118, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectValorComprobante1);
                graphfont.DrawString(sFacturaNroMF, fontArial8B, BrushBlack, rectValorComprobante1, formatCenter);

                //Vencimiento 1
                XRect rectVencimiento1 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(201), 119, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectVencimiento1);
                graphfont.DrawString("VENCIMIENTO", fontArial8B, BrushBlack, rectVencimiento1, formatCenter);
                XRect rectValorVencimiento1 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(207), 119, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectValorVencimiento1);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectValorVencimiento1, formatCenter);


                //Importe 1
                XRect rectImportes1 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(201), 115, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImportes1);
                graphfont.DrawString("IMPORTE", fontArial8B, BrushBlack, rectImportes1, formatCenter);
                XRect rectValorImportes1 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(207), 115, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectValorImportes1);
                graphfont.DrawString(sEstadoTotalPagar, fontArial8B, BrushBlack, rectValorImportes1, formatCenter);


                //comprobante 2
                XRect rectLeyendaComprobante2 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(246), 118, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaComprobante2);
                graphfont.DrawString("COMPROBANTE", fontArial8B, BrushBlack, rectLeyendaComprobante2, formatCenter);
                XRect rectValorComprobante2 = new XRect(XUnit.FromMillimeter(11), XUnit.FromMillimeter(252), 118, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectValorComprobante2);
                graphfont.DrawString("----------------", fontArial8B, BrushBlack, rectValorComprobante2, formatCenter);

                //Vencimiento 2
                XRect rectVencimiento2 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(246), 119, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectVencimiento2);
                graphfont.DrawString("VENCIMIENTO", fontArial8B, BrushBlack, rectVencimiento2, formatCenter);
                XRect rectValorVencimiento2 = new XRect(XUnit.FromMillimeter(57), XUnit.FromMillimeter(252), 119, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectValorVencimiento2);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectValorVencimiento2, formatCenter);

                //Importe 2
                XRect rectImportes2 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(246), 115, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImportes2);
                graphfont.DrawString("IMPORTE", fontArial8B, BrushBlack, rectImportes2, formatCenter);
                XRect rectValorImportes2 = new XRect(XUnit.FromMillimeter(103), XUnit.FromMillimeter(252), 115, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectValorImportes2);
                graphfont.DrawString(sValorTotal, fontArial8B, BrushBlack, rectValorImportes2, formatCenter);


                //Monto Saldo Total
                XRect rectSaldoTotal = new XRect(XUnit.FromMillimeter(65), XUnit.FromMillimeter(237), 89, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoTotal);
                graphfont.DrawString("SALDO TOTAL", fontArial8B, BrushBlack, rectSaldoTotal, formatLeft);
                XRect rectValorSaldoTotal = new XRect(XUnit.FromMillimeter(105), XUnit.FromMillimeter(237), 61, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectValorSaldoTotal);
                graphfont.DrawString(sValorTotal, fontArial8B, BrushBlack, rectValorSaldoTotal, formatRight);


                //De su Interes
                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(102);
                graphfont.DrawString("DE SU INTERES", fontArial8B, BrushBlack, xp);



                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(156);
                xp.Y = XUnit.FromMillimeter(190);
                graphfont.DrawString("CENTROS DE ATENCIÓN", fontArial9B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(195);
                graphfont.DrawString("AL CLIENTE", fontArial9B, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(149);
                xp.Y = XUnit.FromMillimeter(202);
                graphfont.DrawString("CENTRO DE ATENCIÓN TELEFÓNICA", fontArial8B, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(150);
                xp.Y = XUnit.FromMillimeter(210);
                graphfont.DrawString("5299 9200", fontArialBlack24, BrushBlack, xp);



                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString("Capital Federal", fontArial9B, BrushBlack, xp);
                xp.Y = XUnit.FromMillimeter(223);
                graphfont.DrawString("Av. Córdoba 3012", fontArial9, BrushBlack, xp);

                xp.Y = XUnit.FromMillimeter(229);
                graphfont.DrawString("Pilar", fontArial9B, BrushBlack, xp);
                xp.Y = XUnit.FromMillimeter(233);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontArial9, BrushBlack, xp);


                if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                {
                    xp.Y = XUnit.FromMillimeter(239);
                    graphfont.DrawString("Moreno", fontArial9B, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(243);
                    graphfont.DrawString("Dr. Int. Assef 106", fontArial9, BrushBlack, xp);
                }
                else
                {
                    xp.Y = XUnit.FromMillimeter(239);
                    graphfont.DrawString("Morón", fontArial9B, BrushBlack, xp);
                    xp.Y = XUnit.FromMillimeter(243);
                    graphfont.DrawString("San Martín 308", fontArial9, BrushBlack, xp);
                }


                xp.Y = XUnit.FromMillimeter(249);
                graphfont.DrawString("Florencio Varela", fontArial9B, BrushBlack, xp);
                xp.Y = XUnit.FromMillimeter(253);
                graphfont.DrawString("San Juan 115", fontArial9, BrushBlack, xp);

                //Fecha Emision
                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(48);
                graphfont.DrawString("FECHA EMISIÓN", fontArial8, BrushBlack, xp);
                XRect recFechaEmision = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(45), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, recFechaEmision);
                graphfont.DrawString(sFechaFactura, fontArial8, BrushBlack, recFechaEmision, formatRight);

                //Periodo
                xp.Y = XUnit.FromMillimeter(54);
                graphfont.DrawString("PERÍODO", fontArial8, BrushBlack, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(51), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, recPeriodo, formatRight);


                //IVA
                xp.Y = XUnit.FromMillimeter(60);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(57), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                graphfont.DrawString(sIVA, fontArial8, BrushBlack, recIVA, formatRight);


                //CUIT
                xp.Y = XUnit.FromMillimeter(66);
                graphfont.DrawString("CUIT Nº", fontArial8, BrushBlack, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(116), XUnit.FromMillimeter(63), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, recCUIT, formatRight);


                //Leyenda Derecha Abajo

                XRect recLeyendaDA1 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(258), 150, 11);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA1);
                graphfont.DrawString("Visítenos en nuestra página web", fontArial9B, BrushBlack, recLeyendaDA1, formatCenter);

                XRect recLeyendaDA2 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(262), 150, 13);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA2);
                graphfont.DrawString("www.antina.com.ar", fontArial15B, BrushBlack, recLeyendaDA2, formatCenter);

                XRect recLeyendaDA3 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(268), 150, 12);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA3);
                graphfont.DrawString("y regístrese para poder consultar", fontArial9B, BrushBlack, recLeyendaDA3, formatCenter);

                XRect recLeyendaDA4 = new XRect(XUnit.FromMillimeter(147), XUnit.FromMillimeter(272), 150, 12);
                //graphfont.DrawRectangle(XPens.YellowGreen, recLeyendaDA4);
                graphfont.DrawString("y pagar su factura on-line", fontArial9B, BrushBlack, recLeyendaDA4, formatCenter);

                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(279), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontArial8, BrushBlack, recValorCAE, formatLeft);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(54), XUnit.FromMillimeter(279), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, BrushBlack, recValorFechaVencimientoCAE, formatLeft);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(279), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontArial6, brush, recValorDefensaConsumidor, formatRight);


                //     XRect recValorDefensaConsumidor147 = new XRect(XUnit.FromMillimeter(194), XUnit.FromMillimeter(278), 10, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor147);
                //    graphfont.DrawString("147", fontArial8, brush, recValorDefensaConsumidor147, formatRight);


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(284), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, brush, recValorAFipInforma1, formatLeft);
                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(287), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, brush, recValorAFipInforma2, formatLeft);


                //total a pagar
                xp.X = XUnit.FromMillimeter(83);
                xp.Y = XUnit.FromMillimeter(31);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, brush, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(83);
                xp.Y = XUnit.FromMillimeter(35);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, brush, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(83);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, brush, xp);

                //Concepto
                xp.X = XUnit.FromMillimeter(13);
                xp.Y = XUnit.FromMillimeter(77);
                graphfont.DrawString("CONCEPTO", fontArial9B, brush, xp);

                //Concepto
                xp.X = XUnit.FromMillimeter(122);
                xp.Y = XUnit.FromMillimeter(77);
                graphfont.DrawString("IMPORTE", fontArial9B, brush, xp);


                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(28), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontArial9B, brush, rect, formatRight);





                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(32), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial9B, brush, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(36), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontArial9B, brush, rectNumeroCliente, formatRight);



                //Nombre y Apellido
                int rangodesde = (sNombreApellido.Length < 72) ? 30 : 39;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 42, ' ');
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(48);
                    graphfont.DrawString(sNombreApellido, fontArial8B, brush, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[0], fontArial8B, brush, xp);
                    xp.Y = XUnit.FromMillimeter(50);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8B, brush, xp);

                }

                //Domicilio 1
           

                rangodesde = (sDomicilio1.Length < 72) ? 30 : 35;
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(sDomicilio1, fontArial8, brush, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(53);
                    graphfont.DrawString(lDomicilio1[0], fontArial8, brush, xp);
                    xp.Y = XUnit.FromMillimeter(56);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, brush, xp);

                }
                //Domicilio 2
                rangodesde = (sDomicilio2.Length < 72) ? 30 : 39;
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 42, ' ');
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(60);
                    graphfont.DrawString(sDomicilio2, fontArial8, brush, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    graphfont.DrawString(lDomicilio2[0], fontArial8, brush, xp);
                    xp.Y = XUnit.FromMillimeter(62);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, brush, xp);

                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                rangodesde = (sDomicilio3.Length < 72) ? 30 : 39;
                List<string> lDomiciolio3 = ParseaCampo(sDomicilio3, rangodesde, 42, ' ');
                graphfont.DrawString(lDomiciolio3[0], fontArial8, brush, xp);
                if (lDomiciolio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomiciolio3[1].Trim(), fontArial8, brush, xp);
                }




                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(120);
                    xp.Y = XUnit.FromMillimeter(20);
                    graphfont.DrawString("ES COPIA", fontArial10, brush, xp);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);



                if ((ca.DebitoAutomatico == false))
                {
                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(35);
                        xp.Y = XUnit.FromMillimeter(217);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(39);
                        xp.Y = XUnit.FromMillimeter(226);
                        graphfont.DrawString(sCodBarra2, fontArial9, brush, xp);
                    }

         
                }
                else
                {
                    if (sTipoComprobante != "3")
                    {
                        xp.X = XUnit.FromMillimeter(25);
                        xp.Y = XUnit.FromMillimeter(221);
                        graphfont.DrawString(ca.LeyendaDebitoAutomatico, fontArial9, brush, xp);
                    }
                }


                if (!string.IsNullOrEmpty(sCodBarra3))
                {
                    xp.X = XUnit.FromMillimeter(35);
                    xp.Y = XUnit.FromMillimeter(261);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode3.Text = sCodBarra3;//value of code to draw on page
                    BarCode3.StartChar = Convert.ToChar("*");
                    BarCode3.EndChar = Convert.ToChar("*");
                    BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                    BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode3.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode3, xp);
                    xp.X = XUnit.FromMillimeter(39);
                    xp.Y = XUnit.FromMillimeter(270);
                    graphfont.DrawString(sCodBarra3, fontArial9, brush, xp);
                }

                graphfont.RotateTransform(90);
                graphfont.DrawString(sCodBarra1, fontArial6, XBrushes.Black, new XPoint(140, -55));
                graphfont.Dispose();
            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal1");

            }

        }




        private void FgetPageFacturaAsal3(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {

                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sPeriodo = ca.Periodo;// "May/15";
                string sIva = ca.CategoriaIva;
                string sCuit = ca.NumCuit;
                string sFecha = ca.FechaFactura;
                string sZona = string.Empty;



                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;


                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");

                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");


                string sCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; // "85425573961020000039690002796915184000000006";
                string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
                string sCodBarraAfip = ca.BarraAfip;
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}


                var @sImageRoute = cs.Imageroute;



                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //  pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];  //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga

                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);

                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);


                graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(119), XUnit.FromMillimeter(160)));

                graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(127), XUnit.FromMillimeter(171)));



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }




                if (ca.TipoComprobante == "1")
                {
                    graphfont.DrawString("Monto total de pagos recibidos.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(20), XUnit.FromMillimeter(150)));
                    graphfont.DrawString("Esta factura no presenta saldo pendiente de pago.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(20), XUnit.FromMillimeter(153)));
                }


                if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
                {


                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);

                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }

                }
                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal3");

            }

        }

        private void FgetPageFacturaAsal3_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {

                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sPeriodo = ca.Periodo;// "May/15";
                string sIva = ca.CategoriaIva;
                string sCuit = ca.NumCuit;
                string sFecha = ca.FechaFactura;
                string sZona = string.Empty;



                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;


                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");

                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");

                string sCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; // "85425573961020000039690002796915184000000006";
                string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
                string sCodBarraAfip = ca.BarraAfip;
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;

                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
                // {
                sOriginal = "ORIGINAL";
                //}


                var @sImageRoute = cs.Imageroute;



                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);
                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;




                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                //  pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];  //getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; //"fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);


                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);
                graph.DrawRectangle(BrushDarkGray, 2, 76, 145, 8);
                graph.DrawRectangle(BrushDarkGray, 2, 155, 145, 7);

                graph.DrawRectangle(BrushLightGray, 2, 176, 145, 14);
                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);

                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFacturaDarkGray, 26, 155, 26, 176);
                graph.DrawLine(LineasFacturaDarkGray, 50, 155, 50, 176);
                graph.DrawLine(LineasFacturaDarkGray, 74, 155, 74, 176);
                graph.DrawLine(LineasFacturaDarkGray, 98, 155, 98, 176);

                graph.DrawLine(LineasFacturaDarkGray, 122, 83, 122, 176);

                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;



                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);


                graph.Dispose();



                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                // xp.X = XUnit.FromMillimeter(164);
                // xp.Y = XUnit.FromMillimeter(27);
                // graphfont.DrawString(sNumerocomprobante, fontArial9, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                //sNombreApellido = "SERGIO DOMINGO VALENTIN FAUSTINO GOMEZ COSTA";
                //sDomicilio1 = "AVENIDA DE LOS ALAMOS Y CIPRESES 4355 (ESQUINA PAMPA)";
                // sDomicilio2 = "CIUDAD DE SAN MIGUEL DEL MONTE KM 7569";
                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                // xp.X = XUnit.FromMillimeter(79);
                // xp.Y = XUnit.FromMillimeter(28);
                // graphfont.DrawString("TOTAL A PAGAR", fontArialB8, BrushBlack, xp);


                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);




                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                 // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);


              //  graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(7), XUnit.FromMillimeter(160)));
              //  graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
              //  graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
              //  graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
              //  graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
              //  graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
               

                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                //graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                //graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                ///graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));


                //NETO GRAVADO   
                //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
                //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
                XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(156), 67, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("NETO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
                XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(159), 67, 9);
                // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

                XRect rectNetoGravado = new XRect(XUnit.FromMillimeter(2), XUnit.FromMillimeter(168), 64, 9);
               // graphfont.DrawRectangle(XPens.Red, rectNetoGravado);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sNetoGravado, fontArial8, BrushBoleta2015_1, rectNetoGravado, formatRight);

                //Impuesto Interno
                //graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(37), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("INTERNO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(38), XUnit.FromMillimeter(161)));
                // graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(171)));
                XRect rectLeyendaImpuestoInterno1 = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno1);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IMPUESTO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno1, formatCenter);
                XRect rectLeyendaImpuestoInterno2 = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectLeyendaImpuestoInterno2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("INTERNO", fontArial8, BrushBlack, rectLeyendaImpuestoInterno2, formatCenter);

                XRect rectImpuestoInterno = new XRect(XUnit.FromMillimeter(26), XUnit.FromMillimeter(168), 64, 9);
                //graphfont.DrawRectangle(XPens.Coral, rectImpuestoInterno);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sImpuestoInterno, fontArial8, BrushBoleta2015_1, rectImpuestoInterno, formatRight);

                //graphfont.DrawString("IVA", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(63), XUnit.FromMillimeter(160)));
                // graphfont.DrawString(sIvaaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(62), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIva = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(157), 66, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaIva);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IVA", fontArial8, BrushBlack, rectLeyendaIva, formatCenter);
                XRect rectIva = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(168), 64, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectIva);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sIvaaPagar, fontArial8, BrushBoleta2015_1, rectIva, formatRight);


                //graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(158)));
                //graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(82), XUnit.FromMillimeter(161)));
                //graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(83), XUnit.FromMillimeter(171)));
                XRect rectLeyendaIIBBBsAs1 = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBBsAs1, formatCenter);
                XRect rectLeyendaIIBBBsAs2 = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectLeyendaIIBBBsAs2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectLeyendaIIBBBsAs2, formatCenter);

                XRect rectIIBBBsAs = new XRect(XUnit.FromMillimeter(74), XUnit.FromMillimeter(168), 64, 9);
                //graphfont.DrawRectangle(XPens.Indigo, rectIIBBBsAs);
                //       graphfont.DrawString(sValorNetoGravado, fontGothamBook8, BrushBlack, rectSubtotal, formatCenter);
                graphfont.DrawString(sPercepcionIIBBBSAS, fontArial8, BrushBoleta2015_1, rectIIBBBsAs, formatRight);


                XRect rectLeyendaIIBBCaba1 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(156), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba1);
                graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectLeyendaIIBBCaba1, formatCenter);
                XRect rectLeyendaIIBBCaba2 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(159), 67, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectLeyendaIIBBCaba2);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectLeyendaIIBBCaba2, formatCenter);

                XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(168), 64, 9);
                //graphfont.DrawRectangle(XPens.HotPink, rectIIBBCaba);
                graphfont.DrawString(sValorIIBBCaba, fontArial8, BrushBoleta2015_1, rectIIBBCaba, formatRight);


                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(157), 66, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectLeyendaTotal);
                //      graphfont.DrawString("SUBTOTAL", fontGothamMedium8, BrushWhite, rectLeyendaSubtotal, formatCenter);
                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, rectLeyendaTotal, formatCenter);

                XRect rectTotal = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(168), 80, 9);
                //graphfont.DrawRectangle(XPens.Gold, rectTotal);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBoleta2015_1, rectTotal, formatRight);
      

                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(282), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                graphfont.DrawString(sValorAfipInforma1, fontArial6, BrushBlack, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(285), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                graphfont.DrawString(sValorAfipInforma2, fontArial6, BrushBlack, recValorAFipInforma2, formatLeft);


              



                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }




                if (ca.TipoComprobante == "1")
                {
                    graphfont.DrawString("Monto total de pagos recibidos.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(20), XUnit.FromMillimeter(150)));
                    graphfont.DrawString("Esta factura no presenta saldo pendiente de pago.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(20), XUnit.FromMillimeter(153)));
                }


                if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
                {


                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(279);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);

                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(187), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }

                }
                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaAsal3");

            }

        }


        private void FgetPageFacturaBsal3(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {


                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sPeriodo = ca.Periodo;// "May/15";
                string sIva = ca.CategoriaIva;
                string sCuit = ca.NumCuit;
                string sFecha = ca.FechaFactura;
                string sZona = string.Empty;



                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;


                string sNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");

                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;
                string sImpuestoInterno = "$ " + ca.ValorImpuestoInterno.Replace(".", ",");
                string sIvaaPagar = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sPercepcionIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");


                string sCae = ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sFechaVencimientoCae = sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; // "85425573961020000039690002796915184000000006";
                string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
                string sCodBarraAfip = ca.BarraAfip;
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                string sOriginal = " ";
                //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
               // {
                    sOriginal = "ORIGINAL";
                //}


                var @sImageRoute = cs.Imageroute;

                XPen LineasRectangulo = new XPen(XColors.LightGray, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);
                XPen LineasFacturaDarkGray = new XPen(XColors.DarkGray, 0.22);
                XPen LineasRectanguloBlack = new XPen(XColors.Black, 0.34);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "logo.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 6, 5, 64, 10);

                // pngLogopath = sImageRoute + "fasal2_a_1.PNG";
                pngLogopath = sImageRoute + ca.ImagenesComprobante[1];// getImageFasal2_A(sFechaFactura);
                XImage image1 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image1, 150, 45, 55, 91);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[2]; //"fasal2_a_2.PNG";
                XImage image2 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image2, 150, 136, 55, 53);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[3];  //"fasal2_a_3.PNG";
                XImage image3 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image3, 150, 191, 55, 36);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[4];  //"fasal2_a_4.PNG";
                XImage image4 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image4, 2, 194, 146, 33);

                pngLogopath = sImageRoute + ca.ImagenesComprobante[5]; // "fasal2_a_5.PNG";
                XImage image5 = XImage.FromFile(pngLogopath);
                graph.DrawImage(image5, 2, 228, 203, 46);

                graph.DrawRectangle(BrushBlack, 78, 4, 24, 19);
                graph.DrawRectangle(BrushBlack, 151, 14, 6, 7);
                graph.DrawRectangle(BrushLightGray, 158, 14, 45, 7);
                // graph.DrawRoundedRectangle(LineasRectangulo, 151, 22, 52, 7, 1, 1);



                graph.DrawRectangle(BrushLightGray, 78, 25, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 31, 65, 5);
                graph.DrawRectangle(BrushLightGray, 78, 37, 65, 5);


                graph.DrawRectangle(BrushDarkGray, 2, 75, 145, 8);

                graph.DrawRectangle(BrushDarkGray, 101, 155, 46, 7);

                graph.DrawRectangle(BrushLightGray, 2, 177, 145, 14);

                // graph.DrawRectangle(BrushWhite, 22, 177, 105, 12);

                graph.DrawRectangle(BrushLightGray, 2, 276, 203, 14);  //footer del cae



                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);

                graph.DrawLine(LineasFactura, 147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


                graph.DrawLine(LineasFactura, 147, 4, 147, 192);
                graph.DrawLine(LineasFactura, 2, 45, 147, 45);
                graph.DrawLine(LineasFacturaDarkGray, 101, 83, 101, 176);
                /*
                graph.DrawLine(LineasFacturaDarkGray, 34, 155, 34, 176);
                graph.DrawLine(LineasFacturaDarkGray, 54, 155, 54, 176);
                graph.DrawLine(LineasFacturaDarkGray, 76, 155, 76, 176);
                */
                graph.DrawLine(LineasFactura, 2, 192, 147, 192);
                LineasFactura.DashStyle = XDashStyle.Dash;
                graph.DrawLine(LineasFactura, 2, 193, 147, 193);
                graph.DrawLine(LineasFactura, 149, 120, 203, 120);
                graph.DrawLine(LineasFactura, 149, 188, 203, 188);
                LineasFactura.DashStyle = XDashStyle.Solid;
                graph.DrawRoundedRectangle(LineasRectanguloBlack, 2, 4, 203, 287, 3, 3);
                graph.Dispose();

                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XPoint xp = new XPoint();
                xp.X = XUnit.FromMillimeter(87);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString(sTipoFact, fontArialBlack24, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(82);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString(sCofFact, fontArial8, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(11);
                graphfont.DrawString(sLeyFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(152);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sTipoFact, fontArial12B, BrushWhite, xp);

                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(19);
                graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("CUIT", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(159);
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CONV. MULTILATERAL", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(184);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(151);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(186);
                xp.Y = XUnit.FromMillimeter(38);
                graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);



                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("Avenida Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(25);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);


                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(29);
                graphfont.DrawString("T. 011 5299-9200", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("www.antina.com.ar / atencionalcliente@antina.com.ar", fontArial8, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(37);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

                int valory = 50;
                int maxsplit = 0;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("SR/SRA ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                int rangodesde = (sNombreApellido.Length < 45) ? 25 : 29;
                List<string> lNombreApellido = ParseaCampo(sNombreApellido, rangodesde, 32, ' ');
                graphfont.DrawString(lNombreApellido[0], fontArial8, BrushBlack, xp);
                if (lNombreApellido.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontArial8, BrushBlack, xp);
                }


                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(6);
                xp.Y = XUnit.FromMillimeter(valory);
                graphfont.DrawString("DOMICILIO ", fontArial8B, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio1 = ParseaCampo(sDomicilio1, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio1[0], fontArial8, BrushBlack, xp);
                if (lDomicilio1.Count > 1)
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontArial8, BrushBlack, xp);
                }

                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);
                List<string> lDomicilio2 = ParseaCampo(sDomicilio2, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio2[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio2.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    maxsplit++;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontArial8, BrushBlack, xp);
                }



                valory = valory + 5;
                xp.X = XUnit.FromMillimeter(22);
                xp.Y = XUnit.FromMillimeter(valory);



                List<string> lDomicilio3 = ParseaCampo(sDomicilio3, rangodesde, 32, ' ');
                graphfont.DrawString(lDomicilio3[0], fontArial8, BrushBlack, xp);
                if ((lDomicilio3.Count > 1) & (maxsplit < 2))
                {
                    valory = valory + 5;
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(valory);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontArial8, BrushBlack, xp);
                }


                xp.X = XUnit.FromMillimeter(10);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("CONCEPTO", fontArial10, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(117);
                xp.Y = XUnit.FromMillimeter(82);
                graphfont.DrawString("IMPORTE", fontArial10, BrushBlack, xp);



                XRect rectTotalPagarLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagarLabel);
                graphfont.DrawString("TOTAL A PAGAR", fontArial8B, BrushBlack, rectTotalPagarLabel, formatLeft);
                XRect rectTotalPagar = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(26), 80, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectTotalPagar);
                graphfont.DrawString(sTotalaPagar, fontArial8B, BrushBlack, rectTotalPagar, formatRight);

                XRect rectFechaVencimientoLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(32), 80, 9);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimientoLabel);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontArial8B, BrushBlack, rectFechaVencimientoLabel, formatLeft);
                XRect rectechaVencimiento = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(32), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontArial8B, BrushBlack, rectechaVencimiento, formatRight);


                XRect rectNumeroClienteLabel = new XRect(XUnit.FromMillimeter(79), XUnit.FromMillimeter(38), 80, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroClienteLabel);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontArial8B, BrushBlack, rectNumeroClienteLabel, formatLeft);
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(114), XUnit.FromMillimeter(38), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectNumeroCliente);
                graphfont.DrawString(sNumeroCliente, fontArial8B, BrushBlack, rectNumeroCliente, formatRight);


                graphfont.DrawString("FECHA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(50)));
                graphfont.DrawString("PERÍODO", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(55)));
                graphfont.DrawString("IVA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(60)));
                graphfont.DrawString("CUIT Nº", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(65)));
                graphfont.DrawString("ZONA", fontArial8B, BrushBlack, new XPoint(XUnit.FromMillimeter(79), XUnit.FromMillimeter(70)));


                graphfont.DrawString(sFecha, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(50)));
                graphfont.DrawString(sPeriodo, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(55)));
                graphfont.DrawString(sIva, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(60)));
                graphfont.DrawString(sCuit, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(65)));
                graphfont.DrawString(sZona, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(100), XUnit.FromMillimeter(70)));






                //Conceptos e Importes
                //1
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(85), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                graphfont.DrawString(sConcepto[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(85), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte1);
                graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);

                //2
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(89), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto2);
                graphfont.DrawString(sConcepto[1], fontArial8, BrushBlack, rectConcepto2, formatLeft);

                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(89), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);

                //3
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(93), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto3);
                graphfont.DrawString(sConcepto[2], fontArial8, BrushBlack, rectConcepto3, formatLeft);

                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(93), 80, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);

                //4
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(97), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto4);
                graphfont.DrawString(sConcepto[3], fontArial8, BrushBlack, rectConcepto4, formatLeft);

                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(97), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);

                //5
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(101), 268, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto5);
                graphfont.DrawString(sConcepto[4], fontArial8, BrushBlack, rectConcepto5, formatLeft);
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(101), 80, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);

                //6
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(105), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(105), 80, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


                //7
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(109), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(109), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

                //8
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(113), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(113), 80, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


                //9
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(117), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(117), 80, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


                //10
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(121), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(121), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

                //11
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(125), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(125), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

                //12
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(129), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(129), 80, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

                //13
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(133), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(133), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


                //14
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(137), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(137), 80, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


                //15
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(141), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(141), 80, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

                //16
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(145), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(145), 80, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

                graphfont.DrawString("TOTAL", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(120), XUnit.FromMillimeter(160)));

                XRect rectTotalaPagar = new XRect(XUnit.FromMillimeter(110), XUnit.FromMillimeter(171), 80, 9);
                graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, rectTotalaPagar, formatRight);
                // graphfont.DrawString(sTotalaPagar, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(122), XUnit.FromMillimeter(171)));

                graphfont.DrawString("CAE:", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(8), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(15), XUnit.FromMillimeter(280)));
                graphfont.DrawString("Fecha de Vencimiento: ", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(40), XUnit.FromMillimeter(280)));
                graphfont.DrawString(sFechaVencimientoCae, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(70), XUnit.FromMillimeter(280)));


                if (ca.EsCopia == true)
                {
                    xp.X = XUnit.FromMillimeter(115);
                    xp.Y = XUnit.FromMillimeter(16);
                    graphfont.DrawString("ES COPIA", fontArial10, BrushBlack, xp);
                }





                if (ca.TipoComprobante == "1")
                {
                    graphfont.DrawString("Monto total de pagos recibidos.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(20), XUnit.FromMillimeter(171)));
                    graphfont.DrawString("Esta factura no presenta saldo pendiente de pago.", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(20), XUnit.FromMillimeter(174)));
                }

                if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
                {

                    xp.X = XUnit.FromMillimeter(185);
                    xp.Y = XUnit.FromMillimeter(280);
                    graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);

                    //sCodBarraAfip
                    if (!string.IsNullOrEmpty(sCodBarraAfip))
                    {
                        xp.X = XUnit.FromMillimeter(32);
                        xp.Y = XUnit.FromMillimeter(180);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                        BarCodeAfip.StartChar = Convert.ToChar("*");
                        BarCodeAfip.EndChar = Convert.ToChar("*");
                        BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCodeAfip.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCodeAfip, xp);
                        //   xp.X = XUnit.FromMillimeter(45);
                        //  xp.Y = XUnit.FromMillimeter(194);
                        //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                        XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(188), 264, 9);
                        //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                        graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                    }
                }
                graphfont.Dispose();

            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal3");

            }

        }


        private string FormateoFechaCae(string fechaCae)
        {
            string retvalue;
            retvalue = fechaCae.Substring(6, 2) + "/" + fechaCae.Substring(4, 2) + "/" + fechaCae.Substring(0, 4);


            return retvalue;
        }

        private string sGuidName()
        {
            string retvalue;
            Guid g = Guid.NewGuid();
            string GuidString = System.Convert.ToString(g);
            GuidString = GuidString.Replace("-", string.Empty);
            GuidString = GuidString.Replace("=", string.Empty);
            GuidString = GuidString.Replace("+", string.Empty);
            GuidString = GuidString.Replace("\\", string.Empty);
            retvalue = GuidString + ".pdf";
            return retvalue;
        }


        private List<string> ParseaCampo(string Campo, int rangodesde, int rangohasta, char separador)
        {
            List<string> retvalue = new List<string>();
            if (Campo.Length <= rangohasta)
            {
                retvalue.Add(Campo);
            }
            else
            {
                string subCampo = Campo.Substring(rangodesde, (rangohasta - rangodesde));

               
                if (subCampo.IndexOf(separador) == -1)
                {
                    retvalue.Add(Campo.Substring(0, rangodesde));
                    if (Campo.Length>rangohasta*2)
                        retvalue.Add(Campo.Substring(rangodesde, (rangohasta)));//(Campo.Length - (rangodesde))
                    else
                        retvalue.Add(Campo.Substring(rangodesde, (Campo.Length - (rangodesde))));//
                }
                else
                {

                    var indexs = subCampo.IndexesOf(" ");
                  //  var indexs = subCampo.MultipleIndex(separador);
                    int poscorte = indexs.Max();

                    //int poscorte = (subCampo.IndexOf(separador));
                    retvalue.Add(Campo.Substring(0, rangodesde + poscorte));
                    string campo2 = Campo.Substring(rangodesde + poscorte);
                    if (campo2.Length > rangohasta)
                        campo2 = campo2.Substring(0, rangohasta);
                    retvalue.Add(campo2);
                }


            }

            return retvalue;
        }



        //Intercompany
        private void FgetPageFacturaBsal4(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            PdfPage pdfPage = pdf.AddPage();
            XPen LineasFactura = new XPen(XColors.Black, 0.22);

            //Alineaciones
            XStringFormat formatRight = new XStringFormat();
            formatRight.Alignment = XStringAlignment.Far;

            XStringFormat formatLeft = new XStringFormat();
            formatLeft.Alignment = XStringAlignment.Near;

            XStringFormat formatCenter = new XStringFormat();
            formatCenter.Alignment = XStringAlignment.Center;

            string sNombreEmpresa = ca.NombreEmpresa;
            string sTipoFact = ca.TipoFact;
            string sCofFact = ca.CodFact;//CODIGO 01
            string sLeyFact = ca.LeyFact;
            string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
            string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
            string sDomicilio1 = ca.DomicilioUno;
            string sDomicilio2 = ca.DomicilioDos;
            string sDomicilio3 = ca.DomicilioTres;
            string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
            string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
            string sNumeroCliente = ca.NumeroCliente; // "557396";
            string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
            string sNumConv = ca.NumConv;            //"901 221621 2";
            string sFechaInicio = ca.FechaInicio;  // "05/1999";
            string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
            string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
            string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
            string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFechaFactura = "FECHA: " + ca.FechaFactura;  //"04/05/2015";
            string sPeriodo = ca.Periodo;// "May/15";
            string sIVA = ca.CategoriaIva;
            string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
            string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
            string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
            string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");


            string[] sConcepto = new string[16];
            string[] sImporte = new string[16];
            string[] sPrecioUnitario = new string[16];

            sConcepto[0] = ca.Concepto_01;
            sConcepto[1] = ca.Concepto_02;
            sConcepto[2] = ca.Concepto_03;
            sConcepto[3] = ca.Concepto_04;
            sConcepto[4] = ca.Concepto_05;
            sConcepto[5] = ca.Concepto_06;
            sConcepto[6] = ca.Concepto_07;
            sConcepto[7] = ca.Concepto_08;
            sConcepto[8] = ca.Concepto_09;
            sConcepto[9] = ca.Concepto_10;
            sConcepto[10] = ca.Concepto_11;
            sConcepto[11] = ca.Concepto_12;
            sConcepto[12] = ca.Concepto_13;
            sConcepto[13] = ca.Concepto_14;
            sConcepto[14] = ca.Concepto_15;
            sConcepto[15] = ca.Concepto_16;

            sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
            sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
            sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
            sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
            sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
            sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
            sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
            sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
            sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
            sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
            sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
            sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
            sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
            sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
            sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
            sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";



            sPrecioUnitario[0] = (!string.IsNullOrEmpty(ca.PrecioUnitario_01)) ? "$ " + ca.PrecioUnitario_01 : " ";
            sPrecioUnitario[1] = (!string.IsNullOrEmpty(ca.PrecioUnitario_02)) ? "$ " + ca.PrecioUnitario_02 : " ";
            sPrecioUnitario[2] = (!string.IsNullOrEmpty(ca.PrecioUnitario_03)) ? "$ " + ca.PrecioUnitario_03 : " ";
            sPrecioUnitario[3] = (!string.IsNullOrEmpty(ca.PrecioUnitario_04)) ? "$ " + ca.PrecioUnitario_04 : " ";
            sPrecioUnitario[4] = (!string.IsNullOrEmpty(ca.PrecioUnitario_05)) ? "$ " + ca.PrecioUnitario_05 : " ";
            sPrecioUnitario[5] = (!string.IsNullOrEmpty(ca.PrecioUnitario_06)) ? "$ " + ca.PrecioUnitario_06 : " ";
            sPrecioUnitario[6] = (!string.IsNullOrEmpty(ca.PrecioUnitario_07)) ? "$ " + ca.PrecioUnitario_07 : " ";
            sPrecioUnitario[7] = (!string.IsNullOrEmpty(ca.PrecioUnitario_08)) ? "$ " + ca.PrecioUnitario_08 : " ";
            sPrecioUnitario[8] = (!string.IsNullOrEmpty(ca.PrecioUnitario_09)) ? "$ " + ca.PrecioUnitario_09 : " ";
            sPrecioUnitario[9] = (!string.IsNullOrEmpty(ca.PrecioUnitario_10)) ? "$ " + ca.PrecioUnitario_10 : " ";
            sPrecioUnitario[10] = (!string.IsNullOrEmpty(ca.PrecioUnitario_11)) ? "$ " + ca.PrecioUnitario_11 : " ";
            sPrecioUnitario[11] = (!string.IsNullOrEmpty(ca.PrecioUnitario_12)) ? "$ " + ca.PrecioUnitario_12 : " ";
            sPrecioUnitario[12] = (!string.IsNullOrEmpty(ca.PrecioUnitario_13)) ? "$ " + ca.PrecioUnitario_13 : " ";
            sPrecioUnitario[13] = (!string.IsNullOrEmpty(ca.PrecioUnitario_14)) ? "$ " + ca.PrecioUnitario_14 : " ";
            sPrecioUnitario[14] = (!string.IsNullOrEmpty(ca.PrecioUnitario_15)) ? "$ " + ca.PrecioUnitario_15 : " ";
            sPrecioUnitario[15] = (!string.IsNullOrEmpty(ca.PrecioUnitario_16)) ? "$ " + ca.PrecioUnitario_16 : " ";

            string[] sInfoAdicional = new string[3];

            sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.Importe_16 : " ";
            sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.Importe_16 : " ";
            sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.Importe_16 : " ";


            string[] sAbonoItem = new string[6];
            sAbonoItem[0] = " ";// ca.AbonoItem_01;
            sAbonoItem[1] = " ";//ca.AbonoItem_02;
            sAbonoItem[2] = " ";//ca.AbonoItem_03;
            sAbonoItem[3] = " ";//ca.AbonoItem_04;
            sAbonoItem[4] = " ";//ca.AbonoItem_05;
            sAbonoItem[5] = " ";//ca.AbonoItem_06;

            // string sEtiqIvaInscripto = "IVA INSC 21%";

            string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
            string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

            string sValorCae = "CAE: " + ca.NumCae;
            string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
            string sValorFechaVencimientoCae = "Fecha de Vencimiento: " + sfechaCae;

            string valorPie = ca.PieFactura;
            string sValorAfipInforma1 = " ";
            string sValorAfipInforma2 = " ";

            if (!string.IsNullOrEmpty(ca.PieFactura))
            {
                if (ca.PieFactura.Length > 140)
                {
                    sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                    sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                }
                else
                    sValorAfipInforma1 = ca.PieFactura;
            }
            /*
            string sCodBarra1 = ca.CodBarraCorreo;
            string sCodBarra2 = ca.CodBarra1 = "85425573961020000039690002796915184000000006";
            string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
             * */
            string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
            string pngLogopath;

            string sCodBarraAfip = ca.BarraAfip;

            string sOriginal = " ";
            //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
            // {
            sOriginal = "ORIGINAL";
            //}
            DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
            var @sImageRoute = cs.Imageroute;
            // sImageRoute=sImageRoute.Replace("\\", @"\");

            XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);



            graph.DrawRectangle(BrushLightGray, 8, 92, 194, 5);

            graph.DrawRoundedRectangle(LineasFactura, 8, 9, 97, 43, 3, 3);
            graph.DrawRoundedRectangle(LineasFactura, 105, 9, 97, 43, 3, 3);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 53, 194, 25);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 79, 194, 12);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 172);     //cuerpo factura
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 265, 194, 8);      //Rectangulo Total
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 274, 194, 10);    //rectangulo CAE
            //  graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 248, 194, 19);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 93, 9, 24, 20);




            graph.DrawRectangle(BrushLightGray, 8, 92, 194, 5);


            //  graph.DrawRectangle(BrushLightGray, 8, 258, 194, 8);

            graph.DrawLine(LineasFactura, 8, 92, 202, 92);
            graph.DrawLine(LineasFactura, 8, 92, 8, 102);
            graph.DrawLine(LineasFactura, 202, 92, 202, 102);

            // graph.DrawLine(LineasFactura, 98, 20, 112, 20);
            //graph.DrawLine(LineasFactura, 8, 86, 202, 86);
            graph.DrawLine(LineasFactura, 8, 85, 202, 85);
            graph.DrawLine(LineasFactura, 8, 97, 202, 97);
            graph.DrawLine(LineasFactura, 128, 92, 128, 264);
            graph.DrawLine(LineasFactura, 161, 92, 161, 264);
            //////////////////   graph.DrawLine(LineasFactura, 8, 225, 202, 225);

            /*  graph.DrawLine(LineasFactura, 40, 217, 40, 235);


            graph.DrawLine(LineasFactura, 69, 217, 69, 235);
             graph.DrawLine(LineasFactura, 97, 217, 97, 235);
             graph.DrawLine(LineasFactura, 128, 217, 128, 235);
             * */
            graph.DrawLine(LineasFactura, 161, 265, 161, 273);   //LineasFactura vertical total


            // graph.DrawRectangle(BrushLightGray, 8, 216, 194, 9);


            graph.DrawRectangle(BrushBlack, 143, 18, 6, 7);
            graph.DrawRectangle(BrushLightGray, 151, 18, 45, 7);


            pngLogopath = sImageRoute + "logo.png";
            XImage image = XImage.FromFile(pngLogopath);
            graph.DrawImage(image, 10, 12, 64, 10);



            //    graph.DrawLine(LineasFactura,147, 40, 205, 40);//linea nueva separa incio actividades de formas y medio de recarga


            // XRect rectNG21 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(228), 29, 9);


            graph.Dispose();

            XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);


            XBrush brush = XBrushes.Black;
            XPoint xp = new XPoint();


            if (ca.EsCopia == true)
            {
                xp.X = XUnit.FromMillimeter(120);
                xp.Y = XUnit.FromMillimeter(20);
                graphfont.DrawString("ES COPIA", fontArial10, brush, xp);
            }


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(28);
            graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(32);
            graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(36);
            graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("Tel: 011 5299-9200", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("www.antina.com.ar", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(102);
            xp.Y = XUnit.FromMillimeter(18);
            graphfont.DrawString(sTipoFact, fontArial21B, BrushBlack, xp);




            xp.X = XUnit.FromMillimeter(96);
            xp.Y = XUnit.FromMillimeter(25);
            graphfont.DrawString(sCofFact, fontArial10, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(17);
            graphfont.DrawString(sLeyFact, fontArial12B, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(144);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sTipoFact, fontArial12, BrushWhite, xp);

            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(29);
            graphfont.DrawString(sFechaFactura, fontArial10, BrushBlack, xp);


            //Cuit
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("CUIT:", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

            //Convenio Multilateral
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("CONV. MULTILATERAL: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(177);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

            //Inicio de Actividades
            xp.X = XUnit.FromMillimeter(143);//147
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("INICIO DE ACTIVIDADES: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(179);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString("Señores: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString(sNombreApellido, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString("Domicilio: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString(sDomicilio1 + " " + sDomicilio2, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(ca.TipoComporbanteSalida4, fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(sCuit, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(83);
            graphfont.DrawString("I.V.A.: " + sIVA, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(89);
            graphfont.DrawString("Condiciones de Venta: " + " ", fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(58);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("DESCRIPCIÓN", fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(132);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("PRECIO UNITARIO", fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(177);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("TOTAL", fontArial8, brush, xp);

            /*
            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(222);
            graphfont.DrawString("NETO GRAVADO 21%", fontArial7, brush, xp);
            xp.X = XUnit.FromMillimeter(23);
            xp.Y = XUnit.FromMillimeter(230);
            //     graphfont.DrawString("$ 100,00", fontArial7, brush, xp);

            xp.X = XUnit.FromMillimeter(41);
            xp.Y = XUnit.FromMillimeter(222);
            graphfont.DrawString("NETO GRAVADO 10,5%", fontArial7, brush, xp);
            xp.X = XUnit.FromMillimeter(55);
            xp.Y = XUnit.FromMillimeter(230);
            //    graphfont.DrawString("$ 100,00", fontArial7, brush, xp);


            xp.X = XUnit.FromMillimeter(75);
            xp.Y = XUnit.FromMillimeter(222);
            graphfont.DrawString("NO GRAVADO", fontArial7, brush, xp);
            xp.X = XUnit.FromMillimeter(82);
            xp.Y = XUnit.FromMillimeter(230);
            //   graphfont.DrawString("$ 300,00", fontArial7, brush, xp);

            xp.X = XUnit.FromMillimeter(108);
            xp.Y = XUnit.FromMillimeter(222);
            graphfont.DrawString("IVA 21%", fontArial7, brush, xp);
            xp.X = XUnit.FromMillimeter(116);
            xp.Y = XUnit.FromMillimeter(230);
            //   graphfont.DrawString("$ 30,00", fontArial7, brush, xp);

            xp.X = XUnit.FromMillimeter(138);
            xp.Y = XUnit.FromMillimeter(222);
            graphfont.DrawString("IVA 10,5%", fontArial7, brush, xp);
            xp.X = XUnit.FromMillimeter(150);
            xp.Y = XUnit.FromMillimeter(230);
            //     graphfont.DrawString("$ 0,00", fontArial7, brush, xp);
            */
            xp.X = XUnit.FromMillimeter(139);
            xp.Y = XUnit.FromMillimeter(270);
            graphfont.DrawString("TOTAL", fontArial9B, brush, xp);

            // graphfont.DrawString(sValorTotal, fontArial7, brush, xp);




            /*
            XRect rectNG21 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(228), 92, 6);
            //graphfont.DrawRectangle(XPens.Aqua, rectNG21);
            graphfont.DrawString(sValorNetoGravado, fontArial7, BrushBlack, rectNG21, formatCenter);


            XRect rectNG10_5 = new XRect(XUnit.FromMillimeter(41), XUnit.FromMillimeter(228), 86, 6);
            //graphfont.DrawRectangle(XPens.Brown, rectNG10_5);
            graphfont.DrawString("$ 0,00", fontArial7, BrushBlack, rectNG10_5, formatCenter);


            XRect rectNoGravado = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(228), 80, 6);
            // graphfont.DrawRectangle(XPens.Cyan, rectNoGravado);
            graphfont.DrawString("$ 0,00", fontArial7, BrushBlack, rectNoGravado, formatCenter);

            XRect rectIva21 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(228), 90, 6);
            // graphfont.DrawRectangle(XPens.ForestGreen, rectIva21);
            graphfont.DrawString(sValorIvaInscripto, fontArial7, BrushBlack, rectIva21, formatCenter);


            XRect rectIva10_5 = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(228), 91, 6);
            // graphfont.DrawRectangle(XPens.HotPink, rectIva10_5);
            graphfont.DrawString(sValorIvanoInscripto, fontArial7, BrushBlack, rectIva10_5, formatCenter);
            */
            XRect rectTotal = new XRect(XUnit.FromMillimeter(160), XUnit.FromMillimeter(268), 119, 6);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
            graphfont.DrawString(sValorTotal, fontArial8, BrushBlack, rectTotal, formatCenter);



            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorCae, fontArial7, brush, xp);

            xp.X = XUnit.FromMillimeter(43);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorFechaVencimientoCae, fontArial7, brush, xp);



            //Conceptos e Importes
            int valory = 98;
            int maxsplit = 0;
            //Conceptos e Importes
            //1  
            XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
            List<string> sConcepto1 = ParseaCampo(sConcepto[0], 65, 75, ' ');
            graphfont.DrawString(sConcepto1[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
            if (sConcepto1.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto1[1].Trim(), fontArial8, BrushBlack, rectConcepto1bis, formatLeft);
            }

            XRect rectPrecioUnitario1 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[0], fontArial8, BrushBlack, rectPrecioUnitario1, formatRight);

            XRect rectImporte1 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);



            //2
            valory = valory + 4;
            XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto2 = ParseaCampo(sConcepto[1], 65, 75, ' ');
            graphfont.DrawString(sConcepto2[0], fontArial8, BrushBlack, rectConcepto2, formatLeft);
            if (sConcepto2.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto2[1].Trim(), fontArial8, BrushBlack, rectConcepto2bis, formatLeft);
            }

            XRect rectPrecioUnitario2 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[1], fontArial8, BrushBlack, rectPrecioUnitario2, formatRight);

            XRect rectImporte2 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
            graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);


            //3
            valory = valory + 4;
            XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto3 = ParseaCampo(sConcepto[2], 65, 75, ' ');
            graphfont.DrawString(sConcepto3[0], fontArial8, BrushBlack, rectConcepto3, formatLeft);
            if (sConcepto3.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto3[1].Trim(), fontArial8, BrushBlack, rectConcepto3bis, formatLeft);
            }

            XRect rectPrecioUnitario3 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[2], fontArial8, BrushBlack, rectPrecioUnitario3, formatRight);


            XRect rectImporte3 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
            graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);



            //4
            valory = valory + 4;
            XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto4 = ParseaCampo(sConcepto[3], 65, 75, ' ');
            graphfont.DrawString(sConcepto4[0], fontArial8, BrushBlack, rectConcepto4, formatLeft);
            if ((sConcepto4.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto4[2].Trim(), fontArial8, BrushBlack, rectConcepto4bis, formatLeft);
            }

            XRect rectPrecioUnitario4 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[3], fontArial8, BrushBlack, rectPrecioUnitario4, formatRight);


            XRect rectImporte4 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
            graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);



            //5
            valory = valory + 4;
            XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto5 = ParseaCampo(sConcepto[4], 65, 75, ' ');
            graphfont.DrawString(sConcepto5[0], fontArial8, BrushBlack, rectConcepto5, formatLeft);
            if ((sConcepto5.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto5[0].Trim(), fontArial8, BrushBlack, rectConcepto5bis, formatLeft);
            }

            XRect rectPrecioUnitario5 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[4], fontArial8, BrushBlack, rectPrecioUnitario5, formatRight);

            XRect rectImporte5 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
            graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);


            //6
            valory = valory + 4;
            XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
            graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);

            XRect rectPrecioUnitario6 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[5], fontArial8, BrushBlack, rectPrecioUnitario6, formatRight);


            XRect rectImporte6 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
            graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


            //7
            valory = valory + 4;
            XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
            graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);

            XRect rectPrecioUnitario7 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[6], fontArial8, BrushBlack, rectPrecioUnitario7, formatRight);

            XRect rectImporte7 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
            graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

            //8
            valory = valory + 4;
            XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
            graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);

            XRect rectPrecioUnitario8 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[7], fontArial8, BrushBlack, rectPrecioUnitario8, formatRight);

            XRect rectImporte8 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
            graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


            //9
            valory = valory + 4;
            XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
            graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);

            XRect rectPrecioUnitario9 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[8], fontArial8, BrushBlack, rectPrecioUnitario9, formatRight);

            XRect rectImporte9 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
            graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


            //10
            valory = valory + 4;
            XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
            graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);

            XRect rectPrecioUnitario10 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[9], fontArial8, BrushBlack, rectPrecioUnitario10, formatRight);
            XRect rectImporte10 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
            graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

            //11
            valory = valory + 4;
            XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
            graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);

            XRect rectPrecioUnitario11 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[10], fontArial8, BrushBlack, rectPrecioUnitario11, formatRight);

            XRect rectImporte11 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
            graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

            //12
            valory = valory + 4;
            XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
            graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);

            XRect rectPrecioUnitario12 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[11], fontArial8, BrushBlack, rectPrecioUnitario12, formatRight);

            XRect rectImporte12 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
            graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

            //13
            valory = valory + 4;
            XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
            graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);

            XRect rectPrecioUnitario13 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[12], fontArial8, BrushBlack, rectPrecioUnitario13, formatRight);

            XRect rectImporte13 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
            graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


            //14
            valory = valory + 4;
            XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
            graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);

            XRect rectPrecioUnitario14 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[13], fontArial8, BrushBlack, rectPrecioUnitario14, formatRight);

            XRect rectImporte14 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
            graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


            //15
            valory = valory + 4;
            XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
            graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);

            XRect rectPrecioUnitario15 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[14], fontArial8, BrushBlack, rectPrecioUnitario15, formatRight);

            XRect rectImporte15 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
            graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

            //16
            valory = valory + 4;
            XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
            graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);

            XRect rectPrecioUnitario16 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[15], fontArial8, BrushBlack, rectPrecioUnitario16, formatRight);

            XRect rectImporte16 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
            graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

            //info adicional 1
            valory = valory + 4;
            XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
            graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

            //info adicional 2
            valory = valory + 4;
            XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
            graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

            //info adicional 3
            valory = valory + 4;
            XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
            graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

            /*
            if (!string.IsNullOrEmpty(sCodBarra2))
            {
                xp.X = XUnit.FromMillimeter(62);
                xp.Y = XUnit.FromMillimeter(255);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode2.Text = sCodBarra2;//value of code to draw on page
                BarCode2.StartChar = Convert.ToChar("*");
                BarCode2.EndChar = Convert.ToChar("*");
                BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                BarCode2.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode2, xp);
                xp.X = XUnit.FromMillimeter(66);
                xp.Y = XUnit.FromMillimeter(265);
                graphfont.DrawString(sCodBarra2, fontArial9, brush, xp);
            }
            */


          //  sValorAfipInforma1 = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod";
          //  sValorAfipInforma2 = "Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod";
            XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(279), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
            graphfont.DrawString(sValorAfipInforma1, fontArial6, brush, recValorAFipInforma1, formatLeft);
            XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(281), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
            graphfont.DrawString(sValorAfipInforma2, fontArial6, brush, recValorAFipInforma2, formatLeft);

            if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
            {


                xp.X = XUnit.FromMillimeter(185);
                xp.Y = XUnit.FromMillimeter(290);
                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);


                //  sCodBarraAfip = "3069642889806003065338293542656201508249";
                //sCodBarraAfip
                if (!string.IsNullOrEmpty(sCodBarraAfip.Trim()))
                {
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(245);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(253), 263, 9);
                    //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }
            }

            graphfont.Dispose();
        }


        //Intercompany
        private void FgetPageFacturaAsal4(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            PdfPage pdfPage = pdf.AddPage();

            XPen LineasFactura = new XPen(XColors.Black, 0.22);

            //Alineaciones
            XStringFormat formatRight = new XStringFormat();
            formatRight.Alignment = XStringAlignment.Far;

            XStringFormat formatLeft = new XStringFormat();
            formatLeft.Alignment = XStringAlignment.Near;

            XStringFormat formatCenter = new XStringFormat();
            formatCenter.Alignment = XStringAlignment.Center;


            string sNombreEmpresa = ca.NombreEmpresa;
            string sTipoFact = ca.TipoFact;
            string sCofFact = ca.CodFact;//CODIGO 01
            string sLeyFact = ca.LeyFact;
            string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
            string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
            string sDomicilio1 = ca.DomicilioUno;
            string sDomicilio2 = ca.DomicilioDos;
            string sDomicilio3 = ca.DomicilioTres;
            string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
            string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
            string sNumeroCliente = ca.NumeroCliente; // "557396";
            string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
            string sNumConv = ca.NumConv;            //"901 221621 2";
            string sFechaInicio = ca.FechaInicio;  // "05/1999";
            string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
            string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
            string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
            string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFechaFactura = "FECHA: " + ca.FechaFactura;  //"04/05/2015";
            string sPeriodo = ca.Periodo;// "May/15";
            string sIVA = ca.CategoriaIva;
            string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
            string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
            string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
            string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");


            string[] sConcepto = new string[16];
            string[] sImporte = new string[16];
            string[] sPrecioUnitario = new string[16];

            sConcepto[0] = ca.Concepto_01;
            sConcepto[1] = ca.Concepto_02;
            sConcepto[2] = ca.Concepto_03;
            sConcepto[3] = ca.Concepto_04;
            sConcepto[4] = ca.Concepto_05;
            sConcepto[5] = ca.Concepto_06;
            sConcepto[6] = ca.Concepto_07;
            sConcepto[7] = ca.Concepto_08;
            sConcepto[8] = ca.Concepto_09;
            sConcepto[9] = ca.Concepto_10;
            sConcepto[10] = ca.Concepto_11;
            sConcepto[11] = ca.Concepto_12;
            sConcepto[12] = ca.Concepto_13;
            sConcepto[13] = ca.Concepto_14;
            sConcepto[14] = ca.Concepto_15;
            sConcepto[15] = ca.Concepto_16;

            sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
            sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
            sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
            sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
            sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
            sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
            sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
            sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
            sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
            sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
            sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
            sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
            sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
            sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
            sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
            sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";

            sPrecioUnitario[0] = (!string.IsNullOrEmpty(ca.PrecioUnitario_01)) ? "$ " + ca.PrecioUnitario_01 : " ";
            sPrecioUnitario[1] = (!string.IsNullOrEmpty(ca.PrecioUnitario_02)) ? "$ " + ca.PrecioUnitario_02 : " ";
            sPrecioUnitario[2] = (!string.IsNullOrEmpty(ca.PrecioUnitario_03)) ? "$ " + ca.PrecioUnitario_03 : " ";
            sPrecioUnitario[3] = (!string.IsNullOrEmpty(ca.PrecioUnitario_04)) ? "$ " + ca.PrecioUnitario_04 : " ";
            sPrecioUnitario[4] = (!string.IsNullOrEmpty(ca.PrecioUnitario_05)) ? "$ " + ca.PrecioUnitario_05 : " ";
            sPrecioUnitario[5] = (!string.IsNullOrEmpty(ca.PrecioUnitario_06)) ? "$ " + ca.PrecioUnitario_06 : " ";
            sPrecioUnitario[6] = (!string.IsNullOrEmpty(ca.PrecioUnitario_07)) ? "$ " + ca.PrecioUnitario_07 : " ";
            sPrecioUnitario[7] = (!string.IsNullOrEmpty(ca.PrecioUnitario_08)) ? "$ " + ca.PrecioUnitario_08 : " ";
            sPrecioUnitario[8] = (!string.IsNullOrEmpty(ca.PrecioUnitario_09)) ? "$ " + ca.PrecioUnitario_09 : " ";
            sPrecioUnitario[9] = (!string.IsNullOrEmpty(ca.PrecioUnitario_10)) ? "$ " + ca.PrecioUnitario_10 : " ";
            sPrecioUnitario[10] = (!string.IsNullOrEmpty(ca.PrecioUnitario_11)) ? "$ " + ca.PrecioUnitario_11 : " ";
            sPrecioUnitario[11] = (!string.IsNullOrEmpty(ca.PrecioUnitario_12)) ? "$ " + ca.PrecioUnitario_12 : " ";
            sPrecioUnitario[12] = (!string.IsNullOrEmpty(ca.PrecioUnitario_13)) ? "$ " + ca.PrecioUnitario_13 : " ";
            sPrecioUnitario[13] = (!string.IsNullOrEmpty(ca.PrecioUnitario_14)) ? "$ " + ca.PrecioUnitario_14 : " ";
            sPrecioUnitario[14] = (!string.IsNullOrEmpty(ca.PrecioUnitario_15)) ? "$ " + ca.PrecioUnitario_15 : " ";
            sPrecioUnitario[15] = (!string.IsNullOrEmpty(ca.PrecioUnitario_16)) ? "$ " + ca.PrecioUnitario_16 : " ";
            string[] sInfoAdicional = new string[3];

            sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.Importe_16 : " ";
            sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.Importe_16 : " ";
            sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.Importe_16 : " ";


            string[] sAbonoItem = new string[6];
            sAbonoItem[0] = " ";// ca.AbonoItem_01;
            sAbonoItem[1] = " ";//ca.AbonoItem_02;
            sAbonoItem[2] = " ";//ca.AbonoItem_03;
            sAbonoItem[3] = " ";//ca.AbonoItem_04;
            sAbonoItem[4] = " ";//ca.AbonoItem_05;
            sAbonoItem[5] = " ";//ca.AbonoItem_06;



            string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
            string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

            string sValorCae = "CAE: " + ca.NumCae;
            string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
            string sValorFechaVencimientoCae = "Fecha de Vencimiento: " + sfechaCae;

            string valorPie = ca.PieFactura;
            string sValorAfipInforma1 = " ";
            string sValorAfipInforma2 = " ";

            if (!string.IsNullOrEmpty(ca.PieFactura))
            {
                if (ca.PieFactura.Length > 140)
                {
                    sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                    sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                }
                else
                    sValorAfipInforma1 = ca.PieFactura;
            }
            /*
            string sCodBarra1 = ca.CodBarraCorreo;
            string sCodBarra2 = ca.CodBarra1 = "85425573961020000039690002796915184000000006";
            string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
             * */
            string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
            string pngLogopath;

            string sOriginal = " ";
            //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
            // {
            sOriginal = "ORIGINAL";
            //}
            DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
            string sCodBarraAfip = ca.BarraAfip;

            var @sImageRoute = cs.Imageroute;
            // sImageRoute=sImageRoute.Replace("\\", @"\");

            XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);


            graph.DrawRoundedRectangle(LineasFactura, 8, 9, 97, 43, 3, 3);
            graph.DrawRoundedRectangle(LineasFactura, 105, 9, 97, 43, 3, 3);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 53, 194, 25);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 79, 194, 12);
            // graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 152);
            //    graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 248, 194, 19);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 165);     //cuerpo factura
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 258, 194, 15);      //Rectangulo Total
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 274, 194, 10);    //rectangulo CAE
            graph.DrawRectangle(LineasFactura, XBrushes.White, 93, 9, 24, 20);


            graph.DrawRectangle(BrushLightGray, 8, 92, 194, 5);
            graph.DrawRectangle(BrushLightGray, 8, 258, 194, 8);


            // graph.DrawLine(LineasFactura, 98, 20, 112, 20);
            //graph.DrawLine(LineasFactura, 8, 86, 202, 86);
            graph.DrawLine(LineasFactura, 8, 85, 202, 85);
            graph.DrawLine(LineasFactura, 8, 97, 202, 97);

            // si es la del error   graph.DrawLine(LineasFactura, 128, 92,128 ,248);
            graph.DrawLine(LineasFactura, 161, 92, 161, 257);
            graph.DrawLine(LineasFactura, 129, 92, 129, 257);

            graph.DrawLine(LineasFactura, 8, 92, 202, 92); //linea superor de la facturacion
            graph.DrawLine(LineasFactura, 8, 266, 202, 266); //linea divisoria total
            graph.DrawLine(LineasFactura, 8, 258, 202, 258); //linea divisoria total

            graph.DrawLine(LineasFactura, 39, 258, 39, 273);
            graph.DrawLine(LineasFactura, 69, 258, 69, 273);
            graph.DrawLine(LineasFactura, 97, 258, 97, 273);
            graph.DrawLine(LineasFactura, 126, 258, 126, 273);
            graph.DrawLine(LineasFactura, 161, 258, 161, 273);

            graph.DrawLine(LineasFactura, 8, 92, 8, 102);
            graph.DrawLine(LineasFactura, 202, 92, 202, 102);
            graph.DrawLine(LineasFactura, 8, 258, 8, 268);
            graph.DrawLine(LineasFactura, 202, 258, 202, 268);
            // graph.DrawLine(LineasFactura, 161, 92, 161, 264);

            //  graph.DrawRectangle(BrushLightGray, 8, 244, 194, 9);



            graph.DrawRectangle(BrushBlack, 143, 18, 6, 7);
            graph.DrawRectangle(BrushLightGray, 151, 18, 45, 7);



            pngLogopath = sImageRoute + "logo.png";
            XImage image = XImage.FromFile(pngLogopath);
            graph.DrawImage(image, 10, 12, 64, 10);






            // XRect rectNG21 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(228), 29, 9);


            graph.Dispose();

            XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);


            XBrush brush = XBrushes.Black;
            XPoint xp = new XPoint();


            if (ca.EsCopia == true)
            {
                xp.X = XUnit.FromMillimeter(120);
                xp.Y = XUnit.FromMillimeter(20);
                graphfont.DrawString("ES COPIA", fontArial10, brush, xp);
            }

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(28);
            graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(32);
            graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(36);
            graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("Tel: 011 5299-9200", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("www.antina.com.ar", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(102);
            xp.Y = XUnit.FromMillimeter(18);
            graphfont.DrawString(sTipoFact, fontArial21B, BrushBlack, xp);




            xp.X = XUnit.FromMillimeter(96);
            xp.Y = XUnit.FromMillimeter(25);
            graphfont.DrawString(sCofFact, fontArial10, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(17);
            graphfont.DrawString(sLeyFact, fontArial12B, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(144);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sTipoFact, fontArial12, BrushWhite, xp);

            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(29);
            graphfont.DrawString(sFechaFactura, fontArial10, BrushBlack, xp);


            //Cuit
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("CUIT: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

            //Convenio Multilateral
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("CONV. MULTILATERAL: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(177);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

            //Inicio de Actividades
            xp.X = XUnit.FromMillimeter(143);//147
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("INICIO DE ACTIVIDADES: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(179);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString("Señores: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString(sNombreApellido, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString("Domicilio: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString(sDomicilio1 + " " + sDomicilio2, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(ca.TipoComporbanteSalida4, fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(sCuit, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(83);
            graphfont.DrawString("I.V.A.: " + sIVA, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(89);
            graphfont.DrawString("Condiciones de Venta: " + " ", fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(55);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("DESCRIPCIÓN", fontArial9, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(131);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("PRECIO UNITARIO", fontArial9, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(175);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("TOTAL", fontArial9, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(262);
            graphfont.DrawString("NETO GRAVADO", fontArial9, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(22);
            xp.Y = XUnit.FromMillimeter(265);
            graphfont.DrawString("21%", fontArial9, brush, xp);

            xp.X = XUnit.FromMillimeter(41);
            xp.Y = XUnit.FromMillimeter(262);
            graphfont.DrawString("NETO GRAVADO ", fontArial9, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(50);
            xp.Y = XUnit.FromMillimeter(265);
            graphfont.DrawString("10,5%", fontArial9, brush, xp);


            xp.X = XUnit.FromMillimeter(72);
            xp.Y = XUnit.FromMillimeter(264);
            graphfont.DrawString("NO GRAVADO", fontArial9, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(106);
            xp.Y = XUnit.FromMillimeter(264);
            graphfont.DrawString("IVA 21%", fontArial9, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(136);
            xp.Y = XUnit.FromMillimeter(264);
            graphfont.DrawString("IVA 10,5%", fontArial9, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(174);
            xp.Y = XUnit.FromMillimeter(264);
            graphfont.DrawString("TOTAL", fontArial9, BrushBlack, xp);






            XRect rectNG21 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(268), 92, 6);
            //graphfont.DrawRectangle(XPens.Aqua, rectNG21);
            graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, rectNG21, formatCenter);


            XRect rectNG10_5 = new XRect(XUnit.FromMillimeter(41), XUnit.FromMillimeter(268), 86, 6);
            //graphfont.DrawRectangle(XPens.Brown, rectNG10_5);
            graphfont.DrawString("$ 0,00", fontArial8, BrushBlack, rectNG10_5, formatCenter);


            XRect rectNoGravado = new XRect(XUnit.FromMillimeter(69), XUnit.FromMillimeter(268), 80, 6);
            // graphfont.DrawRectangle(XPens.Cyan, rectNoGravado);
            graphfont.DrawString("$ 0,00", fontArial8, BrushBlack, rectNoGravado, formatCenter);

            XRect rectIva21 = new XRect(XUnit.FromMillimeter(98), XUnit.FromMillimeter(268), 90, 6);
            // graphfont.DrawRectangle(XPens.ForestGreen, rectIva21);
            graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, rectIva21, formatCenter);


            XRect rectIva10_5 = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(268), 91, 6);
            // graphfont.DrawRectangle(XPens.HotPink, rectIva10_5);
            graphfont.DrawString(sValorIvanoInscripto, fontArial8, BrushBlack, rectIva10_5, formatCenter);

            XRect rectTotal = new XRect(XUnit.FromMillimeter(160), XUnit.FromMillimeter(268), 119, 6);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
            graphfont.DrawString(sValorTotal, fontArial8, BrushBlack, rectTotal, formatCenter);



            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorCae, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(43);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, brush, xp);



            //Conceptos e Importes
            int valory = 98;
            int maxsplit = 0;
            //Conceptos e Importes
            //1  
            XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
            List<string> sConcepto1 = ParseaCampo(sConcepto[0], 65, 75, ' ');
            graphfont.DrawString(sConcepto1[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
            if (sConcepto1.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto1[1].Trim(), fontArial8, BrushBlack, rectConcepto1bis, formatLeft);
            }

            XRect rectPrecioUnitario1 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[0], fontArial8, BrushBlack, rectPrecioUnitario1, formatRight);

            XRect rectImporte1 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);



            //2
            valory = valory + 4;
            XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto2 = ParseaCampo(sConcepto[1], 65, 75, ' ');
            graphfont.DrawString(sConcepto2[0], fontArial8, BrushBlack, rectConcepto2, formatLeft);
            if (sConcepto2.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto2[1].Trim(), fontArial8, BrushBlack, rectConcepto2bis, formatLeft);
            }

            XRect rectPrecioUnitario2 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[1], fontArial8, BrushBlack, rectPrecioUnitario2, formatRight);

            XRect rectImporte2 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
            graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);


            //3
            valory = valory + 4;
            XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto3 = ParseaCampo(sConcepto[2], 65, 75, ' ');
            graphfont.DrawString(sConcepto3[0], fontArial8, BrushBlack, rectConcepto3, formatLeft);
            if (sConcepto3.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto3[1].Trim(), fontArial8, BrushBlack, rectConcepto3bis, formatLeft);
            }
            XRect rectPrecioUnitario3 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[2], fontArial8, BrushBlack, rectPrecioUnitario3, formatRight);

            XRect rectImporte3 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
            graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);



            //4
            valory = valory + 4;
            XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto4 = ParseaCampo(sConcepto[3], 65, 75, ' ');
            graphfont.DrawString(sConcepto4[0], fontArial8, BrushBlack, rectConcepto4, formatLeft);
            if ((sConcepto4.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto4[2].Trim(), fontArial8, BrushBlack, rectConcepto4bis, formatLeft);
            }

            XRect rectPrecioUnitario4 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[3], fontArial8, BrushBlack, rectPrecioUnitario4, formatRight);

            XRect rectImporte4 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
            graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);



            //5
            valory = valory + 4;
            XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto5 = ParseaCampo(sConcepto[4], 65, 75, ' ');
            graphfont.DrawString(sConcepto5[0], fontArial8, BrushBlack, rectConcepto5, formatLeft);
            if ((sConcepto5.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto5[0].Trim(), fontArial8, BrushBlack, rectConcepto5bis, formatLeft);
            }

            XRect rectPrecioUnitario5 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[4], fontArial8, BrushBlack, rectPrecioUnitario5, formatRight);

            XRect rectImporte5 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
            graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);


            //6
            valory = valory + 4;
            XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
            graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);

            XRect rectPrecioUnitario6 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[5], fontArial8, BrushBlack, rectPrecioUnitario6, formatRight);

            XRect rectImporte6 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
            graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


            //7
            valory = valory + 4;
            XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
            graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
            XRect rectImporte7 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
            graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

            //8
            valory = valory + 4;
            XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
            graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);

            XRect rectPrecioUnitario8 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[7], fontArial8, BrushBlack, rectPrecioUnitario8, formatRight);

            XRect rectImporte8 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
            graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


            //9
            valory = valory + 4;
            XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
            graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);

            XRect rectPrecioUnitario9 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[8], fontArial8, BrushBlack, rectPrecioUnitario9, formatRight);

            XRect rectImporte9 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
            graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


            //10
            valory = valory + 4;
            XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
            graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);

            XRect rectPrecioUnitario10 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[9], fontArial8, BrushBlack, rectPrecioUnitario10, formatRight);

            XRect rectImporte10 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
            graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

            //11
            valory = valory + 4;
            XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
            graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);

            XRect rectPrecioUnitario11 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[10], fontArial8, BrushBlack, rectPrecioUnitario11, formatRight);

            XRect rectImporte11 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
            graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

            //12
            valory = valory + 4;
            XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
            graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);

            XRect rectPrecioUnitario12 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[11], fontArial8, BrushBlack, rectPrecioUnitario12, formatRight);

            XRect rectImporte12 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
            graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

            //13
            valory = valory + 4;
            XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
            graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);

            XRect rectPrecioUnitario13 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[12], fontArial8, BrushBlack, rectPrecioUnitario13, formatRight);

            XRect rectImporte13 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
            graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


            //14
            valory = valory + 4;
            XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
            graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);

            XRect rectPrecioUnitario14 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[13], fontArial8, BrushBlack, rectPrecioUnitario14, formatRight);

            XRect rectImporte14 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
            graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


            //15
            valory = valory + 4;
            XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
            graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);

            XRect rectPrecioUnitario15 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[14], fontArial8, BrushBlack, rectPrecioUnitario15, formatRight);

            XRect rectImporte15 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
            graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

            //16
            valory = valory + 4;
            XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
            graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);

            XRect rectPrecioUnitario16 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[15], fontArial8, BrushBlack, rectPrecioUnitario16, formatRight);

            XRect rectImporte16 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
            graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

            //info adicional 1
            valory = valory + 4;
            XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
            graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

            //info adicional 2
            valory = valory + 4;
            XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
            graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

            //info adicional 3
            valory = valory + 4;
            XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
            graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

            /*
            if (!string.IsNullOrEmpty(sCodBarra2))
            {
                xp.X = XUnit.FromMillimeter(62);
                xp.Y = XUnit.FromMillimeter(255);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode2.Text = sCodBarra2;//value of code to draw on page
                BarCode2.StartChar = Convert.ToChar("*");
                BarCode2.EndChar = Convert.ToChar("*");
                BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                BarCode2.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode2, xp);
                xp.X = XUnit.FromMillimeter(66);
                xp.Y = XUnit.FromMillimeter(265);
                graphfont.DrawString(sCodBarra2, fontArial9, brush, xp);
            }
            */


            XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(279), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
            graphfont.DrawString(sValorAfipInforma1, fontArial6, brush, recValorAFipInforma1, formatLeft);
            XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(282), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
            graphfont.DrawString(sValorAfipInforma2, fontArial6, brush, recValorAFipInforma2, formatLeft);


            if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
            {

                xp.X = XUnit.FromMillimeter(185);
                xp.Y = XUnit.FromMillimeter(290);
                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);

                //sCodBarraAfip
                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(245);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(253), 263, 9);
                    //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }
            }
            graphfont.Dispose();

        }


        //Intercompany IIBB
        private void FgetPageFacturaAsal4MejoraIIBB(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            PdfPage pdfPage = pdf.AddPage();

            XPen LineasFactura = new XPen(XColors.Black, 0.22);

            //Alineaciones
            XStringFormat formatRight = new XStringFormat();
            formatRight.Alignment = XStringAlignment.Far;

            XStringFormat formatLeft = new XStringFormat();
            formatLeft.Alignment = XStringAlignment.Near;

            XStringFormat formatCenter = new XStringFormat();
            formatCenter.Alignment = XStringAlignment.Center;


            string sNombreEmpresa = ca.NombreEmpresa;
            string sTipoFact = ca.TipoFact;
            string sCofFact = ca.CodFact;//CODIGO 01
            string sLeyFact = ca.LeyFact;
            string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
            string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
            string sDomicilio1 = ca.DomicilioUno;
            string sDomicilio2 = ca.DomicilioDos;
            string sDomicilio3 = ca.DomicilioTres;
            string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
            string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
            string sNumeroCliente = ca.NumeroCliente; // "557396";
            string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
            string sNumConv = ca.NumConv;            //"901 221621 2";
            string sFechaInicio = ca.FechaInicio;  // "05/1999";
            string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
            string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
            string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
            string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFechaFactura = "FECHA: " + ca.FechaFactura;  //"04/05/2015";
            string sPeriodo = ca.Periodo;// "May/15";
            string sIVA = ca.CategoriaIva;
            string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
            string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
            string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
            string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBB = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");

            string[] sConcepto = new string[16];
            string[] sImporte = new string[16];
            string[] sPrecioUnitario = new string[16];

            sConcepto[0] = ca.Concepto_01;
            sConcepto[1] = ca.Concepto_02;
            sConcepto[2] = ca.Concepto_03;
            sConcepto[3] = ca.Concepto_04;
            sConcepto[4] = ca.Concepto_05;
            sConcepto[5] = ca.Concepto_06;
            sConcepto[6] = ca.Concepto_07;
            sConcepto[7] = ca.Concepto_08;
            sConcepto[8] = ca.Concepto_09;
            sConcepto[9] = ca.Concepto_10;
            sConcepto[10] = ca.Concepto_11;
            sConcepto[11] = ca.Concepto_12;
            sConcepto[12] = ca.Concepto_13;
            sConcepto[13] = ca.Concepto_14;
            sConcepto[14] = ca.Concepto_15;
            sConcepto[15] = ca.Concepto_16;

            sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
            sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
            sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
            sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
            sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
            sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
            sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
            sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
            sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
            sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
            sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
            sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
            sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
            sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
            sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
            sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";

            sPrecioUnitario[0] = (!string.IsNullOrEmpty(ca.PrecioUnitario_01)) ? "$ " + ca.PrecioUnitario_01 : " ";
            sPrecioUnitario[1] = (!string.IsNullOrEmpty(ca.PrecioUnitario_02)) ? "$ " + ca.PrecioUnitario_02 : " ";
            sPrecioUnitario[2] = (!string.IsNullOrEmpty(ca.PrecioUnitario_03)) ? "$ " + ca.PrecioUnitario_03 : " ";
            sPrecioUnitario[3] = (!string.IsNullOrEmpty(ca.PrecioUnitario_04)) ? "$ " + ca.PrecioUnitario_04 : " ";
            sPrecioUnitario[4] = (!string.IsNullOrEmpty(ca.PrecioUnitario_05)) ? "$ " + ca.PrecioUnitario_05 : " ";
            sPrecioUnitario[5] = (!string.IsNullOrEmpty(ca.PrecioUnitario_06)) ? "$ " + ca.PrecioUnitario_06 : " ";
            sPrecioUnitario[6] = (!string.IsNullOrEmpty(ca.PrecioUnitario_07)) ? "$ " + ca.PrecioUnitario_07 : " ";
            sPrecioUnitario[7] = (!string.IsNullOrEmpty(ca.PrecioUnitario_08)) ? "$ " + ca.PrecioUnitario_08 : " ";
            sPrecioUnitario[8] = (!string.IsNullOrEmpty(ca.PrecioUnitario_09)) ? "$ " + ca.PrecioUnitario_09 : " ";
            sPrecioUnitario[9] = (!string.IsNullOrEmpty(ca.PrecioUnitario_10)) ? "$ " + ca.PrecioUnitario_10 : " ";
            sPrecioUnitario[10] = (!string.IsNullOrEmpty(ca.PrecioUnitario_11)) ? "$ " + ca.PrecioUnitario_11 : " ";
            sPrecioUnitario[11] = (!string.IsNullOrEmpty(ca.PrecioUnitario_12)) ? "$ " + ca.PrecioUnitario_12 : " ";
            sPrecioUnitario[12] = (!string.IsNullOrEmpty(ca.PrecioUnitario_13)) ? "$ " + ca.PrecioUnitario_13 : " ";
            sPrecioUnitario[13] = (!string.IsNullOrEmpty(ca.PrecioUnitario_14)) ? "$ " + ca.PrecioUnitario_14 : " ";
            sPrecioUnitario[14] = (!string.IsNullOrEmpty(ca.PrecioUnitario_15)) ? "$ " + ca.PrecioUnitario_15 : " ";
            sPrecioUnitario[15] = (!string.IsNullOrEmpty(ca.PrecioUnitario_16)) ? "$ " + ca.PrecioUnitario_16 : " ";
            string[] sInfoAdicional = new string[3];

            sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.Importe_16 : " ";
            sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.Importe_16 : " ";
            sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.Importe_16 : " ";


            string[] sAbonoItem = new string[6];
            sAbonoItem[0] = " ";// ca.AbonoItem_01;
            sAbonoItem[1] = " ";//ca.AbonoItem_02;
            sAbonoItem[2] = " ";//ca.AbonoItem_03;
            sAbonoItem[3] = " ";//ca.AbonoItem_04;
            sAbonoItem[4] = " ";//ca.AbonoItem_05;
            sAbonoItem[5] = " ";//ca.AbonoItem_06;



            string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
            string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

            string sValorCae = "CAE: " + ca.NumCae;
            string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
            string sValorFechaVencimientoCae = "Fecha de Vencimiento: " + sfechaCae;

            string valorPie = ca.PieFactura;
            string sValorAfipInforma1 = " ";
            string sValorAfipInforma2 = " ";

            if (!string.IsNullOrEmpty(ca.PieFactura))
            {
                if (ca.PieFactura.Length > 140)
                {
                    sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                    sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                }
                else
                    sValorAfipInforma1 = ca.PieFactura;
            }
            /*
            string sCodBarra1 = ca.CodBarraCorreo;
            string sCodBarra2 = ca.CodBarra1 = "85425573961020000039690002796915184000000006";
            string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
             * */
            string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
            string pngLogopath;

            string sOriginal = " ";
            //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
            // {
            sOriginal = "ORIGINAL";
            //}
            DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
            string sCodBarraAfip = ca.BarraAfip;

            var @sImageRoute = cs.Imageroute;
            // sImageRoute=sImageRoute.Replace("\\", @"\");

            XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);


            graph.DrawRoundedRectangle(LineasFactura, 8, 9, 97, 43, 3, 3);
            graph.DrawRoundedRectangle(LineasFactura, 105, 9, 97, 43, 3, 3);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 53, 194, 25);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 79, 194, 12);
            // graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 152);
            //    graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 248, 194, 19);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 165);     //cuerpo factura
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 258, 194, 15);      //Rectangulo Total
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 274, 194, 10);    //rectangulo CAE
            graph.DrawRectangle(LineasFactura, XBrushes.White, 93, 9, 24, 20);


            graph.DrawRectangle(BrushLightGray, 8, 92, 194, 5);
            graph.DrawRectangle(BrushLightGray, 8, 258, 194, 8);


            // graph.DrawLine(LineasFactura, 98, 20, 112, 20);
            //graph.DrawLine(LineasFactura, 8, 86, 202, 86);
            graph.DrawLine(LineasFactura, 8, 85, 202, 85);
            graph.DrawLine(LineasFactura, 8, 97, 202, 97);

            // si es la del error   graph.DrawLine(LineasFactura, 128, 92,128 ,248);
            graph.DrawLine(LineasFactura, 163, 92, 163, 257);
            graph.DrawLine(LineasFactura, 129, 92, 129, 257);

            graph.DrawLine(LineasFactura, 8, 92, 202, 92); //linea superor de la facturacion
            graph.DrawLine(LineasFactura, 8, 266, 202, 266); //linea divisoria total
            graph.DrawLine(LineasFactura, 8, 258, 202, 258); //linea divisoria total

            graph.DrawLine(LineasFactura, 35, 258, 35, 273);// Linea entre Neto Gravado 21 y Netro Gravado 10,5
            graph.DrawLine(LineasFactura, 62, 258, 62, 273);//Linea entre Neto Gravado 10,5 y No Gravado
            graph.DrawLine(LineasFactura, 87, 258, 87, 273);//Linea entreNo Gravado y Iva 21
            graph.DrawLine(LineasFactura, 113, 258, 113, 273);
            graph.DrawLine(LineasFactura, 139, 258, 139, 273);
            graph.DrawLine(LineasFactura, 163, 258, 163, 273);

            graph.DrawLine(LineasFactura, 8, 92, 8, 102);
            graph.DrawLine(LineasFactura, 202, 92, 202, 102);
            graph.DrawLine(LineasFactura, 8, 258, 8, 268);
            graph.DrawLine(LineasFactura, 202, 258, 202, 268);
            // graph.DrawLine(LineasFactura, 161, 92, 161, 264);

            //  graph.DrawRectangle(BrushLightGray, 8, 244, 194, 9);



            graph.DrawRectangle(BrushBlack, 143, 18, 6, 7);
            graph.DrawRectangle(BrushLightGray, 151, 18, 45, 7);



            pngLogopath = sImageRoute + "logo.png";
            XImage image = XImage.FromFile(pngLogopath);
            graph.DrawImage(image, 10, 12, 64, 10);






            // XRect rectNG21 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(228), 29, 9);


            graph.Dispose();

            XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);


            XBrush brush = XBrushes.Black;
            XPoint xp = new XPoint();


            if (ca.EsCopia == true)
            {
                xp.X = XUnit.FromMillimeter(120);
                xp.Y = XUnit.FromMillimeter(20);
                graphfont.DrawString("ES COPIA", fontArial10, brush, xp);
            }

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(28);
            graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(32);
            graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(36);
            graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("Tel: 011 5299-9200", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("www.antina.com.ar", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(102);
            xp.Y = XUnit.FromMillimeter(18);
            graphfont.DrawString(sTipoFact, fontArial21B, BrushBlack, xp);




            xp.X = XUnit.FromMillimeter(96);
            xp.Y = XUnit.FromMillimeter(25);
            graphfont.DrawString(sCofFact, fontArial10, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(17);
            graphfont.DrawString(sLeyFact, fontArial12B, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(144);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sTipoFact, fontArial12, BrushWhite, xp);

            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(29);
            graphfont.DrawString(sFechaFactura, fontArial10, BrushBlack, xp);


            //Cuit
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("CUIT: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

            //Convenio Multilateral
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("CONV. MULTILATERAL: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(177);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

            //Inicio de Actividades
            xp.X = XUnit.FromMillimeter(143);//147
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("INICIO DE ACTIVIDADES: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(179);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString("Señores: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString(sNombreApellido, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString("Domicilio: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString(sDomicilio1 + " " + sDomicilio2, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(ca.TipoComporbanteSalida4, fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(sCuit, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(83);
            graphfont.DrawString("I.V.A.: " + sIVA, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(89);
            graphfont.DrawString("Condiciones de Venta: " + " ", fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(55);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("DESCRIPCIÓN", fontArial9, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(131);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("PRECIO UNITARIO", fontArial9, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(175);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("TOTAL", fontArial9, BrushBlack, xp);




   
            XRect rectNetoGrabado21_1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(259), 77, 6);
           // graphfont.DrawRectangle(XPens.Aqua, rectNetoGrabado21_1);
            graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, rectNetoGrabado21_1, formatCenter);
 
            XRect rectNetoGrabado21_2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(262), 77, 6);
            //graphfont.DrawRectangle(XPens.Aqua, rectNetoGrabado21_2);
            graphfont.DrawString("21%", fontArial8, BrushBlack, rectNetoGrabado21_2, formatCenter);
 
            XRect rectNetoGrabado10_1 = new XRect(XUnit.FromMillimeter(35), XUnit.FromMillimeter(259), 77, 6);
            //graphfont.DrawRectangle(XPens.Brown, rectNetoGrabado10_1);
            graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, rectNetoGrabado10_1, formatCenter);

            XRect rectNetoGrabado10_2 = new XRect(XUnit.FromMillimeter(35), XUnit.FromMillimeter(262), 77, 6);
           // graphfont.DrawRectangle(XPens.Brown, rectNetoGrabado10_2);
            graphfont.DrawString("10,5%", fontArial8, BrushBlack, rectNetoGrabado10_2, formatCenter);
          
            XRect rectNetoNoGravado = new XRect(XUnit.FromMillimeter(62), XUnit.FromMillimeter(261), 72, 6);
            //graphfont.DrawRectangle(XPens.MediumPurple, rectNetoNoGravado);
            graphfont.DrawString("NO GRAVADO", fontArial8, BrushBlack, rectNetoNoGravado, formatCenter);

            XRect rectIva21T = new XRect(XUnit.FromMillimeter(87), XUnit.FromMillimeter(261), 74, 6);
           // graphfont.DrawRectangle(XPens.ForestGreen, rectIva21T);
            graphfont.DrawString("IVA 21%", fontArial8, BrushBlack, rectIva21T, formatCenter);

            XRect rectIva10_5T = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(261), 74, 6);
            //graphfont.DrawRectangle(XPens.HotPink, rectIva10_5T);
            graphfont.DrawString("IVA 10,5%", fontArial8, BrushBlack, rectIva10_5T, formatCenter);
      
            XRect rectIIBBT_T1 = new XRect(XUnit.FromMillimeter(139), XUnit.FromMillimeter(259), 68, 6);
            //graphfont.DrawRectangle(XPens.Yellow, rectIIBBT_T1);
            graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectIIBBT_T1, formatCenter);
      
            XRect rectIIBBT_T2 = new XRect(XUnit.FromMillimeter(139), XUnit.FromMillimeter(262), 68, 6);
            //graphfont.DrawRectangle(XPens.Yellow, rectIIBBT_T2);
            graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectIIBBT_T2, formatCenter);
    
            XRect rectTotalT = new XRect(XUnit.FromMillimeter(163), XUnit.FromMillimeter(261), 100, 6);
           // graphfont.DrawRectangle(XPens.HotPink, rectTotalT);
            graphfont.DrawString("TOTAL", fontArial8, BrushBlack, rectTotalT, formatCenter);





            //Neto Gravado 21
            XRect rectNG21 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(268), 77, 6);
            //graphfont.DrawRectangle(XPens.Aqua, rectNG21);
            graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, rectNG21, formatCenter);

            //Neto Gravado 10,5
            XRect rectNG10_5 = new XRect(XUnit.FromMillimeter(35), XUnit.FromMillimeter(268), 77, 6);
            // graphfont.DrawRectangle(XPens.Brown, rectNG10_5);
            graphfont.DrawString("$ 0,00", fontArial8, BrushBlack, rectNG10_5, formatCenter);

            //Neto no gravado
            XRect rectNoGravado = new XRect(XUnit.FromMillimeter(62), XUnit.FromMillimeter(268), 72, 6);
           //  graphfont.DrawRectangle(XPens.MediumPurple, rectNoGravado);
            graphfont.DrawString("$ 0,00", fontArial8, BrushBlack, rectNoGravado, formatCenter);

            //Iva 21%
            XRect rectIva21 = new XRect(XUnit.FromMillimeter(87), XUnit.FromMillimeter(268), 74, 6);
            // graphfont.DrawRectangle(XPens.ForestGreen, rectIva21);
            graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, rectIva21, formatCenter);

            //Iva 10,5%
            XRect rectIva10_5 = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(268), 74, 6);
            //  graphfont.DrawRectangle(XPens.HotPink, rectIva10_5);
            graphfont.DrawString(sValorIvanoInscripto, fontArial8, BrushBlack, rectIva10_5, formatCenter);


            //IIBB
            XRect rectIIBB = new XRect(XUnit.FromMillimeter(139), XUnit.FromMillimeter(268), 68, 6);
            //graphfont.DrawRectangle(XPens.Yellow, rectIIBB);
            graphfont.DrawString(sValorIIBB, fontArial8, BrushBlack, rectIIBB, formatCenter);


            //Total
            XRect rectTotal = new XRect(XUnit.FromMillimeter(163), XUnit.FromMillimeter(268),100, 6);
            //   graphfont.DrawRectangle(XPens.YellowGreen, rectTotal);
            graphfont.DrawString(sValorTotal, fontArial8, BrushBlack, rectTotal, formatCenter);



            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorCae, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(43);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, brush, xp);



            // Conceptos e Importes
            int valory = 98;
            int maxsplit = 0;
            // Conceptos e Importes
            // 1  
            XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            // graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
            List<string> sConcepto1 = ParseaCampo(sConcepto[0], 65, 75, ' ');
            graphfont.DrawString(sConcepto1[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
            if (sConcepto1.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto1[1].Trim(), fontArial8, BrushBlack, rectConcepto1bis, formatLeft);
            }

            XRect rectPrecioUnitario1 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[0], fontArial8, BrushBlack, rectPrecioUnitario1, formatRight);

            XRect rectImporte1 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);



            //2
            valory = valory + 4;
            XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto2 = ParseaCampo(sConcepto[1], 65, 75, ' ');
            graphfont.DrawString(sConcepto2[0], fontArial8, BrushBlack, rectConcepto2, formatLeft);
            if (sConcepto2.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto2[1].Trim(), fontArial8, BrushBlack, rectConcepto2bis, formatLeft);
            }

            XRect rectPrecioUnitario2 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[1], fontArial8, BrushBlack, rectPrecioUnitario2, formatRight);

            XRect rectImporte2 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
            graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);


            // 3
            valory = valory + 4;
            XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto3 = ParseaCampo(sConcepto[2], 65, 75, ' ');
            graphfont.DrawString(sConcepto3[0], fontArial8, BrushBlack, rectConcepto3, formatLeft);
            if (sConcepto3.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto3[1].Trim(), fontArial8, BrushBlack, rectConcepto3bis, formatLeft);
            }
            XRect rectPrecioUnitario3 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[2], fontArial8, BrushBlack, rectPrecioUnitario3, formatRight);

            XRect rectImporte3 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
            graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);



            // 4
            valory = valory + 4;
            XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto4 = ParseaCampo(sConcepto[3], 65, 75, ' ');
            graphfont.DrawString(sConcepto4[0], fontArial8, BrushBlack, rectConcepto4, formatLeft);
            if ((sConcepto4.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto4[2].Trim(), fontArial8, BrushBlack, rectConcepto4bis, formatLeft);
            }

            XRect rectPrecioUnitario4 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[3], fontArial8, BrushBlack, rectPrecioUnitario4, formatRight);

            XRect rectImporte4 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
            graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);



            // 5
            valory = valory + 4;
            XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto5 = ParseaCampo(sConcepto[4], 65, 75, ' ');
            graphfont.DrawString(sConcepto5[0], fontArial8, BrushBlack, rectConcepto5, formatLeft);
            if ((sConcepto5.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto5[0].Trim(), fontArial8, BrushBlack, rectConcepto5bis, formatLeft);
            }

            XRect rectPrecioUnitario5 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[4], fontArial8, BrushBlack, rectPrecioUnitario5, formatRight);

            XRect rectImporte5 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            // graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
            graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);


            // 6
            valory = valory + 4;
            XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
            graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);

            XRect rectPrecioUnitario6 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[5], fontArial8, BrushBlack, rectPrecioUnitario6, formatRight);

            XRect rectImporte6 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
            graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


            //7
            valory = valory + 4;
            XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
            graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
            XRect rectImporte7 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
            graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

            //8
            valory = valory + 4;
            XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
            graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);

            XRect rectPrecioUnitario8 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[7], fontArial8, BrushBlack, rectPrecioUnitario8, formatRight);

            XRect rectImporte8 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
            graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


            //9
            valory = valory + 4;
            XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
            graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);

            XRect rectPrecioUnitario9 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[8], fontArial8, BrushBlack, rectPrecioUnitario9, formatRight);

            XRect rectImporte9 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
            graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


            //10
            valory = valory + 4;
            XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
            graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);

            XRect rectPrecioUnitario10 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[9], fontArial8, BrushBlack, rectPrecioUnitario10, formatRight);

            XRect rectImporte10 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
            graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

            //11
            valory = valory + 4;
            XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
            graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);

            XRect rectPrecioUnitario11 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[10], fontArial8, BrushBlack, rectPrecioUnitario11, formatRight);

            XRect rectImporte11 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
            graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

            //12
            valory = valory + 4;
            XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
            graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);

            XRect rectPrecioUnitario12 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[11], fontArial8, BrushBlack, rectPrecioUnitario12, formatRight);

            XRect rectImporte12 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
            graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

            //13
            valory = valory + 4;
            XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
            graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);

            XRect rectPrecioUnitario13 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[12], fontArial8, BrushBlack, rectPrecioUnitario13, formatRight);

            XRect rectImporte13 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
            graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


            //14
            valory = valory + 4;
            XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
            graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);

            XRect rectPrecioUnitario14 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[13], fontArial8, BrushBlack, rectPrecioUnitario14, formatRight);

            XRect rectImporte14 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
            graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


            //15
            valory = valory + 4;
            XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
            graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);

            XRect rectPrecioUnitario15 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[14], fontArial8, BrushBlack, rectPrecioUnitario15, formatRight);

            XRect rectImporte15 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
            graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

            //16
            valory = valory + 4;
            XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
            graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);

            XRect rectPrecioUnitario16 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[15], fontArial8, BrushBlack, rectPrecioUnitario16, formatRight);

            XRect rectImporte16 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
            graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

            //info adicional 1
            valory = valory + 4;
            XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
            graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

            //info adicional 2
            valory = valory + 4;
            XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
            graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

            //info adicional 3
            valory = valory + 4;
            XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
            graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

            /*
            if (!string.IsNullOrEmpty(sCodBarra2))
            {
                xp.X = XUnit.FromMillimeter(62);
                xp.Y = XUnit.FromMillimeter(255);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode2.Text = sCodBarra2;//value of code to draw on page
                BarCode2.StartChar = Convert.ToChar("*");
                BarCode2.EndChar = Convert.ToChar("*");
                BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                BarCode2.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode2, xp);
                xp.X = XUnit.FromMillimeter(66);
                xp.Y = XUnit.FromMillimeter(265);
                graphfont.DrawString(sCodBarra2, fontArial9, brush, xp);
            }
            */


            XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(279), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
            graphfont.DrawString(sValorAfipInforma1, fontArial6, brush, recValorAFipInforma1, formatLeft);
            XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(282), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
            graphfont.DrawString(sValorAfipInforma2, fontArial6, brush, recValorAFipInforma2, formatLeft);


            if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
            {

                xp.X = XUnit.FromMillimeter(185);
                xp.Y = XUnit.FromMillimeter(290);
                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);

                //sCodBarraAfip
                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(245);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(253), 263, 9);
                    //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }
            }
            graphfont.Dispose();


        }

        //Intercompany IIBB BSAs y Caba
        private void FgetPageFacturaAsal4MejoraIIBB_2017(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {
            PdfPage pdfPage = pdf.AddPage();

            XPen LineasFactura = new XPen(XColors.Black, 0.22);

            //Alineaciones
            XStringFormat formatRight = new XStringFormat();
            formatRight.Alignment = XStringAlignment.Far;

            XStringFormat formatLeft = new XStringFormat();
            formatLeft.Alignment = XStringAlignment.Near;

            XStringFormat formatCenter = new XStringFormat();
            formatCenter.Alignment = XStringAlignment.Center;


            string sNombreEmpresa = ca.NombreEmpresa;
            string sTipoFact = ca.TipoFact;
            string sCofFact = ca.CodFact;//CODIGO 01
            string sLeyFact = ca.LeyFact;
            string sNumFact = ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
            string sNombreApellido = ca.NombreApellido;// "ELECTRONICA MEGATONE SA"; 
            string sDomicilio1 = ca.DomicilioUno;
            string sDomicilio2 = ca.DomicilioDos;
            string sDomicilio3 = ca.DomicilioTres;
            string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
            string sFechaVencimiento = ca.FechaVencimiento; // "09/05/2015";
            string sNumeroCliente = ca.NumeroCliente; // "557396";
            string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
            string sNumConv = ca.NumConv;            //"901 221621 2";
            string sFechaInicio = ca.FechaInicio;  // "05/1999";
            string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
            string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
            string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
            string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFechaFactura = "FECHA: " + ca.FechaFactura;  //"04/05/2015";
            string sPeriodo = ca.Periodo;// "May/15";
            string sIVA = ca.CategoriaIva;
            string sCuit = (!string.IsNullOrEmpty(ca.NumCuit)) ? ca.NumCuit : " ";
            string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
            string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
            string sValorIvanoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBB = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
            string sValorIIBBCaba = "$ " + ca.ValorPErcibIIBBAgip.Replace(".", ",");   

            string[] sConcepto = new string[16];
            string[] sImporte = new string[16];
            string[] sPrecioUnitario = new string[16];

            sConcepto[0] = ca.Concepto_01;
            sConcepto[1] = ca.Concepto_02;
            sConcepto[2] = ca.Concepto_03;
            sConcepto[3] = ca.Concepto_04;
            sConcepto[4] = ca.Concepto_05;
            sConcepto[5] = ca.Concepto_06;
            sConcepto[6] = ca.Concepto_07;
            sConcepto[7] = ca.Concepto_08;
            sConcepto[8] = ca.Concepto_09;
            sConcepto[9] = ca.Concepto_10;
            sConcepto[10] = ca.Concepto_11;
            sConcepto[11] = ca.Concepto_12;
            sConcepto[12] = ca.Concepto_13;
            sConcepto[13] = ca.Concepto_14;
            sConcepto[14] = ca.Concepto_15;
            sConcepto[15] = ca.Concepto_16;

            sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
            sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
            sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
            sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
            sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
            sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
            sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
            sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
            sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
            sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
            sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
            sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
            sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
            sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
            sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
            sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";

            sPrecioUnitario[0] = (!string.IsNullOrEmpty(ca.PrecioUnitario_01)) ? "$ " + ca.PrecioUnitario_01 : " ";
            sPrecioUnitario[1] = (!string.IsNullOrEmpty(ca.PrecioUnitario_02)) ? "$ " + ca.PrecioUnitario_02 : " ";
            sPrecioUnitario[2] = (!string.IsNullOrEmpty(ca.PrecioUnitario_03)) ? "$ " + ca.PrecioUnitario_03 : " ";
            sPrecioUnitario[3] = (!string.IsNullOrEmpty(ca.PrecioUnitario_04)) ? "$ " + ca.PrecioUnitario_04 : " ";
            sPrecioUnitario[4] = (!string.IsNullOrEmpty(ca.PrecioUnitario_05)) ? "$ " + ca.PrecioUnitario_05 : " ";
            sPrecioUnitario[5] = (!string.IsNullOrEmpty(ca.PrecioUnitario_06)) ? "$ " + ca.PrecioUnitario_06 : " ";
            sPrecioUnitario[6] = (!string.IsNullOrEmpty(ca.PrecioUnitario_07)) ? "$ " + ca.PrecioUnitario_07 : " ";
            sPrecioUnitario[7] = (!string.IsNullOrEmpty(ca.PrecioUnitario_08)) ? "$ " + ca.PrecioUnitario_08 : " ";
            sPrecioUnitario[8] = (!string.IsNullOrEmpty(ca.PrecioUnitario_09)) ? "$ " + ca.PrecioUnitario_09 : " ";
            sPrecioUnitario[9] = (!string.IsNullOrEmpty(ca.PrecioUnitario_10)) ? "$ " + ca.PrecioUnitario_10 : " ";
            sPrecioUnitario[10] = (!string.IsNullOrEmpty(ca.PrecioUnitario_11)) ? "$ " + ca.PrecioUnitario_11 : " ";
            sPrecioUnitario[11] = (!string.IsNullOrEmpty(ca.PrecioUnitario_12)) ? "$ " + ca.PrecioUnitario_12 : " ";
            sPrecioUnitario[12] = (!string.IsNullOrEmpty(ca.PrecioUnitario_13)) ? "$ " + ca.PrecioUnitario_13 : " ";
            sPrecioUnitario[13] = (!string.IsNullOrEmpty(ca.PrecioUnitario_14)) ? "$ " + ca.PrecioUnitario_14 : " ";
            sPrecioUnitario[14] = (!string.IsNullOrEmpty(ca.PrecioUnitario_15)) ? "$ " + ca.PrecioUnitario_15 : " ";
            sPrecioUnitario[15] = (!string.IsNullOrEmpty(ca.PrecioUnitario_16)) ? "$ " + ca.PrecioUnitario_16 : " ";
            string[] sInfoAdicional = new string[3];

            sInfoAdicional[0] = (!string.IsNullOrEmpty(ca.InfoAdicional01)) ? ca.Importe_16 : " ";
            sInfoAdicional[1] = (!string.IsNullOrEmpty(ca.InfoAdicional02)) ? ca.Importe_16 : " ";
            sInfoAdicional[2] = (!string.IsNullOrEmpty(ca.InfoAdicional03)) ? ca.Importe_16 : " ";


            string[] sAbonoItem = new string[6];
            sAbonoItem[0] = " ";// ca.AbonoItem_01;
            sAbonoItem[1] = " ";//ca.AbonoItem_02;
            sAbonoItem[2] = " ";//ca.AbonoItem_03;
            sAbonoItem[3] = " ";//ca.AbonoItem_04;
            sAbonoItem[4] = " ";//ca.AbonoItem_05;
            sAbonoItem[5] = " ";//ca.AbonoItem_06;



            string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
            string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
            string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
            string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

            string sValorCae = "CAE: " + ca.NumCae;
            string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
            string sValorFechaVencimientoCae = "Fecha de Vencimiento: " + sfechaCae;

            string valorPie = ca.PieFactura;
            string sValorAfipInforma1 = " ";
            string sValorAfipInforma2 = " ";

            if (!string.IsNullOrEmpty(ca.PieFactura))
            {
                if (ca.PieFactura.Length > 140)
                {
                    sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                    sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                }
                else
                    sValorAfipInforma1 = ca.PieFactura;
            }
            /*
            string sCodBarra1 = ca.CodBarraCorreo;
            string sCodBarra2 = ca.CodBarra1 = "85425573961020000039690002796915184000000006";
            string sCodBarra3 = ca.CodBarra2; //"85425573961020000039690002796915184000000008";
             * */
            string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
            string pngLogopath;

            string sOriginal = " ";
            //if ((sPuntoVenta == "0034") || (sPuntoVenta == "0035"))
            // {
            sOriginal = "ORIGINAL";
            //}
            DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
            string sCodBarraAfip = ca.BarraAfip;

            var @sImageRoute = cs.Imageroute;
            // sImageRoute=sImageRoute.Replace("\\", @"\");

            XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);


            graph.DrawRoundedRectangle(LineasFactura, 8, 9, 97, 43, 3, 3);
            graph.DrawRoundedRectangle(LineasFactura, 105, 9, 97, 43, 3, 3);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 53, 194, 25);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 79, 194, 12);
            // graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 152);
            //    graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 248, 194, 19);
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 92, 194, 165);     //cuerpo factura
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 258, 194, 15);      //Rectangulo Total
            graph.DrawRectangle(LineasFactura, XBrushes.White, 8, 274, 194, 10);    //rectangulo CAE
            graph.DrawRectangle(LineasFactura, XBrushes.White, 93, 9, 24, 20);


            graph.DrawRectangle(BrushLightGray, 8, 92, 194, 5);
            graph.DrawRectangle(BrushLightGray, 8, 258, 194, 8);


            // graph.DrawLine(LineasFactura, 98, 20, 112, 20);
            //graph.DrawLine(LineasFactura, 8, 86, 202, 86);
            graph.DrawLine(LineasFactura, 8, 85, 202, 85);
            graph.DrawLine(LineasFactura, 8, 97, 202, 97);

            // si es la del error   graph.DrawLine(LineasFactura, 128, 92,128 ,248);
            graph.DrawLine(LineasFactura, 163, 92, 163, 257);
            graph.DrawLine(LineasFactura, 129, 92, 129, 257);

            graph.DrawLine(LineasFactura, 8, 92, 202, 92); //linea superor de la facturacion
            graph.DrawLine(LineasFactura, 8, 266, 202, 266); //linea divisoria total
            graph.DrawLine(LineasFactura, 8, 258, 202, 258); //linea divisoria total

            graph.DrawLine(LineasFactura, 31, 258, 31, 273);   // Linea entre Neto Gravado 21 y Netro Gravado 10,5
            graph.DrawLine(LineasFactura, 54, 258, 54, 273);   // Linea entre Neto Gravado 10,5 y No Gravado
            graph.DrawLine(LineasFactura, 77, 258, 77, 273);   // Linea entre No Gravado y Iva 21
            graph.DrawLine(LineasFactura, 100, 258, 100, 273); // Linea entre Iva 21 e Iva 10,5
            graph.DrawLine(LineasFactura, 123, 258, 123, 273); // Linea entre  Iva 10,5 e IIBB BsAs
            graph.DrawLine(LineasFactura, 146, 258, 146, 273); // Linea entre IIBB BsAs y IIBB Caba
            graph.DrawLine(LineasFactura, 169, 258, 169, 273); // Linea entre IIBB Caba y Total

            graph.DrawLine(LineasFactura, 8, 92, 8, 102);
            graph.DrawLine(LineasFactura, 202, 92, 202, 102);
            graph.DrawLine(LineasFactura, 8, 258, 8, 268);
            graph.DrawLine(LineasFactura, 202, 258, 202, 268);
            // graph.DrawLine(LineasFactura, 161, 92, 161, 264);

            //  graph.DrawRectangle(BrushLightGray, 8, 244, 194, 9);



            graph.DrawRectangle(BrushBlack, 143, 18, 6, 7);
            graph.DrawRectangle(BrushLightGray, 151, 18, 45, 7);



            pngLogopath = sImageRoute + "logo.png";
            XImage image = XImage.FromFile(pngLogopath);
            graph.DrawImage(image, 10, 12, 64, 10);






            // XRect rectNG21 = new XRect(XUnit.FromMillimeter(40), XUnit.FromMillimeter(228), 29, 9);


            graph.Dispose();

            XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);


            XBrush brush = XBrushes.Black;
            XPoint xp = new XPoint();


            if (ca.EsCopia == true)
            {
                xp.X = XUnit.FromMillimeter(120);
                xp.Y = XUnit.FromMillimeter(20);
                graphfont.DrawString("ES COPIA", fontArial10, brush, xp);
            }

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(28);
            graphfont.DrawString(sNombreEmpresa, fontArial8B, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(32);
            graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(36);
            graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("Tel: 011 5299-9200", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("www.antina.com.ar", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(102);
            xp.Y = XUnit.FromMillimeter(18);
            graphfont.DrawString(sTipoFact, fontArial21B, BrushBlack, xp);




            xp.X = XUnit.FromMillimeter(96);
            xp.Y = XUnit.FromMillimeter(25);
            graphfont.DrawString(sCofFact, fontArial10, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(17);
            graphfont.DrawString(sLeyFact, fontArial12B, BrushBlack, xp);


            xp.X = XUnit.FromMillimeter(144);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sTipoFact, fontArial12, BrushWhite, xp);

            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(23);
            graphfont.DrawString(sNumFact, fontArial12, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(29);
            graphfont.DrawString(sFechaFactura, fontArial10, BrushBlack, xp);


            //Cuit
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString("CUIT: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(153);
            xp.Y = XUnit.FromMillimeter(40);
            graphfont.DrawString(sNumCuitEmpresa, fontArial8, BrushBlack, xp);

            //Convenio Multilateral
            xp.X = XUnit.FromMillimeter(143);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString("CONV. MULTILATERAL: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(177);
            xp.Y = XUnit.FromMillimeter(44);
            graphfont.DrawString(sNumConv, fontArial8, BrushBlack, xp);

            //Inicio de Actividades
            xp.X = XUnit.FromMillimeter(143);//147
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString("INICIO DE ACTIVIDADES: ", fontArial8B, BrushBlack, xp);
            xp.X = XUnit.FromMillimeter(179);
            xp.Y = XUnit.FromMillimeter(48);
            graphfont.DrawString(sFechaInicio, fontArial8, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString("Señores: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(59);
            graphfont.DrawString(sNombreApellido, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString("Domicilio: ", fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(67);
            graphfont.DrawString(sDomicilio1 + " " + sDomicilio2, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(ca.TipoComporbanteSalida4, fontArial8B, brush, xp);
            xp.X = XUnit.FromMillimeter(24);
            xp.Y = XUnit.FromMillimeter(74);
            graphfont.DrawString(sCuit, fontArial8, brush, xp);


            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(83);
            graphfont.DrawString("I.V.A.: " + sIVA, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(10);
            xp.Y = XUnit.FromMillimeter(89);
            graphfont.DrawString("Condiciones de Venta: " + " ", fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(55);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("DESCRIPCIÓN", fontArial9, BrushBlack, xp);

            xp.X = XUnit.FromMillimeter(131);
            xp.Y = XUnit.FromMillimeter(96);
            graphfont.DrawString("PRECIO UNITARIO", fontArial9, BrushBlack, xp);


       




/*
            XRect rectNetoGrabado21_1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(259), 77, 6);
            // graphfont.DrawRectangle(XPens.Aqua, rectNetoGrabado21_1);
            graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, rectNetoGrabado21_1, formatCenter);

            XRect rectNetoGrabado21_2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(262), 77, 6);
            //graphfont.DrawRectangle(XPens.Aqua, rectNetoGrabado21_2);
            graphfont.DrawString("21%", fontArial8, BrushBlack, rectNetoGrabado21_2, formatCenter);
*/


            //NETO GRAVADO   
            //graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(4), XUnit.FromMillimeter(160)));
            //graphfont.DrawString(sNetoGravado, fontArial8, BrushBlack, new XPoint(XUnit.FromMillimeter(10), XUnit.FromMillimeter(171)));
            XRect rectLeyendaNetoGravado1 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(259), 65, 9);
            //graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado1);
            graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado1, formatCenter);
            XRect rectLeyendaNetoGravado2 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(262), 65, 9);
           // graphfont.DrawRectangle(XPens.Red, rectLeyendaNetoGravado2);
            graphfont.DrawString("21%", fontArial8, BrushBlack, rectLeyendaNetoGravado2, formatCenter);

            //Neto Gravado 21
            XRect rectNG21 = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(268), 64, 6);
            //graphfont.DrawRectangle(XPens.Red, rectNG21);
            graphfont.DrawString(sValorNetoGravado, fontArial8, BrushBlack, rectNG21, formatRight);

            /*
            XRect rectNetoGrabado10_1 = new XRect(XUnit.FromMillimeter(35), XUnit.FromMillimeter(259), 77, 6);
            //graphfont.DrawRectangle(XPens.Brown, rectNetoGrabado10_1);
            graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, rectNetoGrabado10_1, formatCenter);

            XRect rectNetoGrabado10_2 = new XRect(XUnit.FromMillimeter(35), XUnit.FromMillimeter(262), 77, 6);
            // graphfont.DrawRectangle(XPens.Brown, rectNetoGrabado10_2);
            graphfont.DrawString("10,5%", fontArial8, BrushBlack, rectNetoGrabado10_2, formatCenter);
            */
            XRect rectLeyendaNetoGravado10_5_1 = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(259), 65, 9);
            //graphfont.DrawRectangle(XPens.Gold, rectLeyendaNetoGravado10_5_1);
            graphfont.DrawString("NETO GRAVADO", fontArial8, BrushBlack, rectLeyendaNetoGravado10_5_1, formatCenter);
            XRect rectLeyendaNetoGravado10_5_2 = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(262), 65, 9);
            //graphfont.DrawRectangle(XPens.Gold, rectLeyendaNetoGravado10_5_2);
            graphfont.DrawString("10,5%", fontArial8, BrushBlack, rectLeyendaNetoGravado10_5_2, formatCenter);

            //Neto Gravado 10,5
            XRect rectNG10_5 = new XRect(XUnit.FromMillimeter(31), XUnit.FromMillimeter(268), 64, 6);
            //graphfont.DrawRectangle(XPens.Gold, rectNG10_5);
            graphfont.DrawString("$ 0,00", fontArial8, BrushBlack, rectNG10_5, formatRight);


            /*
            XRect rectNetoNoGravado = new XRect(XUnit.FromMillimeter(62), XUnit.FromMillimeter(261), 72, 6);
            //graphfont.DrawRectangle(XPens.MediumPurple, rectNetoNoGravado);
            graphfont.DrawString("NO GRAVADO", fontArial8, BrushBlack, rectNetoNoGravado, formatCenter);
            */
            XRect rectNetoNoGravado = new XRect(XUnit.FromMillimeter(54), XUnit.FromMillimeter(260), 65, 9);
            //graphfont.DrawRectangle(XPens.Green, rectNetoNoGravado);
            graphfont.DrawString("NO GRAVADO", fontArial8, BrushBlack, rectNetoNoGravado, formatCenter);
            //Neto no gravado
            XRect rectNoGravado = new XRect(XUnit.FromMillimeter(54), XUnit.FromMillimeter(268), 64, 6);
            //graphfont.DrawRectangle(XPens.Green, rectNoGravado);
            graphfont.DrawString("$ 0,00", fontArial8, BrushBlack, rectNoGravado, formatRight);



            /*
            XRect rectIva21T = new XRect(XUnit.FromMillimeter(87), XUnit.FromMillimeter(261), 74, 6);
            // graphfont.DrawRectangle(XPens.ForestGreen, rectIva21T);
            graphfont.DrawString("IVA 21%", fontArial8, BrushBlack, rectIva21T, formatCenter);
            */
            XRect rectIva21T = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(260), 65, 9);
            //graphfont.DrawRectangle(XPens.DarkTurquoise, rectIva21T);
            graphfont.DrawString("IVA 21%", fontArial8, BrushBlack, rectIva21T, formatCenter);
            XRect rectIva21 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(268), 64, 6);
            //graphfont.DrawRectangle(XPens.DarkTurquoise, rectIva21);
            graphfont.DrawString(sValorIvaInscripto, fontArial8, BrushBlack, rectIva21, formatRight);



            /*
            XRect rectIva10_5T = new XRect(XUnit.FromMillimeter(113), XUnit.FromMillimeter(261), 74, 6);
            //graphfont.DrawRectangle(XPens.HotPink, rectIva10_5T);
            graphfont.DrawString("IVA 10,5%", fontArial8, BrushBlack, rectIva10_5T, formatCenter);
            */
            XRect rectIva10_5T = new XRect(XUnit.FromMillimeter(100), XUnit.FromMillimeter(260), 65, 9);
            //graphfont.DrawRectangle(XPens.Chocolate, rectIva10_5T);
            graphfont.DrawString("IVA 10,5%", fontArial8, BrushBlack, rectIva10_5T, formatCenter);
            XRect rectIva10_5 = new XRect(XUnit.FromMillimeter(100), XUnit.FromMillimeter(268),64, 6);
            //graphfont.DrawRectangle(XPens.Chocolate, rectIva10_5);
            graphfont.DrawString(sValorIvanoInscripto, fontArial8, BrushBlack, rectIva10_5, formatRight);


            /*
            XRect rectIIBBT_T1 = new XRect(XUnit.FromMillimeter(139), XUnit.FromMillimeter(259), 68, 6);
            //graphfont.DrawRectangle(XPens.Yellow, rectIIBBT_T1);
            graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectIIBBT_T1, formatCenter);

            XRect rectIIBBT_T2 = new XRect(XUnit.FromMillimeter(139), XUnit.FromMillimeter(262), 68, 6);
            //graphfont.DrawRectangle(XPens.Yellow, rectIIBBT_T2);
            graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectIIBBT_T2, formatCenter);
            */
            XRect rectIIBBT_T1 = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(259), 65, 9);
            //graphfont.DrawRectangle(XPens.HotPink, rectIIBBT_T1);
            graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectIIBBT_T1, formatCenter);
            XRect rectIIBBT_T2 = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(262), 65, 9);
            //graphfont.DrawRectangle(XPens.HotPink, rectIIBBT_T2);
            graphfont.DrawString("IIBB BS.AS.", fontArial8, BrushBlack, rectIIBBT_T2, formatCenter);
            XRect rectIIBB = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(268), 64, 6);
            //graphfont.DrawRectangle(XPens.HotPink, rectIIBB);
            graphfont.DrawString(sValorIIBB, fontArial8, BrushBlack, rectIIBB, formatRight);

            
            XRect rectIIBBCabaT_T1 = new XRect(XUnit.FromMillimeter(146), XUnit.FromMillimeter(259), 65, 9);
            //graphfont.DrawRectangle(XPens.IndianRed, rectIIBBCabaT_T1);
            graphfont.DrawString("PERCEPCIÓN", fontArial8, BrushBlack, rectIIBBCabaT_T1, formatCenter);
            XRect rectIIBBCabaT_T2 = new XRect(XUnit.FromMillimeter(146), XUnit.FromMillimeter(262), 65, 9);
            //graphfont.DrawRectangle(XPens.IndianRed, rectIIBBCabaT_T2);
            graphfont.DrawString("IIBB CABA", fontArial8, BrushBlack, rectIIBBCabaT_T2, formatCenter);
            XRect rectIIBBCaba = new XRect(XUnit.FromMillimeter(146), XUnit.FromMillimeter(268), 64, 6);
            //graphfont.DrawRectangle(XPens.IndianRed, rectIIBBCaba);
            graphfont.DrawString(sValorIIBBCaba, fontArial8, BrushBlack, rectIIBBCaba, formatRight);


            /*
            xp.X = XUnit.FromMillimeter(175);
            xp.Y = XUnit.FromMillimeter(96);
            
            */
            XRect rectIvaTotalLeyenda = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(260), 83, 9);
            //graphfont.DrawRectangle(XPens.HotPink, rectIvaTotalLeyenda);
            graphfont.DrawString("TOTAL", fontArial8, BrushBlack, rectIvaTotalLeyenda, formatCenter);
            XRect rectTotal = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(268), 83, 6);
            //graphfont.DrawRectangle(XPens.HotPink, rectTotal);
            graphfont.DrawString(sValorTotal, fontArial8, BrushBlack, rectTotal, formatRight);














    


      
 


            xp.X = XUnit.FromMillimeter(11);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorCae, fontArial8, brush, xp);

            xp.X = XUnit.FromMillimeter(43);
            xp.Y = XUnit.FromMillimeter(278);
            graphfont.DrawString(sValorFechaVencimientoCae, fontArial8, brush, xp);



            //Conceptos e Importes
            int valory = 98;
            int maxsplit = 0;
            //Conceptos e Importes
            //1  
            XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
            List<string> sConcepto1 = ParseaCampo(sConcepto[0], 65, 75, ' ');
            graphfont.DrawString(sConcepto1[0], fontArial8, BrushBlack, rectConcepto1, formatLeft);
            if (sConcepto1.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto1[1].Trim(), fontArial8, BrushBlack, rectConcepto1bis, formatLeft);
            }

            XRect rectPrecioUnitario1 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[0], fontArial8, BrushBlack, rectPrecioUnitario1, formatRight);

            XRect rectImporte1 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sImporte[0], fontArial8, BrushBlack, rectImporte1, formatRight);



            //2
            valory = valory + 4;
            XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto2 = ParseaCampo(sConcepto[1], 65, 75, ' ');
            graphfont.DrawString(sConcepto2[0], fontArial8, BrushBlack, rectConcepto2, formatLeft);
            if (sConcepto2.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto2[1].Trim(), fontArial8, BrushBlack, rectConcepto2bis, formatLeft);
            }

            XRect rectPrecioUnitario2 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[1], fontArial8, BrushBlack, rectPrecioUnitario2, formatRight);

            XRect rectImporte2 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
            graphfont.DrawString(sImporte[1], fontArial8, BrushBlack, rectImporte2, formatRight);


            //3
            valory = valory + 4;
            XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto3 = ParseaCampo(sConcepto[2], 65, 75, ' ');
            graphfont.DrawString(sConcepto3[0], fontArial8, BrushBlack, rectConcepto3, formatLeft);
            if (sConcepto3.Count > 1)
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto3[1].Trim(), fontArial8, BrushBlack, rectConcepto3bis, formatLeft);
            }
            XRect rectPrecioUnitario3 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[2], fontArial8, BrushBlack, rectPrecioUnitario3, formatRight);

            XRect rectImporte3 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
            graphfont.DrawString(sImporte[2], fontArial8, BrushBlack, rectImporte3, formatRight);



            //4
            valory = valory + 4;
            XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto4 = ParseaCampo(sConcepto[3], 65, 75, ' ');
            graphfont.DrawString(sConcepto4[0], fontArial8, BrushBlack, rectConcepto4, formatLeft);
            if ((sConcepto4.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto4[2].Trim(), fontArial8, BrushBlack, rectConcepto4bis, formatLeft);
            }

            XRect rectPrecioUnitario4 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[3], fontArial8, BrushBlack, rectPrecioUnitario4, formatRight);

            XRect rectImporte4 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
            graphfont.DrawString(sImporte[3], fontArial8, BrushBlack, rectImporte4, formatRight);



            //5
            valory = valory + 4;
            XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            List<string> sConcepto5 = ParseaCampo(sConcepto[4], 65, 75, ' ');
            graphfont.DrawString(sConcepto5[0], fontArial8, BrushBlack, rectConcepto5, formatLeft);
            if ((sConcepto5.Count > 1) & (maxsplit < 3))
            {
                valory = valory + 4;
                maxsplit++;
                XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
                graphfont.DrawString(sConcepto5[0].Trim(), fontArial8, BrushBlack, rectConcepto5bis, formatLeft);
            }

            XRect rectPrecioUnitario5 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[4], fontArial8, BrushBlack, rectPrecioUnitario5, formatRight);

            XRect rectImporte5 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
            graphfont.DrawString(sImporte[4], fontArial8, BrushBlack, rectImporte5, formatRight);


            //6
            valory = valory + 4;
            XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
            graphfont.DrawString(sConcepto[5], fontArial8, BrushBlack, rectConcepto6, formatLeft);

            XRect rectPrecioUnitario6 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[5], fontArial8, BrushBlack, rectPrecioUnitario6, formatRight);

            XRect rectImporte6 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
            graphfont.DrawString(sImporte[5], fontArial8, BrushBlack, rectImporte6, formatRight);


            //7
            valory = valory + 4;
            XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
            graphfont.DrawString(sConcepto[6], fontArial8, BrushBlack, rectConcepto7, formatLeft);
            XRect rectImporte7 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
            graphfont.DrawString(sImporte[6], fontArial8, BrushBlack, rectImporte7, formatRight);

            //8
            valory = valory + 4;
            XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
            graphfont.DrawString(sConcepto[7], fontArial8, BrushBlack, rectConcepto8, formatLeft);

            XRect rectPrecioUnitario8 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[7], fontArial8, BrushBlack, rectPrecioUnitario8, formatRight);

            XRect rectImporte8 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
            graphfont.DrawString(sImporte[7], fontArial8, BrushBlack, rectImporte8, formatRight);


            //9
            valory = valory + 4;
            XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
            graphfont.DrawString(sConcepto[8], fontArial8, BrushBlack, rectConcepto9, formatLeft);

            XRect rectPrecioUnitario9 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[8], fontArial8, BrushBlack, rectPrecioUnitario9, formatRight);

            XRect rectImporte9 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
            graphfont.DrawString(sImporte[8], fontArial8, BrushBlack, rectImporte9, formatRight);


            //10
            valory = valory + 4;
            XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
            graphfont.DrawString(sConcepto[9], fontArial8, BrushBlack, rectConcepto10, formatLeft);

            XRect rectPrecioUnitario10 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[9], fontArial8, BrushBlack, rectPrecioUnitario10, formatRight);

            XRect rectImporte10 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
            graphfont.DrawString(sImporte[9], fontArial8, BrushBlack, rectImporte10, formatRight);

            //11
            valory = valory + 4;
            XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
            graphfont.DrawString(sConcepto[10], fontArial8, BrushBlack, rectConcepto11, formatLeft);

            XRect rectPrecioUnitario11 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[10], fontArial8, BrushBlack, rectPrecioUnitario11, formatRight);

            XRect rectImporte11 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
            graphfont.DrawString(sImporte[10], fontArial8, BrushBlack, rectImporte11, formatRight);

            //12
            valory = valory + 4;
            XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
            graphfont.DrawString(sConcepto[11], fontArial8, BrushBlack, rectConcepto12, formatLeft);

            XRect rectPrecioUnitario12 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[11], fontArial8, BrushBlack, rectPrecioUnitario12, formatRight);

            XRect rectImporte12 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
            graphfont.DrawString(sImporte[11], fontArial8, BrushBlack, rectImporte12, formatRight);

            //13
            valory = valory + 4;
            XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
            graphfont.DrawString(sConcepto[12], fontArial8, BrushBlack, rectConcepto13, formatLeft);

            XRect rectPrecioUnitario13 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[12], fontArial8, BrushBlack, rectPrecioUnitario13, formatRight);

            XRect rectImporte13 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
            graphfont.DrawString(sImporte[12], fontArial8, BrushBlack, rectImporte13, formatRight);


            //14
            valory = valory + 4;
            XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
            graphfont.DrawString(sConcepto[13], fontArial8, BrushBlack, rectConcepto14, formatLeft);

            XRect rectPrecioUnitario14 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[13], fontArial8, BrushBlack, rectPrecioUnitario14, formatRight);

            XRect rectImporte14 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
            graphfont.DrawString(sImporte[13], fontArial8, BrushBlack, rectImporte14, formatRight);


            //15
            valory = valory + 4;
            XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
            graphfont.DrawString(sConcepto[14], fontArial8, BrushBlack, rectConcepto15, formatLeft);

            XRect rectPrecioUnitario15 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[14], fontArial8, BrushBlack, rectPrecioUnitario15, formatRight);

            XRect rectImporte15 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
            graphfont.DrawString(sImporte[14], fontArial8, BrushBlack, rectImporte15, formatRight);

            //16
            valory = valory + 4;
            XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
            graphfont.DrawString(sConcepto[15], fontArial8, BrushBlack, rectConcepto16, formatLeft);

            XRect rectPrecioUnitario16 = new XRect(XUnit.FromMillimeter(125), XUnit.FromMillimeter(valory), 80, 9);
            graphfont.DrawString(sPrecioUnitario[15], fontArial8, BrushBlack, rectPrecioUnitario16, formatRight);

            XRect rectImporte16 = new XRect(XUnit.FromMillimeter(164), XUnit.FromMillimeter(valory), 80, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
            graphfont.DrawString(sImporte[15], fontArial8, BrushBlack, rectImporte16, formatRight);

            //info adicional 1
            valory = valory + 4;
            XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
            graphfont.DrawString(sInfoAdicional[0], fontArial8, BrushBlack, rectInfoAdicional1, formatLeft);

            //info adicional 2
            valory = valory + 4;
            XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
            graphfont.DrawString(sInfoAdicional[1], fontArial8, BrushBlack, rectInfoAdicional2, formatLeft);

            //info adicional 3
            valory = valory + 4;
            XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(14), XUnit.FromMillimeter(valory), 268, 9);
            //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
            graphfont.DrawString(sInfoAdicional[2], fontArial8, BrushBlack, rectInfoAdicional3, formatLeft);

            /*
            if (!string.IsNullOrEmpty(sCodBarra2))
            {
                xp.X = XUnit.FromMillimeter(62);
                xp.Y = XUnit.FromMillimeter(255);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode2.Text = sCodBarra2;//value of code to draw on page
                BarCode2.StartChar = Convert.ToChar("*");
                BarCode2.EndChar = Convert.ToChar("*");
                BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(242), Convert.ToDouble(17)));
                BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                BarCode2.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode2, xp);
                xp.X = XUnit.FromMillimeter(66);
                xp.Y = XUnit.FromMillimeter(265);
                graphfont.DrawString(sCodBarra2, fontArial9, brush, xp);
            }
            */


            XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(279), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
            graphfont.DrawString(sValorAfipInforma1, fontArial6, brush, recValorAFipInforma1, formatLeft);
            XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(10), XUnit.FromMillimeter(282), 350, 8);
            //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
            graphfont.DrawString(sValorAfipInforma2, fontArial6, brush, recValorAFipInforma2, formatLeft);


            if (dFechaFactura > dFechaBarraAfipSalida3_6_4)
            {

                xp.X = XUnit.FromMillimeter(185);
                xp.Y = XUnit.FromMillimeter(290);
                graphfont.DrawString(sOriginal, fontArial10, BrushBlack, xp);

                // sCodBarraAfip
                if (!string.IsNullOrEmpty(sCodBarraAfip.Trim()))
                {
                    xp.X = XUnit.FromMillimeter(22);
                    xp.Y = XUnit.FromMillimeter(245);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(253), 263, 9);
                    //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontArial7, BrushBlack, rectBarraAfip, formatCenter);
                }
            }
            graphfont.Dispose();


        }




        private string getImageAviso2015(string sFecha)
        {
            DateTime fechaElegida = System.Convert.ToDateTime(sFecha);
            string retvalue = string.Empty;
            Dictionary<DateTime, string> myImagenes = new Dictionary<DateTime, string>();
            myImagenes[Convert.ToDateTime("01/01/1980")] = "avisoFA_03.png";
            myImagenes[Convert.ToDateTime("23/12/2015")] = "avisoFA_04.png";

            foreach (var item in myImagenes)
            {
                if (fechaElegida >= item.Key)
                    retvalue = (item.Value);
            }

            return retvalue;

        }

        private string getImageAviso(string sFecha)
        {
            DateTime fechaElegida = System.Convert.ToDateTime(sFecha);
            string retvalue = string.Empty;
            Dictionary<DateTime, string> myImagenes = new Dictionary<DateTime, string>();
            myImagenes[Convert.ToDateTime("01/01/1980")] = "avisoFA_01.png";
            myImagenes[Convert.ToDateTime("17/06/2015")] = "avisoFA.png";
            myImagenes[Convert.ToDateTime("03/08/2015")] = "avisoFA_02.png";

            foreach (var item in myImagenes)
            {
                if (fechaElegida >= item.Key)
                    retvalue = (item.Value);
            }

            return retvalue;

        }




        private string getImageFasal2_A(string sFecha)
        {
            DateTime fechaElegida = System.Convert.ToDateTime(sFecha);
            string retvalue = string.Empty;
            Dictionary<DateTime, string> myImagenes = new Dictionary<DateTime, string>();
            myImagenes[Convert.ToDateTime("01/01/1980")] = "fasal2_a_1.png";
            myImagenes[Convert.ToDateTime("01/08/2015")] = "fasal2_a_1_02.png";


            foreach (var item in myImagenes)
            {
                if (fechaElegida >= item.Key)
                    retvalue = (item.Value);
            }

            return retvalue;

        }


        /// <summary>
        /// 12/11/2015 Metodo para cortar fechas basado en pixeles y no en caracteres
        /// </summary>
        /// <param name="Parrafo"></param>
        /// <param name="font"></param>
        /// <param name="dRango"></param>
        /// <returns></returns>
        private List<string> ParseaCampoLenght(string Parrafo, XFont font, double dRango)
        {
            List<string> retvalue = new List<string>();
            if (!string.IsNullOrEmpty(Parrafo.Trim()))
            {
                PdfDocument pf1 = new PdfDocument();
                PdfPage pdfPage = pf1.AddPage();

                XGraphics graph3 = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);
 

                var size = graph3.MeasureString(Parrafo, font);
                int a = 1;
                int rango = (int)(dRango);

                if (size.Width > dRango)
                {
                    int contador = 1;
                    int lastspace = 0;
                    double auxSize;

                    while ((a < rango)&&(contador<Parrafo.Length))
                    {
                        if (Parrafo.Substring(contador, 1) == " ")
                            lastspace = contador;

                        var size1 = graph3.MeasureString(Parrafo.Substring(0, contador), font);
                        auxSize = size1.Width;
                        contador++;
                        a = (int)(auxSize);
                    }
                    retvalue.Add(Parrafo.Substring(0, lastspace));

                    a = 1;
                    contador = 1;
                    string subparrafo = Parrafo.Substring(lastspace).TrimStart();
                    int maxlenght = subparrafo.Length;
                    lastspace = 0;
                    while ((a < rango) && (contador < maxlenght))
                    {

                        if (subparrafo.Substring(contador, 1) == " ")
                            lastspace = contador;

                        var size1 = graph3.MeasureString(subparrafo.Substring(0, contador), font);
                        auxSize = size1.Width;
                        contador++;
                        a = (int)(auxSize);
                    }


                    if (contador == (maxlenght))
                      retvalue.Add(subparrafo);
                    else
                      retvalue.Add(subparrafo.Substring(0, lastspace));

                }
                else
                {
                    retvalue.Add(Parrafo);
                }
                graph3.Dispose();
                pdfPage = null;
                pf1 = null;
            }
            else 
            {
                retvalue.Add(Parrafo);
            }
            return retvalue;

        }




        private void FgetPageFacturaBsal1Mod092015_fi(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {


                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa;
                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." + ca.NumFactCuatro + " - " + ca.NumFactOcho; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido;
                string sDomicilio1 = ca.DomicilioUno;
                string sDomicilio2 = ca.DomicilioDos;
                string sDomicilio3 = ca.DomicilioTres;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento;
                string sNumeroCliente = ca.NumeroCliente; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa; // "30 69642889 8";
                string sNumConv = ca.NumConv;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip;

                string sPeriodo = ca.Periodo;// "May/15";
                string sIVA = ca.CategoriaIva;
                string sCuit = ca.NumCuit;
                string sDni = ca.Documento;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01;
                sConcepto[1] = ca.Concepto_02;
                sConcepto[2] = ca.Concepto_03;
                sConcepto[3] = ca.Concepto_04;
                sConcepto[4] = ca.Concepto_05;
                sConcepto[5] = ca.Concepto_06;
                sConcepto[6] = ca.Concepto_07;
                sConcepto[7] = ca.Concepto_08;
                sConcepto[8] = ca.Concepto_09;
                sConcepto[9] = ca.Concepto_10;
                sConcepto[10] = ca.Concepto_11;
                sConcepto[11] = ca.Concepto_12;
                sConcepto[12] = ca.Concepto_13;
                sConcepto[13] = ca.Concepto_14;
                sConcepto[14] = ca.Concepto_15;
                sConcepto[15] = ca.Concepto_16;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01)) ? "$ " + ca.Importe_01 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02)) ? "$ " + ca.Importe_02 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03)) ? "$ " + ca.Importe_03 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04)) ? "$ " + ca.Importe_04 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05)) ? "$ " + ca.Importe_05 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06)) ? "$ " + ca.Importe_06 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07)) ? "$ " + ca.Importe_07 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08)) ? "$ " + ca.Importe_08 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09)) ? "$ " + ca.Importe_09 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10)) ? "$ " + ca.Importe_10 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11)) ? "$ " + ca.Importe_11 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12)) ? "$ " + ca.Importe_12 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13)) ? "$ " + ca.Importe_13 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14)) ? "$ " + ca.Importe_14 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15)) ? "$ " + ca.Importe_15 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16)) ? "$ " + ca.Importe_16 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro + ca.NumFactOcho;

                string sValorCae = "CAE: " + ca.NumCae;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento)) ? FormateoFechaCae(ca.CaeFechaVencimiento) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                if (!string.IsNullOrEmpty(ca.PieFactura))
                {
                    if (ca.PieFactura.Length > 140)
                    {
                        sValorAfipInforma1 = ca.PieFactura.Substring(0, 140);
                        sValorAfipInforma2 = ca.PieFactura.Substring(140, (ca.PieFactura.Length - 141));
                    }
                    else
                        sValorAfipInforma1 = ca.PieFactura;
                }


                string c1 = ca.c1;
                string c2 = ca.c2;
                string c3 = (!string.IsNullOrEmpty(ca.c3)) ? "$ " + ca.c3 : " ";
                string c4 = ca.c4;
                string c5 = ca.c5;
                ca.c6 = ca.c6.Trim();
                string c6 = (!string.IsNullOrEmpty(ca.c6)) ? "$ " + ca.c6 : " ";
                string c7 = ca.c7;
                string c8 = ca.c8;
                ca.c9 = ca.c9.Trim();
                string c9 = (!string.IsNullOrEmpty(ca.c9)) ? "$ " + ca.c9 : " ";
                string c10 = (!string.IsNullOrEmpty(ca.EstadoMontoFacturadocupon)) ? "$ " + ca.EstadoMontoFacturadocupon : " ";
                string c11 = (!string.IsNullOrEmpty(ca.ValorTotalCupon)) ? "$ " + ca.ValorTotalCupon : " ";



                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura;

                    }
                    else
                        sValorAfipInforma1 = lValorPie[0];
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1;
                string sCodBarra3 = ca.CodBarra2;
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                //Leyendas Cambiables
                string p1 = ca.EtiqCompAp1;
                string p2 = ca.EtiqFvAp1;
                string p3 = ca.EtiqMfAp1;
                string p4 = ca.EtiqCompBp1;
                string p5 = ca.EtiqFvBp1;
                string p6 = ca.EtiqMfBp1;
                string p7 = ca.EtiqCompTp1;
                string p8 = ca.EtiqFvTp1;
                string p9 = ca.EtiqMfTp1;
                string p10 = "MONTO FACTURADO";
                string p11 = "SALDO TOTAL";


                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;


                XStringFormat formatFarLeft = new XStringFormat();
                formatFarLeft.LineAlignment = XLineAlignment.Far;
                formatFarLeft.Alignment = XStringAlignment.Near;



                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);

                pngLogopath = sImageRoute + "centros_a_cliente_fi.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese

                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe

                graph.DrawRectangle(BrushVerdeAntina, 121, 166, 31, 5);  //rectangulo subtotal iva etc//rectangulo subtotal iva etc

                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

                //      graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 188, 49, 20, 3, 3);  //registrese
                //  graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                //   graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 75, 23, 16, 13, 3, 3); //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago


                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 121, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento

                graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar


                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }





                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 257, 42, 8);//g3 -> Antina

                if (ca.Empresa != "Eurosat S.A.")
                {
                    // pngLogopath = sImageRoute + "avisoFA_03.png"; //ca.ImagenesComprobante[0];
                    pngLogopath = sImageRoute + getImageAviso2015(sFechaFactura);
                    XImage imageAviso = XImage.FromFile(pngLogopath);
                    graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
                }
                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 267, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 267, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 267, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 273, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(32);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(79);
                xp.Y = XUnit.FromMillimeter(34);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold8, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(15), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);


                //Leyfact

                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);

                    if (ca.CodFact == "CÓDIGO 08")
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    else
                        graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);

                }
                //Leyfact
                xp.X = XUnit.FromMillimeter(115);
                xp.Y = XUnit.FromMillimeter(26);
                if (ca.CodFact == "CÓDIGO 08")
                    xp.X = XUnit.FromMillimeter(119);
                else
                    xp.X = XUnit.FromMillimeter(115);
                // sNumFact = "Nro.";

                graphfont.DrawString(sNumFact, fontGothamBook9, BrushBoleta2015_1, xp);


                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);


                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);



                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(9), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(9), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);


                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);


                //total a pagar
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(26), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);


                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);



                //Nombre y Apellido
                int rangodesde;
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 189);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }


                //Domicilio 1
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8, 189);// (sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }


                //Domicilio 2
                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 189);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);

                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 192);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }






                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(45);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(45), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(45), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(52);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(50), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(50), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(61), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(62);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(61), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);




                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);


                /*

                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(162);
                xp.Y = XUnit.FromMillimeter(132);
                graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(137);
                graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(147);
                graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushBlack, xp);

                */

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


                //  if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                //  {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Int. Assef 106", fontGothamBook7, BrushBlack, xp);
                /*   }
                   else
                   {
                       xp.X = XUnit.FromMillimeter(171);
                       xp.Y = XUnit.FromMillimeter(174);
                       graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                       xp.X = XUnit.FromMillimeter(163);
                       xp.Y = XUnit.FromMillimeter(177);
                       graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                  / }*/

                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);


                /*
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(194);
                graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(155);
                xp.Y = XUnit.FromMillimeter(197);
                graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(204);
                graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushBlack, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);





                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);

                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);

                //Leyendas Variables
                //aqalizo cada tenxto para ver si son 1 o 2 reenglones


                //P1  
                string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP1_0;
                XRect rectP1_1;
                if (SplitP1.Length > 1)
                {
                    rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    rectP1_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(225), 67, 7);
                    //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                    graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                    graphfont.DrawString(SplitP1[1], fontGothamBold7, BrushBoleta2015_1, rectP1_1, formatRight);
                }
                else
                {

                    rectP1_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(224), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    graphfont.DrawString(SplitP1[0], fontGothamBold7, BrushBoleta2015_1, rectP1_0, formatRight);
                }


                //P2
                string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP2_0;
                XRect rectP2_1;
                if (SplitP2.Length > 1)
                {
                    rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(223), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    rectP2_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(226), 67, 7);
                    //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                    graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                    graphfont.DrawString(SplitP2[1], fontGothamBold7, BrushBoleta2015_1, rectP2_1, formatRight);
                }
                else
                {

                    rectP2_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(224), 67, 7);
                    //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    graphfont.DrawString(SplitP2[0], fontGothamBold7, BrushBoleta2015_1, rectP2_0, formatRight);
                }



                //P3
                string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP3_0;
                XRect rectP3_1;
                if (SplitP3.Length > 1)
                {
                    rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(222), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    rectP3_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(225), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                    graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                    graphfont.DrawString(SplitP3[1], fontGothamBold7, BrushBoleta2015_1, rectP3_1, formatRight);
                }
                else
                {

                    rectP3_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    graphfont.DrawString(SplitP3[0], fontGothamBold7, BrushBoleta2015_1, rectP3_0, formatRight);
                }





                //P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(231), 67, 7);  //-6
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(233), 67, 7);  //-3
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatRight);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(232), 67, 7);  //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatRight);
                }



                //P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatRight);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatRight);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatRight);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatRight);
                }




                //P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(269), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(272), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatRight);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatRight);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(18), XUnit.FromMillimeter(268), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatRight);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(269), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(272), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatRight);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatRight);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(77), XUnit.FromMillimeter(268), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatRight);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(269), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(272), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatRight);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, BrushBoleta2015_1, rectP9_1, formatRight);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(136), XUnit.FromMillimeter(268), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatRight);
                }


                XRect rectC1 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(224), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC1);
                graphfont.DrawString(c1, fontGothamBold7, BrushBoleta2015_1, rectC1, formatRight);


                XRect rectC2 = new XRect(XUnit.FromMillimeter(109), XUnit.FromMillimeter(224), 45, 5);
                //   graphfont.DrawRectangle(XPens.Red, rectC2);
                graphfont.DrawString(c2, fontGothamBold7, BrushBoleta2015_1, rectC2, formatRight);

                XRect rectC3 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(224), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                graphfont.DrawString(c3, fontGothamBold7, BrushBoleta2015_1, rectC3, formatRight);


                XRect rectC4 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(232), 45, 5);
                //graphfont.DrawRectangle(XPens.Red, rectC1);
                if (!string.IsNullOrEmpty(c4.Trim()))
                    graphfont.DrawString(c4, fontGothamBold7, BrushBoleta2015_1, rectC4, formatRight);


                XRect rectC5 = new XRect(XUnit.FromMillimeter(109), XUnit.FromMillimeter(232), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC2);
                if (!string.IsNullOrEmpty(c5.Trim()))
                    graphfont.DrawString(c5, fontGothamBold7, BrushBoleta2015_1, rectC5, formatRight);

                XRect rectC6 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(232), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                if (!string.IsNullOrEmpty(c6.Trim()))
                    graphfont.DrawString(c6, fontGothamBold7, BrushBoleta2015_1, rectC6, formatRight);



                XRect rectC7 = new XRect(XUnit.FromMillimeter(50), XUnit.FromMillimeter(268), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC1);
                if (!string.IsNullOrEmpty(c7.Trim()))
                    graphfont.DrawString(c7, fontGothamBold7, BrushBoleta2015_1, rectC7, formatRight);

                XRect rectC8 = new XRect(XUnit.FromMillimeter(104), XUnit.FromMillimeter(268), 65, 5);
                //    graphfont.DrawRectangle(XPens.Red, rectC8);
                if (!string.IsNullOrEmpty(c8.Trim()))
                    graphfont.DrawString(c8, fontGothamBold7, BrushBoleta2015_1, rectC8, formatCenter);

                XRect rectC9 = new XRect(XUnit.FromMillimeter(169), XUnit.FromMillimeter(268), 45, 5);
                // graphfont.DrawRectangle(XPens.Red, rectC3);
                if (!string.IsNullOrEmpty(c9.Trim()))
                    graphfont.DrawString(c9, fontGothamBold7, BrushBoleta2015_1, rectC9, formatRight);

                /*
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 267, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 267, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 267, 25, 5, 3, 3);  //r11
           */

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold8, BrushBoleta2015_1, xp);
                XRect rectC10 = new XRect(XUnit.FromMillimeter(150), XUnit.FromMillimeter(216), 100, 8);
                // graphfont.DrawRectangle(XPens.Red, rectC10);
                if (!string.IsNullOrEmpty(c10.Trim()))
                    graphfont.DrawString(c10, fontGothamBold8, BrushBoleta2015_1, rectC10, formatRight);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold8, BrushBoleta2015_1, xp);
                XRect rectC11 = new XRect(XUnit.FromMillimeter(150), XUnit.FromMillimeter(258), 100, 8);
                //    graphfont.DrawRectangle(XPens.Red, rectC11);
                if (!string.IsNullOrEmpty(c11.Trim()))
                    graphfont.DrawString(c11, fontGothamBold8, BrushBoleta2015_1, rectC11, formatRight);



                XRect recValorAFipInforma1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(196), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma1);
                if (!string.IsNullOrEmpty(sValorAfipInforma1.Trim()))
                    graphfont.DrawString(sValorAfipInforma1, fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma1, formatLeft);

                XRect recValorAFipInforma2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(199), 350, 8);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorAFipInforma2);
                if (!string.IsNullOrEmpty(sValorAfipInforma2.Trim()))
                    graphfont.DrawString(sValorAfipInforma2.TrimStart(), fontGothamBook6, BrushBoleta2015_1, recValorAFipInforma2, formatLeft);

                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {
                    xp.X = XUnit.FromMillimeter(32);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    //   xp.X = XUnit.FromMillimeter(45);
                    //  xp.Y = XUnit.FromMillimeter(194);
                    //  graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);
                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(191), 264, 9);
                    //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);
                }


                if ((ca.DebitoAutomatico == false))
                {


                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(242);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(58);
                        xp.Y = XUnit.FromMillimeter(253);
                        graphfont.DrawString(sCodBarra2, fontGothamBook9, BrushBoleta2015_1, xp);
                    }



                }
                else
                {
                    if (sTipoComprobante != "3")
                    {
                        xp.X = XUnit.FromMillimeter(61);
                        xp.Y = XUnit.FromMillimeter(247);
                        graphfont.DrawString(ca.LeyendaDebitoAutomatico, fontGothamBook7, BrushBoleta2015_1, xp);
                    }
                }

                if (!string.IsNullOrEmpty(sCodBarra3))
                {
                    xp.X = XUnit.FromMillimeter(57);
                    xp.Y = XUnit.FromMillimeter(276);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCode3.Text = sCodBarra3;//value of code to draw on page
                    BarCode3.StartChar = Convert.ToChar("*");
                    BarCode3.EndChar = Convert.ToChar("*");
                    BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCode3.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCode3, xp);
                    xp.X = XUnit.FromMillimeter(58);
                    xp.Y = XUnit.FromMillimeter(287);
                    graphfont.DrawString(sCodBarra3, fontGothamBook9, BrushBoleta2015_1, xp);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);

                graphfont.RotateTransform(90);
                graphfont.DrawString(sCodBarra1, fontArial6, XBrushes.Black, new XPoint(140, -55));

                graphfont.Dispose();




            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message + " " + ex.StackTrace.ToString(), "FgetPageFacturaBsal1Mod092015");

            }

        }





        private void FgetPageFacturaBsal1Mod092015_2_fi(ClassParametrosTelnetPDF cs, Comprobantes ca, PdfDocument pdf)
        {

            try
            {


                PdfPage pdfPage = pdf.AddPage();
                //asigno valores a la factura
                string sNombreEmpresa = ca.NombreEmpresa2;





                string sTipoFact = ca.TipoFact;
                string sCofFact = ca.CodFact;
                string sLeyFact = ca.LeyFact;
                string sNumFact = "Nro." + ca.NumFactCuatro2 + " - " + ca.NumFactOcho2; //  0020 - 00003639";
                string sNombreApellido = ca.NombreApellido2;// "ELECTRONICA MEGATONE SA"; 
                string sDomicilio1 = ca.DomicilioUno2;
                string sDomicilio2 = ca.DomicilioDos2;
                string sDomicilio3 = ca.DomicilioTres2;
                string sEstadoTotalPagar = "$ " + ca.EstadoTotalPagar2.Replace(".", ",");
                string sFechaVencimiento = ca.FechaVencimiento2; // "09/05/2015";
                string sNumeroCliente = ca.NumeroCliente2; // "557396";
                string sNumCuitEmpresa = ca.NumCuitEmpresa2; // "30 69642889 8";
                string sNumConv = ca.NumConv2;            //"901 221621 2";
                string sFechaInicio = ca.FechaInicio2;  // "05/1999";
                string sFechaEstadoCuenta = ca.FechaEstadoCuenta_2;
                string sSaldoAnterior = "$ " + ca.EstadoSaldoAnterior_2.Replace(".", ",");
                string sMontoActual = "$ " + ca.EstadoMontoFacturado_2.Replace(".", ",");
                string sTotalaPagar = "$ " + ca.ValorTotal2.Replace(".", ",");
                string sFechaFactura = ca.FechaFactura2;  //"04/05/2015";
                DateTime dFechaFactura = System.Convert.ToDateTime(ca.FechaFactura2);
                DateTime dFechaCambioImagenAviso = new DateTime(2015, 06, 17);
                string sCodBarraAfip = ca.BarraAfip2;

                string sPeriodo = ca.Periodo2;// "May/15";
                string sIVA = ca.CategoriaIva2;
                string sCuit = ca.NumCuit2;

                string sOriginal = "ORIGINAL";

                string[] sConcepto = new string[16];
                string[] sImporte = new string[16];

                sConcepto[0] = ca.Concepto_01_2;
                sConcepto[1] = ca.Concepto_02_2;
                sConcepto[2] = ca.Concepto_03_2;
                sConcepto[3] = ca.Concepto_04_2;
                sConcepto[4] = ca.Concepto_05_2;
                sConcepto[5] = ca.Concepto_06_2;
                sConcepto[6] = ca.Concepto_07_2;
                sConcepto[7] = ca.Concepto_08_2;
                sConcepto[8] = ca.Concepto_09_2;
                sConcepto[9] = ca.Concepto_10_2;
                sConcepto[10] = ca.Concepto_11_2;
                sConcepto[11] = ca.Concepto_12_2;
                sConcepto[12] = ca.Concepto_13_2;
                sConcepto[13] = ca.Concepto_14_2;
                sConcepto[14] = ca.Concepto_15_2;
                sConcepto[15] = ca.Concepto_16_2;

                sImporte[0] = (!string.IsNullOrEmpty(ca.Importe_01_2)) ? "$ " + ca.Importe_01_2 : " ";
                sImporte[1] = (!string.IsNullOrEmpty(ca.Importe_02_2)) ? "$ " + ca.Importe_02_2 : " ";
                sImporte[2] = (!string.IsNullOrEmpty(ca.Importe_03_2)) ? "$ " + ca.Importe_03_2 : " ";
                sImporte[3] = (!string.IsNullOrEmpty(ca.Importe_04_2)) ? "$ " + ca.Importe_04_2 : " ";
                sImporte[4] = (!string.IsNullOrEmpty(ca.Importe_05_2)) ? "$ " + ca.Importe_05_2 : " ";
                sImporte[5] = (!string.IsNullOrEmpty(ca.Importe_06_2)) ? "$ " + ca.Importe_06_2 : " ";
                sImporte[6] = (!string.IsNullOrEmpty(ca.Importe_07_2)) ? "$ " + ca.Importe_07_2 : " ";
                sImporte[7] = (!string.IsNullOrEmpty(ca.Importe_08_2)) ? "$ " + ca.Importe_08_2 : " ";
                sImporte[8] = (!string.IsNullOrEmpty(ca.Importe_09_2)) ? "$ " + ca.Importe_09_2 : " ";
                sImporte[9] = (!string.IsNullOrEmpty(ca.Importe_10_2)) ? "$ " + ca.Importe_10_2 : " ";
                sImporte[10] = (!string.IsNullOrEmpty(ca.Importe_11_2)) ? "$ " + ca.Importe_11_2 : " ";
                sImporte[11] = (!string.IsNullOrEmpty(ca.Importe_12_2)) ? "$ " + ca.Importe_12_2 : " ";
                sImporte[12] = (!string.IsNullOrEmpty(ca.Importe_13_2)) ? "$ " + ca.Importe_13_2 : " ";
                sImporte[13] = (!string.IsNullOrEmpty(ca.Importe_14_2)) ? "$ " + ca.Importe_14_2 : " ";
                sImporte[14] = (!string.IsNullOrEmpty(ca.Importe_15_2)) ? "$ " + ca.Importe_15_2 : " ";
                sImporte[15] = (!string.IsNullOrEmpty(ca.Importe_16_2)) ? "$ " + ca.Importe_16_2 : " ";


                string[] sInfoAdicional = new string[3];

                sInfoAdicional[0] = ca.InfoAdicional01;
                sInfoAdicional[1] = ca.InfoAdicional02;
                sInfoAdicional[2] = ca.InfoAdicional03;


                string[] sAbonoItem = new string[6];
                sAbonoItem[0] = " ";// ca.AbonoItem_01;
                sAbonoItem[1] = " ";//ca.AbonoItem_02;
                sAbonoItem[2] = " ";//ca.AbonoItem_03;
                sAbonoItem[3] = " ";//ca.AbonoItem_04;
                sAbonoItem[4] = " ";//ca.AbonoItem_05;
                sAbonoItem[5] = " ";//ca.AbonoItem_06;

                string sEtiqIvaInscripto = "IVA INSC 21%";
                string sValorNetoGravado = "$ " + ca.ValorNetoGravado_2.Replace(".", ",");
                string sValorIvaInscripto = "$ " + ca.ValorIvaInscripto_2.Replace(".", ",");
                string sValorIvaNoInscripto = "$ " + ca.ValorIvaNoInscripto.Replace(".", ",");
                string sValorIIBBBSAS = "$ " + ca.ValorPErcibIIBBsAs_2.Replace(".", ",");
                string sValorTotal = "$ " + ca.ValorTotal.Replace(".", ",");
                string sFacturaNroMF = ca.NumFactCuatro2 + ca.NumFactOcho2;

                string sValorCae = "CAE: " + ca.NumCae2;
                string sfechaCae = (!string.IsNullOrEmpty(ca.CaeFechaVencimiento2)) ? FormateoFechaCae(ca.CaeFechaVencimiento2) : " ";
                string sValorFechaVencimientoCae = "Fecha Vto.: " + sfechaCae;

                string valorPie = ca.PieFactura;
                string sValorAfipInforma1 = " ";
                string sValorAfipInforma2 = " ";

                string sDni = ca.Documento2;

                if (!string.IsNullOrEmpty(valorPie))
                {
                    List<string> lValorPie = ParseaCampo(valorPie, 90, 100, ' ');
                    if (lValorPie.Count == 1)
                    {
                        sValorAfipInforma1 = ca.PieFactura;

                    }
                    else
                        sValorAfipInforma1 = lValorPie[0];
                    sValorAfipInforma2 = lValorPie[1];
                }

                string sCodBarra1 = ca.CodBarraCorreo;
                string sCodBarra2 = ca.CodBarra1; //
                string sCodBarra3 = ca.CodBarra2; //
                string sTipoComprobante = ca.Scomprobante.Substring(0, 1);
                string pngLogopath;


                //Leyendas Cambiables
                string p1 = string.Empty;
                string p2 = string.Empty;
                string p3 = string.Empty;
                string p4 = string.Empty;
                string p5 = string.Empty;
                string p6 = string.Empty;
                string p7 = string.Empty;
                string p8 = string.Empty;
                string p9 = string.Empty;
                string p10 = string.Empty;
                string p11 = string.Empty;

                string sGothamBold;
                sGothamBold = cs.FontRoute + "ufonts.com_gotham-bold.ttf";
                privateFonts.AddFontFile(sGothamBold);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBold = new Font(privateFonts.Families[0], 25, FontStyle.Bold, GraphicsUnit.Point);

                string sGothamBook;
                sGothamBook = cs.FontRoute + "ufonts.com_gotham-book.ttf";
                privateFonts.AddFontFile(sGothamBook);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamBook = new Font(privateFonts.Families[1], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium;
                sGothamMedium = cs.FontRoute + "ufonts.com_gotham-medium.ttf";
                privateFonts.AddFontFile(sGothamMedium);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMedium = new Font(privateFonts.Families[2], 25, FontStyle.Regular, GraphicsUnit.Point);

                string sGothamMedium1;
                sGothamMedium1 = cs.FontRoute + "ufonts.com_gotham-medium-italic.ttf";
                privateFonts1.AddFontFile(sGothamMedium1);  //ufonts.com_gotham-bold.ttf
                System.Drawing.Font fontGothamMediumItalic = new Font(privateFonts1.Families[0], 25, FontStyle.Italic, GraphicsUnit.Point);

                XFont fontGothamBold4 = new XFont(fontGothamBold.FontFamily, 4, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold5 = new XFont(fontGothamBold.FontFamily, 5, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold6 = new XFont(fontGothamBold.FontFamily, 6, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold7 = new XFont(fontGothamBold.FontFamily, 7, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold8 = new XFont(fontGothamBold.FontFamily, 8, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold9 = new XFont(fontGothamBold.FontFamily, 9, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold28 = new XFont(fontGothamBold.FontFamily, 28, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBold29 = new XFont(fontGothamBold.FontFamily, 29, XFontStyle.Bold, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamBook5 = new XFont(fontGothamBook.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook6 = new XFont(fontGothamBook.FontFamily, 6, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook7 = new XFont(fontGothamBook.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook8 = new XFont(fontGothamBook.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamBook9 = new XFont(fontGothamBook.FontFamily, 9, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));

                XFont fontGothamMedium5 = new XFont(fontGothamMedium.FontFamily, 5, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium7 = new XFont(fontGothamMedium.FontFamily, 7, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium8 = new XFont(fontGothamMedium.FontFamily, 8, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11 = new XFont(fontGothamMedium.FontFamily, 11, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13 = new XFont(fontGothamMedium.FontFamily, 13, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium14 = new XFont(fontGothamMedium.FontFamily, 14, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium15 = new XFont(fontGothamMedium.FontFamily, 15, XFontStyle.Regular, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium24Italic = new XFont(fontGothamMediumItalic.FontFamily, 24, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium13Italic = new XFont(fontGothamMediumItalic.FontFamily, 13, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                XFont fontGothamMedium11Italic = new XFont(fontGothamMediumItalic.FontFamily, 11, XFontStyle.Italic, new XPdfFontOptions(PdfFontEmbedding.Always));
                var @sImageRoute = cs.Imageroute;
                // sImageRoute=sImageRoute.Replace("\\", @"\");

                //Lineas
                XPen LineasRectangulo = new XPen(XColors.Black, 0.34);
                XPen LineasFactura = new XPen(XColors.Black, 0.22);

                //Alineaciones
                XStringFormat formatRight = new XStringFormat();
                formatRight.Alignment = XStringAlignment.Far;

                XStringFormat formatLeft = new XStringFormat();
                formatLeft.Alignment = XStringAlignment.Near;

                XStringFormat formatCenter = new XStringFormat();
                formatCenter.Alignment = XStringAlignment.Center;

                XStringFormat formatFar = new XStringFormat();
                formatFar.LineAlignment = XLineAlignment.Far;

                XStringFormat formatFarRight = new XStringFormat();
                formatFarRight.LineAlignment = XLineAlignment.Far;
                formatFarRight.Alignment = XStringAlignment.Far;





                XGraphics graph = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Millimeter);


                pngLogopath = sImageRoute + "centros_a_cliente_fi.png";
                XImage imagecc = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagecc, 152, 128, 49, 23);//centros de atencion al cliente

                pngLogopath = sImageRoute + "registrese.png";
                XImage imagereg = XImage.FromFile(pngLogopath);
                graph.DrawImage(imagereg, 152, 190, 49, 18);//registrese

                //Rectangulos de Estado de Cuenta al
                graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 49, 5, 3, 3);  //r1
                graph.DrawRectangle(BrushVerdeAntina, 152, 8, 3, 3);
                graph.DrawRectangle(BrushVerdeAntina, 152, 10, 49, 3);


                //rectangulos Verde Antina
                graph.DrawRectangle(BrushVerdeAntina, 6, 70, 146, 7);  //Rectangulo Concepto Importe

                graph.DrawRectangle(BrushVerdeAntina, 121, 166, 31, 5);  //rectangulo subtotal iva etc


                graph.DrawRectangle(BrushVerdeAntina, 152, 50, 49, 6);  //de su interes

                // graph.DrawRectangle(BrushVerdeAntina, 152, 128, 49, 23); //Centro de Atencion al Cliente

                //      graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 188, 49, 20, 3, 3);  //registrese
                //      graph.DrawRectangle(BrushVerdeAntina, 152, 188, 49, 3); //registrese
                //      graph.DrawRectangle(BrushVerdeAntina, 152, 206, 5, 2); //registrese
                //rectangulos Verde Antina

                graph.DrawRoundedRectangle(LineasRectangulo, 6, 8, 195, 200, 5, 5);  //r1  -> Cuerpo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 75, 23, 16, 13, 3, 3); //r2  -> Cuadrado Tipo Factura
                graph.DrawRoundedRectangle(LineasRectangulo, 6, 211, 195, 80, 4, 4);  //r3 -> Talonario Pago


                graph.DrawLine(LineasFactura, 152, 8, 152, 208);  //l1 linea que divide Total a pagar con estado de cuenta
                graph.DrawLine(LineasFactura, 6, 41, 152, 41);  //l2
                // graph.DrawLine(LineasFactura, 108, 71, 108, 153);  //l3


                //graph.DrawLine(LineasFactura, 6, 207, 204, 207);  //l4

                graph.DrawLine(LineasFactura, 121, 166, 152, 166);  //l5Separa conceptos de Subptotal|IVA|
                graph.DrawLine(LineasFactura, 6, 181, 152, 181);  //l6 Seàra ñps valores de los datos de CAE Fecha Vencimiento


                graph.DrawLine(LineasFactura, 92, 8, 92, 22);  //l7    Linea Horizontal del Cuadrado Total a Pagar          
                graph.DrawLine(LineasFactura, 92, 22, 152, 22);  //l8



                // graph.DrawLine(LineasFactura, 152, 14, 204, 14);  //l9
                graph.DrawLine(LineasFactura, 152, 24, 201, 24);  //l10 ->Separa Monto Actual con total a Pagar


                if (ca.EsCopia == true)
                {
                    pngLogopath = sImageRoute + "watermark_copia_fiel.png";
                    XImage imagewatermark = XImage.FromFile(pngLogopath);  //g1
                    graph.DrawImage(imagewatermark, 23, 131, 67, 7);
                }


                //logo 
                pngLogopath = sImageRoute + "logo092015.png";
                XImage image = XImage.FromFile(pngLogopath);
                graph.DrawImage(image, 10, 10, 60, 12);//g1 -> Antina

                graph.DrawImage(image, 22, 214, 42, 8);//g2 -> Antina

                graph.DrawImage(image, 22, 257, 42, 8);//g3 -> Antina

                //En la segunda hoja no debe mostrar de su interes
                /*
                pngLogopath = sImageRoute +  "avisoFA_03.png"; //ca.ImagenesComprobante[0];
                XImage imageAviso = XImage.FromFile(pngLogopath);
                graph.DrawImage(imageAviso, 153, 57, 47, 65);   //G2
                */
                //Lineas  que separan Subtotal|IVa Insc|Iva No Insc. .............
                // graph.DrawLine(LineasFactura, 33, 174, 33, 191);  //l11
                //   graph.DrawLine(LineasFactura, 60, 174, 60, 191);  //l11            
                //     graph.DrawLine(LineasFactura, 88, 174, 88, 191);  //l11
                graph.DrawLine(LineasFactura, 121, 70, 121, 181);  //l11


                //cupones de pago
                graph.DrawRoundedRectangle(LineasRectangulo, 162, 223, 25, 5, 3, 3);  //r3
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 223, 25, 5, 3, 3);  //r4
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 223, 25, 5, 3, 3);  //r5  -> Comprobante Television


                graph.DrawRoundedRectangle(LineasRectangulo, 162, 231, 25, 5, 3, 3);  //r6
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 231, 25, 5, 3, 3);  //r7
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 231, 25, 5, 3, 3);  //r8  -> Comprobante 2

                graph.DrawRoundedRectangle(LineasRectangulo, 162, 267, 25, 5, 3, 3);  //r9
                graph.DrawRoundedRectangle(LineasRectangulo, 103, 267, 25, 5, 3, 3);  //r10
                graph.DrawRoundedRectangle(LineasRectangulo, 44, 267, 25, 5, 3, 3);  //r11


                graph.DrawRoundedRectangle(LineasRectangulo, 96, 214, 91, 7, 3, 3);  //r12 -> Monto Facturado
                graph.DrawRoundedRectangle(LineasRectangulo, 96, 256, 92, 7, 3, 3);  //r13 -> Saldo Total

                graph.DrawRectangle(LineasRectangulo, 54, 239, 100, 15); //r14  -> Primer Codigo de Barras
                graph.DrawRectangle(LineasRectangulo, 54, 273, 100, 15); //r15  -> Segundo Codigo de Barras

                /* 

            //logo 
            pngLogopath = sImageRoute + "logo092015.jpg";
            XImage image = XImage.FromFile(pngLogopath);  //g1
            graph.DrawImage(image, 10, 11, 56, 8);
     */


                //  graph.DrawRoundedRectangle(BrushVerdeAntina, 152, 8, 52, 6, 3, 3);  //r1

                graph.Dispose();
                XGraphics graphfont = XGraphics.FromPdfPage(pdfPage, XGraphicsUnit.Point);



                XBrush brush = XBrushes.Black;
                XPoint xp = new XPoint();


                xp.X = XUnit.FromMillimeter(80);
                xp.Y = XUnit.FromMillimeter(32);
                graphfont.DrawString(sTipoFact, fontGothamBold29, BrushBoleta2015_1, xp);

                //Codigo Factura
                xp.X = XUnit.FromMillimeter(79);
                xp.Y = XUnit.FromMillimeter(34);
                graphfont.DrawString(sCofFact, fontGothamBold4, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(76);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString(sOriginal, fontGothamBold8, BrushBoleta2015_1, xp);


                xp.X = XUnit.FromMillimeter(11);
                xp.Y = XUnit.FromMillimeter(27);
                graphfont.DrawString(sNombreEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("Av. Córdoba 3012 (CP 1187)", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("Ciudad Autónoma de Buenos Aires", fontGothamBook7, BrushBoleta2015_1, xp);

                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("I.V.A. RESPONSABLE INSCRIPTO", fontGothamBook7, BrushBoleta2015_1, xp);

                //total a pagar
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(12);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);


                //fecha de vencimiento
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(15);
                graphfont.DrawString("FECHA DE VENCIMIENTO", fontGothamBold7, BrushBoleta2015_1, xp);


                //Numero de Cliente
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(18);
                graphfont.DrawString("NÚMERO DE CLIENTE", fontGothamBold7, BrushBoleta2015_1, xp);



                //valor de sEstadoTotalPagar 
                XRect rect = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(9), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook8, BrushBoleta2015_1, rect, formatRight);


                //valor de sFechaVencimiento
                XRect rectFechaVencimiento = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(12), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sFechaVencimiento, fontGothamBook8, BrushBoleta2015_1, rectFechaVencimiento, formatRight);


                //valor sNumeroCliente
                XRect rectNumeroCliente = new XRect(XUnit.FromMillimeter(129), XUnit.FromMillimeter(15), 60, 10);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectFechaVencimiento);
                graphfont.DrawString(sNumeroCliente, fontGothamBook8, BrushBoleta2015_1, rectNumeroCliente, formatRight);



                //Leyfact

                if (sTipoFact != "X")
                {
                    xp.X = XUnit.FromMillimeter(95);
                    xp.Y = XUnit.FromMillimeter(26);

                    if (ca.CodFact == "CÓDIGO 08")
                        graphfont.DrawString(sLeyFact, fontGothamBold8, BrushBoleta2015_1, xp);
                    else
                        graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(154);
                    xp.Y = XUnit.FromMillimeter(5);
                    graphfont.DrawString(sLeyFact, fontGothamBold9, BrushBoleta2015_1, xp);

                }
                //Leyfact
                xp.X = XUnit.FromMillimeter(115);
                xp.Y = XUnit.FromMillimeter(26);
                if (ca.CodFact == "CÓDIGO 08")
                    xp.X = XUnit.FromMillimeter(119);
                else
                    xp.X = XUnit.FromMillimeter(115);
                // sNumFact = "Nro.";

                graphfont.DrawString(sNumFact, fontGothamBook9, BrushBoleta2015_1, xp);

                //Fecha 
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(30);
                graphfont.DrawString("FECHA: ", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(106);
                graphfont.DrawString(sFechaFactura, fontGothamBook7, BrushBlack, xp);


                //Cuit
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(33);
                graphfont.DrawString("CUIT", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(102);
                graphfont.DrawString(sNumCuitEmpresa, fontGothamBook7, BrushBoleta2015_1, xp);


                //Convenio Multilateral
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(36);
                graphfont.DrawString("CONV. MULTILATERAL", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(125);
                graphfont.DrawString(sNumConv, fontGothamBook7, BrushBoleta2015_1, xp);


                //Inicio de Actividades
                xp.X = XUnit.FromMillimeter(95);
                xp.Y = XUnit.FromMillimeter(39);
                graphfont.DrawString("INICIO DE ACTIVIDADES", fontGothamBold7, BrushBoleta2015_1, xp);
                xp.X = XUnit.FromMillimeter(127);
                graphfont.DrawString(sFechaInicio, fontGothamBook7, BrushBoleta2015_1, xp);



                //Estado de cuenta al
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(12);
                XRect rectEstadoCuentaEtiq = new XRect(XUnit.FromMillimeter(153), XUnit.FromMillimeter(9), 87, 10);
                graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, rectEstadoCuentaEtiq, formatFarRight);
                // graphfont.DrawRectangle(XPens.Red, rectEstadoCuentaEtiq);

                //graphfont.DrawString("ESTADO DE CUENTA AL", fontGothamBold7, BrushBlack, xp);
                XRect rectEstadoCuenta = new XRect(XUnit.FromMillimeter(181), XUnit.FromMillimeter(9), 55, 10);
                // graphfont.DrawRectangle(XPens.YellowGreen, rectEstadoCuenta);
                graphfont.DrawString(sFechaEstadoCuenta, fontGothamBook7, BrushBlack, rectEstadoCuenta, formatFarRight);


                //Saldo Anterior
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(17);
                graphfont.DrawString("SALDO ANTERIOR", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectSaldoAnterior = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(15), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectSaldoAnterior);
                graphfont.DrawString(sSaldoAnterior, fontGothamBook7, BrushBoleta2015_1, rectSaldoAnterior, formatRight);



                //Monto Actual
                xp.Y = XUnit.FromMillimeter(21);
                graphfont.DrawString("MONTO ACTUAL", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect rectMontoActual = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(19), 60, 9);
                //graphfont.DrawRectangle(XPens.YellowGreen, rectMontoActual);
                graphfont.DrawString(sMontoActual, fontGothamBook7, BrushBoleta2015_1, rectMontoActual, formatRight);


                //total a pagar
                xp.Y = XUnit.FromMillimeter(28);
                graphfont.DrawString("TOTAL A PAGAR", fontGothamBold7, BrushBoleta2015_1, xp);
                //valor de sEstadoTotalPagar 
                XRect recttot = new XRect(XUnit.FromMillimeter(179), XUnit.FromMillimeter(26), 60, 10);
                graphfont.DrawString(sTotalaPagar, fontGothamBook7, BrushBoleta2015_1, recttot, formatRight);
                xp.Y = XUnit.FromMillimeter(54);
                xp.X = XUnit.FromMillimeter(153);
                graphfont.DrawString("DE SU INTERÉS", fontGothamBold7, BrushBlack, xp);


                //Nombre y Apellido
                int rangodesde;
                List<string> lNombreApellido = ParseaCampoLenght(sNombreApellido, fontGothamBold8, 188);// 
                if (lNombreApellido.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(45);
                    graphfont.DrawString(sNombreApellido, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(44);
                    graphfont.DrawString(lNombreApellido[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(47);
                    graphfont.DrawString(lNombreApellido[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 1
                List<string> lDomicilio1 = ParseaCampoLenght(sDomicilio1, fontGothamBold8, 188);// (sDomicilio1, rangodesde, 42, ' ');
                if (lDomicilio1.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(52);
                    graphfont.DrawString(sDomicilio1, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(51);
                    graphfont.DrawString(lDomicilio1[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(54);
                    graphfont.DrawString(lDomicilio1[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);

                }

                //Domicilio 2
                rangodesde = (sDomicilio2.Length < 72) ? 30 : 39;

                List<string> lDomicilio2 = ParseaCampoLenght(sDomicilio2, fontGothamBold8, 188);
                if (lDomicilio2.Count == 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(59);
                    if (!string.IsNullOrEmpty(sDomicilio2.Trim()))
                        graphfont.DrawString(sDomicilio2, fontGothamBold8, BrushBoleta2015_1, xp);
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(58);
                    graphfont.DrawString(lDomicilio2[0], fontGothamBold8, BrushBoleta2015_1, xp);
                    xp.Y = XUnit.FromMillimeter(61);
                    graphfont.DrawString(lDomicilio2[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }


                //Domicilio 3
                xp.X = XUnit.FromMillimeter(25);
                xp.Y = XUnit.FromMillimeter(65);
                rangodesde = (sDomicilio3.Length < 72) ? 30 : 39;
                List<string> lDomicilio3 = ParseaCampoLenght(sDomicilio3, fontGothamBold8, 188);
                graphfont.DrawString(lDomicilio3[0], fontGothamBold8, BrushBoleta2015_1, xp);
                if (lDomicilio3.Count > 1)
                {
                    xp.X = XUnit.FromMillimeter(25);
                    xp.Y = XUnit.FromMillimeter(68);
                    graphfont.DrawString(lDomicilio3[1].Trim(), fontGothamBold8, BrushBoleta2015_1, xp);
                }



                //Periodo
                xp.X = XUnit.FromMillimeter(111);
                xp.Y = XUnit.FromMillimeter(49);
                XRect recPeriodoEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(47), 60, 9);
                graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, recPeriodoEtiq, formatLeft);
                //  graphfont.DrawString("PERÍODO", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recPeriodo = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(47), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recPeriodo);
                graphfont.DrawString(sPeriodo, fontGothamBook7, BrushBoleta2015_1, recPeriodo, formatRight);



                //IVA
                xp.Y = XUnit.FromMillimeter(53);
                XRect recIVAEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(51), 60, 9);
                graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, recIVAEtiq, formatLeft);
                //   graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                //            graphfont.DrawString("IVA", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recIVA = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(51), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recIVA);
                //  graphfont.DrawString(sIVA, fontGothamBook7, BrushBlack, recIVA, formatRight);
                graphfont.DrawString(sIVA, fontGothamBook7, BrushBoleta2015_1, recIVA, formatRight);

                //CUIT
                xp.Y = XUnit.FromMillimeter(57);
                XRect recCUITEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(55), 60, 9);
                graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, recCUITEtiq, formatLeft);
                // graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                //graphfont.DrawString("CUIT Nº", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recCUIT = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(55), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                //     graphfont.DrawString(sCuit, fontGothamBook7, BrushBlack, recCUIT, formatRight);
                graphfont.DrawString(sCuit, fontGothamBook7, BrushBoleta2015_1, recCUIT, formatRight);


                //DNI
                XRect recDNIEtiq = new XRect(XUnit.FromMillimeter(111), XUnit.FromMillimeter(59), 60, 9);
                graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, recDNIEtiq, formatLeft);
                xp.Y = XUnit.FromMillimeter(61);
                //  graphfont.DrawString("DNI", fontGothamBold7, BrushBoleta2015_1, xp);
                XRect recDNI = new XRect(XUnit.FromMillimeter(130), XUnit.FromMillimeter(59), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recCUIT);
                if (!string.IsNullOrEmpty(sDni))
                    graphfont.DrawString(sDni, fontGothamBook7, BrushBoleta2015_1, recDNI, formatRight);


                //Conceptos e Importes
                int valory = 78;
                int maxsplit = 0;
                int interlineado = 4;
                //Conceptos e Importes
                //1  
                XRect rectConcepto1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto1);
                List<string> sConcepto1 = ParseaCampoLenght(sConcepto[0], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto1[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto1, formatLeft);
                if (sConcepto1.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto1bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto1[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto1bis, formatLeft);
                }
                XRect rectImporte1 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                if (!string.IsNullOrEmpty(sImporte[0].Trim()))
                    graphfont.DrawString(sImporte[0], fontGothamBook8, BrushBoleta2015_1, rectImporte1, formatRight);



                //2
                valory = valory + interlineado;
                XRect rectConcepto2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto2 = ParseaCampoLenght(sConcepto[1], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto2[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto2, formatLeft);
                if (sConcepto2.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto2bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto2[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto2bis, formatLeft);
                }
                XRect rectImporte2 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte2);
                if (!string.IsNullOrEmpty(sImporte[1].Trim()))
                    graphfont.DrawString(sImporte[1], fontGothamBook8, BrushBoleta2015_1, rectImporte2, formatRight);


                //3
                valory = valory + interlineado;
                XRect rectConcepto3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto3 = ParseaCampoLenght(sConcepto[2], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto3[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto3, formatLeft);
                if (sConcepto3.Count > 1)
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto3bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto3[1].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto3bis, formatLeft);
                }
                XRect rectImporte3 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //  graphfont.DrawRectangle(XPens.YellowGreen, rectImporte3);
                if (!string.IsNullOrEmpty(sImporte[2].Trim()))
                    graphfont.DrawString(sImporte[2], fontGothamBook8, BrushBoleta2015_1, rectImporte3, formatRight);



                //4
                valory = valory + interlineado;
                XRect rectConcepto4 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto4 = ParseaCampoLenght(sConcepto[3], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto4[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto4, formatLeft);
                if ((sConcepto4.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto4bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto4[2].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto4bis, formatLeft);
                }
                XRect rectImporte4 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte4);
                if (!string.IsNullOrEmpty(sImporte[3].Trim()))
                    graphfont.DrawString(sImporte[3], fontGothamBook8, BrushBoleta2015_1, rectImporte4, formatRight);



                //5
                valory = valory + interlineado;
                XRect rectConcepto5 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                List<string> sConcepto5 = ParseaCampoLenght(sConcepto[4], fontGothamBook8, 300);
                graphfont.DrawString(sConcepto5[0], fontGothamBook8, BrushBoleta2015_1, rectConcepto5, formatLeft);
                if ((sConcepto5.Count > 1) & (maxsplit < 3))
                {
                    valory = valory + interlineado;
                    maxsplit++;
                    XRect rectConcepto5bis = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                    graphfont.DrawString(sConcepto5[0].Trim(), fontGothamBook8, BrushBoleta2015_1, rectConcepto5bis, formatLeft);
                }
                XRect rectImporte5 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //   graphfont.DrawRectangle(XPens.YellowGreen, rectImporte5);
                if (!string.IsNullOrEmpty(sImporte[4].Trim()))
                    graphfont.DrawString(sImporte[4], fontGothamBook8, BrushBoleta2015_1, rectImporte5, formatRight);


                //6
                valory = valory + interlineado;
                XRect rectConcepto6 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto6);
                graphfont.DrawString(sConcepto[5], fontGothamBook8, BrushBoleta2015_1, rectConcepto6, formatLeft);
                XRect rectImporte6 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectImporte6);
                if (!string.IsNullOrEmpty(sImporte[5].Trim()))
                    graphfont.DrawString(sImporte[5], fontGothamBook8, BrushBoleta2015_1, rectImporte6, formatRight);


                //7
                valory = valory + interlineado;
                XRect rectConcepto7 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto7);
                graphfont.DrawString(sConcepto[6], fontGothamBook8, BrushBoleta2015_1, rectConcepto7, formatLeft);
                XRect rectImporte7 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte7);
                if (!string.IsNullOrEmpty(sImporte[6].Trim()))
                    graphfont.DrawString(sImporte[6], fontGothamBook8, BrushBoleta2015_1, rectImporte7, formatRight);

                //8
                valory = valory + interlineado;
                XRect rectConcepto8 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto8);
                graphfont.DrawString(sConcepto[7], fontGothamBook8, BrushBoleta2015_1, rectConcepto8, formatLeft);
                XRect rectImporte8 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //     graphfont.DrawRectangle(XPens.YellowGreen, rectImporte8);
                if (!string.IsNullOrEmpty(sImporte[7].Trim()))
                    graphfont.DrawString(sImporte[7], fontGothamBook8, BrushBoleta2015_1, rectImporte8, formatRight);


                //9
                valory = valory + interlineado;
                XRect rectConcepto9 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto9);
                graphfont.DrawString(sConcepto[8], fontGothamBook8, BrushBoleta2015_1, rectConcepto9, formatLeft);
                XRect rectImporte9 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectImporte9);
                if (!string.IsNullOrEmpty(sImporte[8].Trim()))
                    graphfont.DrawString(sImporte[8], fontGothamBook8, BrushBoleta2015_1, rectImporte9, formatRight);


                //10
                valory = valory + interlineado;
                XRect rectConcepto10 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto10);
                graphfont.DrawString(sConcepto[9], fontGothamBook8, BrushBoleta2015_1, rectConcepto10, formatLeft);
                XRect rectImporte10 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte10);
                if (!string.IsNullOrEmpty(sImporte[9].Trim()))
                    graphfont.DrawString(sImporte[9], fontGothamBook8, BrushBoleta2015_1, rectImporte10, formatRight);

                //11
                valory = valory + interlineado;
                XRect rectConcepto11 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //       graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto11);
                graphfont.DrawString(sConcepto[10], fontGothamBook8, BrushBoleta2015_1, rectConcepto11, formatLeft);
                XRect rectImporte11 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte11);
                if (!string.IsNullOrEmpty(sImporte[10].Trim()))
                    graphfont.DrawString(sImporte[10], fontGothamBook8, BrushBoleta2015_1, rectImporte11, formatRight);

                //12
                valory = valory + interlineado;
                XRect rectConcepto12 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto12);
                graphfont.DrawString(sConcepto[11], fontGothamBook8, BrushBoleta2015_1, rectConcepto12, formatLeft);
                XRect rectImporte12 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //        graphfont.DrawRectangle(XPens.YellowGreen, rectImporte12);
                if (!string.IsNullOrEmpty(sImporte[11].Trim()))
                    graphfont.DrawString(sImporte[11], fontGothamBook8, BrushBoleta2015_1, rectImporte12, formatRight);

                //13
                valory = valory + interlineado;
                XRect rectConcepto13 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto13);
                graphfont.DrawString(sConcepto[12], fontGothamBook8, BrushBoleta2015_1, rectConcepto13, formatLeft);
                XRect rectImporte13 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte13);
                if (!string.IsNullOrEmpty(sImporte[12].Trim()))
                    graphfont.DrawString(sImporte[12], fontGothamBook8, BrushBoleta2015_1, rectImporte13, formatRight);


                //14
                valory = valory + interlineado;
                XRect rectConcepto14 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto14);
                graphfont.DrawString(sConcepto[13], fontGothamBook8, BrushBoleta2015_1, rectConcepto14, formatLeft);
                XRect rectImporte14 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectImporte14);
                if (!string.IsNullOrEmpty(sImporte[13].Trim()))
                    graphfont.DrawString(sImporte[13], fontGothamBook8, BrushBoleta2015_1, rectImporte14, formatRight);


                //15
                valory = valory + interlineado;
                XRect rectConcepto15 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto15);
                graphfont.DrawString(sConcepto[14], fontGothamBook8, BrushBoleta2015_1, rectConcepto15, formatLeft);
                XRect rectImporte15 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //         graphfont.DrawRectangle(XPens.YellowGreen, rectImporte15);
                if (!string.IsNullOrEmpty(sImporte[14].Trim()))
                    graphfont.DrawString(sImporte[14], fontGothamBook8, BrushBoleta2015_1, rectImporte15, formatRight);

                //16
                valory = valory + interlineado;
                XRect rectConcepto16 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectConcepto16);
                graphfont.DrawString(sConcepto[15], fontGothamBook8, BrushBoleta2015_1, rectConcepto16, formatLeft);
                XRect rectImporte16 = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(valory), 60, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectImporte16);
                if (!string.IsNullOrEmpty(sImporte[15].Trim()))
                    graphfont.DrawString(sImporte[15], fontGothamBook8, BrushBoleta2015_1, rectImporte16, formatRight);

                //info adicional 1
                valory = valory + interlineado;
                XRect rectInfoAdicional1 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional1);
                graphfont.DrawString(sInfoAdicional[0], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional1, formatLeft);

                //info adicional 2
                valory = valory + interlineado;
                XRect rectInfoAdicional2 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //           graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional2);
                graphfont.DrawString(sInfoAdicional[1], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional2, formatLeft);

                //info adicional 3
                valory = valory + interlineado;
                XRect rectInfoAdicional3 = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(valory), 268, 9);
                //          graphfont.DrawRectangle(XPens.YellowGreen, rectInfoAdicional3);
                graphfont.DrawString(sInfoAdicional[2], fontGothamBook8, BrushBoleta2015_1, rectInfoAdicional3, formatLeft);



                /*
                //Centro de Atencion
                xp.X = XUnit.FromMillimeter(162);
                xp.Y = XUnit.FromMillimeter(132);
                graphfont.DrawString("CENTROS DE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(137);
                graphfont.DrawString("ATENCIÓN AL CLIENTE", fontGothamMedium11Italic, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(147);
                graphfont.DrawString("5299 9200", fontGothamMedium24Italic, BrushBlack, xp);
                */


                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(157);
                graphfont.DrawString("CAPITAL FEDERAL", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(165);
                xp.Y = XUnit.FromMillimeter(160);
                graphfont.DrawString("Av. Córdoba 3012", fontGothamBook7, BrushBlack, xp);

                xp.X = XUnit.FromMillimeter(173);
                xp.Y = XUnit.FromMillimeter(166);
                graphfont.DrawString("PILAR", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(163);
                xp.Y = XUnit.FromMillimeter(169);
                graphfont.DrawString("Hipólito Yrigoyen 388", fontGothamBook7, BrushBlack, xp);


                // if (dFechaFactura > dFechaCambioTextoSucursalMoron)
                // {
                xp.X = XUnit.FromMillimeter(171);
                xp.Y = XUnit.FromMillimeter(174);
                graphfont.DrawString("MORENO", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(177);
                graphfont.DrawString("Int. Assef 106", fontGothamBook7, BrushBlack, xp);
                /*
                }
                else
                {
                    xp.X = XUnit.FromMillimeter(171);
                    xp.Y = XUnit.FromMillimeter(174);
                    graphfont.DrawString("MORÓN", fontGothamMedium7, BrushBlack, xp);
                    xp.X = XUnit.FromMillimeter(163);
                    xp.Y = XUnit.FromMillimeter(177);
                    graphfont.DrawString("San Martín 308", fontGothamBook7, BrushBlack, xp);
                }
                */
                xp.X = XUnit.FromMillimeter(164);
                xp.Y = XUnit.FromMillimeter(183);
                graphfont.DrawString("FLORENCIO VARELA", fontGothamMedium7, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(169);
                xp.Y = XUnit.FromMillimeter(186);
                graphfont.DrawString("San Juan 115", fontGothamBook7, BrushBlack, xp);


                /*
                xp.X = XUnit.FromMillimeter(153);
                xp.Y = XUnit.FromMillimeter(194);
                graphfont.DrawString("Regístrese para poder consultar", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(155);
                xp.Y = XUnit.FromMillimeter(197);
                graphfont.DrawString("y pagar su factura online en:", fontGothamMedium8, BrushBlack, xp);
                xp.X = XUnit.FromMillimeter(154);
                xp.Y = XUnit.FromMillimeter(204);
                graphfont.DrawString("www.antina.com.ar", fontGothamMedium13Italic, BrushBlack, xp);
                */


                //Concepto      
                XRect rectConcepto = new XRect(XUnit.FromMillimeter(8), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("CONCEPTO", fontGothamMedium8, BrushBlack, rectConcepto, formatCenter);
                //Leyenda Subototal       
                XRect rectImporte = new XRect(XUnit.FromMillimeter(123), XUnit.FromMillimeter(72), 67, 9);
                //    graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaSubtotal);
                graphfont.DrawString("IMPORTE", fontGothamMedium8, BrushBlack, rectImporte, formatCenter);





                //Leyenda Total     
                XRect rectLeyendaTotal = new XRect(XUnit.FromMillimeter(121), XUnit.FromMillimeter(167), 90, 9);
                //      graphfont.DrawRectangle(XPens.YellowGreen, rectLeyendaTotal);
                graphfont.DrawString("TOTAL", fontGothamMedium8, BrushBlack, rectLeyendaTotal, formatCenter);
                XRect rectTotal = new XRect(XUnit.FromMillimeter(127), XUnit.FromMillimeter(175), 60, 9);
                graphfont.DrawString(sEstadoTotalPagar, fontGothamBook8, BrushBoleta2015_1, rectTotal, formatRight);





                //Leyendas Variables
                //anqalizo cada tenxto para ver si son 1 o 2 reenglones

                //P1  
                string[] SplitP1 = p1.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP1_0;
                XRect rectP1_1;
                if (SplitP1.Length > 1)
                {
                    rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(221), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    rectP1_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(224), 67, 7);
                    //  graphfont.DrawRectangle(XPens.Red, rectP1_1);

                    graphfont.DrawString(SplitP1[0], fontArial7B, BrushBoleta2015_1, rectP1_0, formatCenter);
                    graphfont.DrawString(SplitP1[1], fontArial7B, BrushBoleta2015_1, rectP1_1, formatCenter);
                }
                else
                {

                    rectP1_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(223), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP1_0);
                    graphfont.DrawString(SplitP1[0], fontArial7B, BrushBoleta2015_1, rectP1_0, formatCenter);
                }


                //P2
                string[] SplitP2 = p2.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP2_0;
                XRect rectP2_1;
                if (SplitP2.Length > 1)
                {
                    rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(221), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    rectP2_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(224), 67, 7);
                    //       graphfont.DrawRectangle(XPens.Red, rectP2_1);

                    graphfont.DrawString(SplitP2[0], fontArial7B, BrushBoleta2015_1, rectP2_0, formatCenter);
                    graphfont.DrawString(SplitP2[1], fontArial7B, BrushBoleta2015_1, rectP2_1, formatCenter);
                }
                else
                {

                    rectP2_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(223), 67, 7);
                    //      graphfont.DrawRectangle(XPens.Red, rectP2_0);
                    graphfont.DrawString(SplitP2[0], fontArial7B, BrushBoleta2015_1, rectP2_0, formatCenter);
                }



                // P3
                string[] SplitP3 = p3.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP3_0;
                XRect rectP3_1;
                if (SplitP3.Length > 1)
                {
                    rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(221), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    rectP3_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_1);

                    graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                    graphfont.DrawString(SplitP3[1], fontArial7B, BrushBoleta2015_1, rectP3_1, formatCenter);
                }
                else
                {

                    rectP3_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(224), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP3_0);
                    graphfont.DrawString(SplitP3[0], fontArial7B, BrushBoleta2015_1, rectP3_0, formatCenter);
                }





                //P4  --->240  Comprobante Television
                string[] SplitP4 = p4.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP4_0;
                XRect rectP4_1;
                if (SplitP4.Length > 1)
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(230), 67, 7);  //-6
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    rectP4_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(233), 67, 7);  //-3
                    //   graphfont.DrawRectangle(XPens.Red, rectP4_1);

                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                    graphfont.DrawString(SplitP4[1], fontGothamBold7, BrushBoleta2015_1, rectP4_1, formatCenter);
                }
                else
                {
                    rectP4_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(232), 67, 7);  //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP4_0);
                    graphfont.DrawString(SplitP4[0], fontGothamBold7, BrushBoleta2015_1, rectP4_0, formatCenter);
                }



                //P5  --> 240
                string[] SplitP5 = p5.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP5_0;
                XRect rectP5_1;
                if (SplitP5.Length > 1)
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    rectP5_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_1);

                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                    graphfont.DrawString(SplitP5[1], fontGothamBold7, BrushBoleta2015_1, rectP5_1, formatCenter);
                }
                else
                {
                    rectP5_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(232), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP5_0);
                    graphfont.DrawString(SplitP5[0], fontGothamBold7, BrushBoleta2015_1, rectP5_0, formatCenter);
                }



                //P6  ---->266
                string[] SplitP6 = p6.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP6_0;
                XRect rectP6_1;
                if (SplitP6.Length > 1)
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(230), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    rectP6_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(233), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP6_1);

                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                    graphfont.DrawString(SplitP6[1], fontGothamBold7, BrushBoleta2015_1, rectP6_1, formatCenter);
                }
                else
                {
                    rectP6_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(232), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP6_0);
                    graphfont.DrawString(SplitP6[0], fontGothamBold7, BrushBoleta2015_1, rectP6_0, formatCenter);
                }




                //P7   --> 266
                string[] SplitP7 = p7.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP7_0;
                XRect rectP7_1;
                if (SplitP6.Length > 1)
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(269), 67, 7);  // -6
                    //    graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    rectP7_1 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(272), 67, 7);  // -3
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_1);

                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                    graphfont.DrawString(SplitP7[1], fontGothamBold7, BrushBoleta2015_1, rectP7_1, formatCenter);
                }
                else
                {
                    rectP7_0 = new XRect(XUnit.FromMillimeter(21), XUnit.FromMillimeter(268), 67, 7);   //-4
                    //     graphfont.DrawRectangle(XPens.Red, rectP7_0);
                    graphfont.DrawString(SplitP7[0], fontGothamBold7, BrushBoleta2015_1, rectP7_0, formatCenter);
                }




                //P8
                string[] SplitP8 = p8.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP8_0;
                XRect rectP8_1;
                if (SplitP8.Length > 1)
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(269), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    rectP8_1 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(272), 67, 7);
                    //   graphfont.DrawRectangle(XPens.Red, rectP8_1);

                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                    graphfont.DrawString(SplitP8[1], fontGothamBold7, BrushBoleta2015_1, rectP8_1, formatCenter);
                }
                else
                {
                    rectP8_0 = new XRect(XUnit.FromMillimeter(81), XUnit.FromMillimeter(268), 67, 7);
                    //     graphfont.DrawRectangle(XPens.Red, rectP8_0);
                    graphfont.DrawString(SplitP8[0], fontGothamBold7, BrushBoleta2015_1, rectP8_0, formatCenter);
                }




                //P9
                string[] SplitP9 = p9.Split(new string[] { "|" }, StringSplitOptions.None);
                XRect rectP9_0;
                XRect rectP9_1;
                if (SplitP6.Length > 1)
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(269), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    rectP9_1 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(272), 67, 7);
                    //    graphfont.DrawRectangle(XPens.Red, rectP9_1);

                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatCenter);
                    graphfont.DrawString(SplitP9[1], fontGothamBold7, BrushBoleta2015_1, rectP9_1, formatCenter);
                }
                else
                {
                    rectP9_0 = new XRect(XUnit.FromMillimeter(143), XUnit.FromMillimeter(268), 67, 7);
                    // graphfont.DrawRectangle(XPens.Red, rectP9_0);
                    graphfont.DrawString(SplitP9[0], fontGothamBold7, BrushBoleta2015_1, rectP9_0, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(219);
                graphfont.DrawString(p10, fontGothamBold9, BrushBoleta2015_1, xp);

                xp.X = XUnit.FromMillimeter(98);
                xp.Y = XUnit.FromMillimeter(261);
                graphfont.DrawString(p11, fontGothamBold9, BrushBoleta2015_1, xp);


                // Footer
                XRect recValorCAE = new XRect(XUnit.FromMillimeter(9), XUnit.FromMillimeter(204), 110, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorCAE );
                graphfont.DrawString(sValorCae, fontGothamBook7, BrushBlack, recValorCAE, formatFar);

                XRect recValorFechaVencimientoCAE = new XRect(XUnit.FromMillimeter(45), XUnit.FromMillimeter(204), 130, 10);
                //  graphfont.DrawRectangle(XPens.YellowGreen, recValorFechaVencimientoCAE);
                graphfont.DrawString(sValorFechaVencimientoCae, fontGothamBook7, BrushBlack, recValorFechaVencimientoCAE, formatFar);

                XRect recValorDefensaConsumidor = new XRect(XUnit.FromMillimeter(68), XUnit.FromMillimeter(204), 230, 10);
                //   graphfont.DrawRectangle(XPens.YellowGreen, recValorDefensaConsumidor);
                graphfont.DrawString("Teléfono Gratuito CABA, Área de Defensa y Protección al Consumidor: 147", fontGothamBold5, BrushBoleta2015_1, recValorDefensaConsumidor, formatFarRight);

                /*
                if ((ca.DebitoAutomatico == false))
                {


                    if (!string.IsNullOrEmpty(sCodBarra2))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(235);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode2 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode2.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode2.Text = sCodBarra2;//value of code to draw on page
                        BarCode2.StartChar = Convert.ToChar("*");
                        BarCode2.EndChar = Convert.ToChar("*");
                        BarCode2.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode2.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode2.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode2, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(246);
                        graphfont.DrawString(sCodBarra2, fontGothamBook9, brush, xp);
                    }

              

                }

      if (!string.IsNullOrEmpty(sCodBarra3))
                    {
                        xp.X = XUnit.FromMillimeter(56);
                        xp.Y = XUnit.FromMillimeter(272);
                        PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode3 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                        BarCode3.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                        //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                        BarCode3.Text = sCodBarra3;//value of code to draw on page
                        BarCode3.StartChar = Convert.ToChar("*");
                        BarCode3.EndChar = Convert.ToChar("*");
                        BarCode3.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                        BarCode3.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                        BarCode3.Size.ToXPoint();
                        graphfont.DrawBarCode(BarCode3, xp);
                        xp.X = XUnit.FromMillimeter(57);
                        xp.Y = XUnit.FromMillimeter(283);
                        graphfont.DrawString(sCodBarra3, fontGothamBook9, brush, xp);
                    }
                 * */


                if (!string.IsNullOrEmpty(sCodBarraAfip))
                {

                    xp.X = XUnit.FromMillimeter(32);
                    xp.Y = XUnit.FromMillimeter(183);
                    PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCodeAfip = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                    BarCodeAfip.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                    //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                    BarCodeAfip.Text = sCodBarraAfip;//value of code to draw on page
                    BarCodeAfip.StartChar = Convert.ToChar("*");
                    BarCodeAfip.EndChar = Convert.ToChar("*");
                    BarCodeAfip.Size = new XSize(new XPoint(Convert.ToDouble(262), Convert.ToDouble(20)));
                    BarCodeAfip.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.LeftToRight;
                    BarCodeAfip.Size.ToXPoint();
                    graphfont.DrawBarCode(BarCodeAfip, xp);
                    // xp.X = XUnit.FromMillimeter(45);
                    //   xp.Y = XUnit.FromMillimeter(194);
                    //   graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBoleta2015_1, xp);

                    XRect rectBarraAfip = new XRect(XUnit.FromMillimeter(30), XUnit.FromMillimeter(191), 264, 9);
                    //graphfont.DrawRectangle(XPens.YellowGreen, rectBarraAfip);
                    graphfont.DrawString(sCodBarraAfip, fontGothamBook7, BrushBlack, rectBarraAfip, formatCenter);
                }

                xp.X = XUnit.FromMillimeter(12);
                xp.Y = XUnit.FromMillimeter(68);
                PdfSharp.Drawing.BarCodes.Code2of5Interleaved BarCode1 = new PdfSharp.Drawing.BarCodes.Code2of5Interleaved();
                BarCode1.TextLocation = PdfSharp.Drawing.BarCodes.TextLocation.None;
                //BarCode39.TextLocation = new PdfSharp.Drawing.BarCodes.TextLocation();
                BarCode1.Text = sCodBarra1;//value of code to draw on page
                BarCode1.StartChar = Convert.ToChar("*");
                BarCode1.EndChar = Convert.ToChar("*");
                XSize BARCODE_SIZE = new XSize(new XPoint(Convert.ToDouble(67), Convert.ToDouble(19)));
                BarCode1.Size = BARCODE_SIZE;
                BarCode1.Direction = PdfSharp.Drawing.BarCodes.CodeDirection.BottomToTop;
                XFont fontBARCODE = new XFont("Arial", 50, XFontStyle.Regular);
                BarCode1.Size.ToXPoint();
                graphfont.DrawBarCode(BarCode1, xp);

                graphfont.RotateTransform(90);
                graphfont.DrawString(sCodBarra1, fontArial6, XBrushes.Black, new XPoint(140, -55));

                graphfont.Dispose();




            }
            catch (Exception ex)
            {
                //return null;
                throw new System.ArgumentException(ca.Scomprobante + " " + ex.Message, "FgetPageFacturaBsal1Mod092015");

            }

        }


    }
}
